#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KairosSceneCapture

#include "Basic.hpp"

#include "WebBrowser_structs.hpp"
#include "KairosSceneCapture_structs.hpp"


namespace SDK::Params
{

// Function KairosSceneCapture.KairosCaptureStatics.GetSceneManager
// 0x0010 (0x0010 - 0x0000)
struct KairosCaptureStatics_GetSceneManager final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AKairosSceneManagerActor*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KairosCaptureStatics_GetSceneManager) == 0x000008, "Wrong alignment on KairosCaptureStatics_GetSceneManager");
static_assert(sizeof(KairosCaptureStatics_GetSceneManager) == 0x000010, "Wrong size on KairosCaptureStatics_GetSceneManager");
static_assert(offsetof(KairosCaptureStatics_GetSceneManager, WorldContextObject) == 0x000000, "Member 'KairosCaptureStatics_GetSceneManager::WorldContextObject' has a wrong offset!");
static_assert(offsetof(KairosCaptureStatics_GetSceneManager, ReturnValue) == 0x000008, "Member 'KairosCaptureStatics_GetSceneManager::ReturnValue' has a wrong offset!");

// Function KairosSceneCapture.KairosCaptureStatics.ToggleAutoRotate
// 0x0001 (0x0001 - 0x0000)
struct KairosCaptureStatics_ToggleAutoRotate final
{
public:
	bool                                          bIsAutoRotateAllowed;                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KairosCaptureStatics_ToggleAutoRotate) == 0x000001, "Wrong alignment on KairosCaptureStatics_ToggleAutoRotate");
static_assert(sizeof(KairosCaptureStatics_ToggleAutoRotate) == 0x000001, "Wrong size on KairosCaptureStatics_ToggleAutoRotate");
static_assert(offsetof(KairosCaptureStatics_ToggleAutoRotate, bIsAutoRotateAllowed) == 0x000000, "Member 'KairosCaptureStatics_ToggleAutoRotate::bIsAutoRotateAllowed' has a wrong offset!");

// Function KairosSceneCapture.KairosCaptureStatics.PauseOrResumeSnippet
// 0x0038 (0x0038 - 0x0000)
struct KairosCaptureStatics_PauseOrResumeSnippet final
{
public:
	struct FKairosSnippetParams                   Params_0;                                          // 0x0000(0x0018)(Parm, NativeAccessSpecifierPublic)
	struct FWebJSResponse                         Response;                                          // 0x0018(0x0020)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KairosCaptureStatics_PauseOrResumeSnippet) == 0x000008, "Wrong alignment on KairosCaptureStatics_PauseOrResumeSnippet");
static_assert(sizeof(KairosCaptureStatics_PauseOrResumeSnippet) == 0x000038, "Wrong size on KairosCaptureStatics_PauseOrResumeSnippet");
static_assert(offsetof(KairosCaptureStatics_PauseOrResumeSnippet, Params_0) == 0x000000, "Member 'KairosCaptureStatics_PauseOrResumeSnippet::Params_0' has a wrong offset!");
static_assert(offsetof(KairosCaptureStatics_PauseOrResumeSnippet, Response) == 0x000018, "Member 'KairosCaptureStatics_PauseOrResumeSnippet::Response' has a wrong offset!");

// Function KairosSceneCapture.KairosGameModeBase.GetDefaultConfig
// 0x0008 (0x0008 - 0x0000)
struct KairosGameModeBase_GetDefaultConfig final
{
public:
	class UKairosConfig*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KairosGameModeBase_GetDefaultConfig) == 0x000008, "Wrong alignment on KairosGameModeBase_GetDefaultConfig");
static_assert(sizeof(KairosGameModeBase_GetDefaultConfig) == 0x000008, "Wrong size on KairosGameModeBase_GetDefaultConfig");
static_assert(offsetof(KairosGameModeBase_GetDefaultConfig, ReturnValue) == 0x000000, "Member 'KairosGameModeBase_GetDefaultConfig::ReturnValue' has a wrong offset!");

// Function KairosSceneCapture.KairosHeroBase.BeginCapture
// 0x0160 (0x0160 - 0x0000)
struct KairosHeroBase_BeginCapture final
{
public:
	struct FKairosAnimationFramingInfo            FramingInfo;                                       // 0x0000(0x0050)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	struct FKairosCaptureParams                   CaptureParams;                                     // 0x0050(0x0100)(Parm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0150(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_151[0xF];                                      // 0x0151(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KairosHeroBase_BeginCapture) == 0x000010, "Wrong alignment on KairosHeroBase_BeginCapture");
static_assert(sizeof(KairosHeroBase_BeginCapture) == 0x000160, "Wrong size on KairosHeroBase_BeginCapture");
static_assert(offsetof(KairosHeroBase_BeginCapture, FramingInfo) == 0x000000, "Member 'KairosHeroBase_BeginCapture::FramingInfo' has a wrong offset!");
static_assert(offsetof(KairosHeroBase_BeginCapture, CaptureParams) == 0x000050, "Member 'KairosHeroBase_BeginCapture::CaptureParams' has a wrong offset!");
static_assert(offsetof(KairosHeroBase_BeginCapture, ReturnValue) == 0x000150, "Member 'KairosHeroBase_BeginCapture::ReturnValue' has a wrong offset!");

// Function KairosSceneCapture.KairosHeroBase.EndCapture
// 0x0001 (0x0001 - 0x0000)
struct KairosHeroBase_EndCapture final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KairosHeroBase_EndCapture) == 0x000001, "Wrong alignment on KairosHeroBase_EndCapture");
static_assert(sizeof(KairosHeroBase_EndCapture) == 0x000001, "Wrong size on KairosHeroBase_EndCapture");
static_assert(offsetof(KairosHeroBase_EndCapture, ReturnValue) == 0x000000, "Member 'KairosHeroBase_EndCapture::ReturnValue' has a wrong offset!");

// Function KairosSceneCapture.KairosSceneManagerActor.BeginEmotePlaybackForPlayer
// 0x0020 (0x0020 - 0x0000)
struct KairosSceneManagerActor_BeginEmotePlaybackForPlayer final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EmoteID;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(KairosSceneManagerActor_BeginEmotePlaybackForPlayer) == 0x000008, "Wrong alignment on KairosSceneManagerActor_BeginEmotePlaybackForPlayer");
static_assert(sizeof(KairosSceneManagerActor_BeginEmotePlaybackForPlayer) == 0x000020, "Wrong size on KairosSceneManagerActor_BeginEmotePlaybackForPlayer");
static_assert(offsetof(KairosSceneManagerActor_BeginEmotePlaybackForPlayer, PlayerID) == 0x000000, "Member 'KairosSceneManagerActor_BeginEmotePlaybackForPlayer::PlayerID' has a wrong offset!");
static_assert(offsetof(KairosSceneManagerActor_BeginEmotePlaybackForPlayer, EmoteID) == 0x000010, "Member 'KairosSceneManagerActor_BeginEmotePlaybackForPlayer::EmoteID' has a wrong offset!");

// Function KairosSceneCapture.KairosSceneManagerActor.GetSceneInfo
// 0x0020 (0x0020 - 0x0000)
struct KairosSceneManagerActor_GetSceneInfo final
{
public:
	struct FKairosSceneInfo                       ReturnValue;                                       // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KairosSceneManagerActor_GetSceneInfo) == 0x000008, "Wrong alignment on KairosSceneManagerActor_GetSceneInfo");
static_assert(sizeof(KairosSceneManagerActor_GetSceneInfo) == 0x000020, "Wrong size on KairosSceneManagerActor_GetSceneInfo");
static_assert(offsetof(KairosSceneManagerActor_GetSceneInfo, ReturnValue) == 0x000000, "Member 'KairosSceneManagerActor_GetSceneInfo::ReturnValue' has a wrong offset!");

// Function KairosSceneCapture.KairosSceneManagerActor.OLD_OnSceneSetupComplete
// 0x0020 (0x0020 - 0x0000)
struct KairosSceneManagerActor_OLD_OnSceneSetupComplete final
{
public:
	struct FKairosSceneInfo                       CompleteSceneInfoCopy;                             // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(KairosSceneManagerActor_OLD_OnSceneSetupComplete) == 0x000008, "Wrong alignment on KairosSceneManagerActor_OLD_OnSceneSetupComplete");
static_assert(sizeof(KairosSceneManagerActor_OLD_OnSceneSetupComplete) == 0x000020, "Wrong size on KairosSceneManagerActor_OLD_OnSceneSetupComplete");
static_assert(offsetof(KairosSceneManagerActor_OLD_OnSceneSetupComplete, CompleteSceneInfoCopy) == 0x000000, "Member 'KairosSceneManagerActor_OLD_OnSceneSetupComplete::CompleteSceneInfoCopy' has a wrong offset!");

// Function KairosSceneCapture.KairosSceneManagerActor.PauseOrResumeSnippet
// 0x0018 (0x0018 - 0x0000)
struct KairosSceneManagerActor_PauseOrResumeSnippet final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldPase;                                       // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(KairosSceneManagerActor_PauseOrResumeSnippet) == 0x000008, "Wrong alignment on KairosSceneManagerActor_PauseOrResumeSnippet");
static_assert(sizeof(KairosSceneManagerActor_PauseOrResumeSnippet) == 0x000018, "Wrong size on KairosSceneManagerActor_PauseOrResumeSnippet");
static_assert(offsetof(KairosSceneManagerActor_PauseOrResumeSnippet, PlayerID) == 0x000000, "Member 'KairosSceneManagerActor_PauseOrResumeSnippet::PlayerID' has a wrong offset!");
static_assert(offsetof(KairosSceneManagerActor_PauseOrResumeSnippet, bShouldPase) == 0x000010, "Member 'KairosSceneManagerActor_PauseOrResumeSnippet::bShouldPase' has a wrong offset!");

}

