#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MusicManager

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MusicManager.MusicManager_C.ExecuteUbergraph_MusicManager
// 0x03C8 (0x03C8 - 0x0000)
struct MusicManager_C_ExecuteUbergraph_MusicManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicManagerBank*            CallFunc_GetMusicBank_ReturnValue;                 // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UFortMusicVoice* Voice)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_3;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicManagerBank*            CallFunc_GetMusicBank_ReturnValue_1;               // 0x0058(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortMusicManagerBank*            CallFunc_GetMusicBank_ReturnValue_2;               // 0x0068(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_3;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_2;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_4;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_Sound_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicManagerBank*            CallFunc_GetMusicBank_ReturnValue_3;               // 0x00B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicAsset*                  CallFunc_GetAssetFromDayPhase_ReturnValue;         // 0x00C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMusicVoice*                        CallFunc_ChangePrimaryMusic_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_5;       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 K2Node_Event_CurrentDayPhase;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 K2Node_Event_PreviousDayPhase;                     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bAtCreation;                          // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicManagerBank*            CallFunc_GetMusicBank_ReturnValue_4;               // 0x0128(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicAsset*                  CallFunc_GetAssetFromDayPhase_ReturnValue_1;       // 0x0138(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMusicAsset*                        K2Node_Event_NewMusicAsset;                        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMusicVoice*                        CallFunc_PlayMusicVoice_ReturnValue;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time_1;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Time;                           // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMusicVoice*                        K2Node_CustomEvent_Voice;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_6;                             // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_7;                             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_6;       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMusicManagerBank*                  K2Node_Event_NewBank;                              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMusicVoice*                        CallFunc_ChangePrimaryMusic_ReturnValue_1;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortPlayerDeathReport                 K2Node_Event_DeathReport;                          // 0x0198(0x0050)(ConstParm)
	float                                         K2Node_CustomEvent_Counter;                        // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_3;               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicManagerBank*            CallFunc_GetMusicBank_ReturnValue_5;               // 0x0200(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMusicVoice*                        CallFunc_ChangePrimaryMusic_ReturnValue_2;         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        K2Node_CustomEvent_Mission_Music;                  // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_2;               // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortCombatThresholds                         K2Node_Event_OldThreshold;                         // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCombatThresholds                         K2Node_Event_NewThreshold;                         // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_3;                     // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0237(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AFortPlayerPawn*                        CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_7;        // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_246[0x2];                                      // 0x0246(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_7;       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortMusicAsset*                  CallFunc_GetAssetFromCombatIntensity_ReturnValue;  // 0x0250(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMusicVoice*                        CallFunc_ChangePrimaryMusic_ReturnValue_3;         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26B[0x1];                                      // 0x026B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicAsset*                  CallFunc_GetAssetFromCombatIntensity_ReturnValue_1; // 0x0280(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMusicVoice*                        CallFunc_ChangePrimaryMusic_ReturnValue_4;         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x029C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x02B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicManagerBank*            CallFunc_GetMusicBank_ReturnValue_6;               // 0x02C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortMusicAsset*                  CallFunc_GetAssetFromDayPhase_ReturnValue_2;       // 0x02C8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Is_Valid_Mission_Timer;         // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Is_Demeter;                     // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEventHeatPercent_ReturnValue;          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_1;        // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E2[0x2];                                      // 0x02E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_2;        // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_3;        // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x02ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x02EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x02EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicAsset*                  CallFunc_GetAssetFromCombatIntensity_ReturnValue_2; // 0x0318(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_4;        // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMusicVoice*                        CallFunc_ChangePrimaryMusic_ReturnValue_5;         // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_8;         // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_5;        // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_6;        // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_9;         // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_7;        // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_8;        // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_3;             // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicAsset*                  CallFunc_GetAssetFromCombatIntensity_ReturnValue_3; // 0x0380(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_9;        // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortMusicVoice*                        CallFunc_ChangePrimaryMusic_ReturnValue_6;         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_10;       // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_11;       // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_12;       // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEventHeatPercent_ReturnValue_13;       // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x03B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_3;            // 0x03B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B6[0x2];                                      // 0x03B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_2;                  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_3;                  // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_ExecuteUbergraph_MusicManager) == 0x000008, "Wrong alignment on MusicManager_C_ExecuteUbergraph_MusicManager");
static_assert(sizeof(MusicManager_C_ExecuteUbergraph_MusicManager) == 0x0003C8, "Wrong size on MusicManager_C_ExecuteUbergraph_MusicManager");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, EntryPoint) == 0x000000, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x00000C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetMusicBank_ReturnValue) == 0x000018, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetMusicBank_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Has_Been_Initd_Variable) == 0x000020, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000021, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_IsValid_ReturnValue) == 0x000035, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000036, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_IsDead_ReturnValue) == 0x000041, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000044, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetGameTimeInSeconds_ReturnValue_3) == 0x000048, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetGameTimeInSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000050, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetMusicBank_ReturnValue_1) == 0x000058, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetMusicBank_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_IsClosed_Variable) == 0x000060, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_float_Variable) == 0x000064, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetMusicBank_ReturnValue_2) == 0x000068, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetMusicBank_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Sound_3) == 0x000070, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Sound_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Sound_2) == 0x000078, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Sound_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Has_Been_Initd_Variable_1) == 0x000080, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_float_Variable_1) == 0x000084, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetGameTimeInSeconds_ReturnValue_4) == 0x000088, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetGameTimeInSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Sound_1) == 0x000090, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Sound_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000098, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_SpawnSound2D_ReturnValue) == 0x0000A0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0000A8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0000A9, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetMusicBank_ReturnValue_3) == 0x0000B0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetMusicBank_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_IsClosed_Variable_1) == 0x0000B8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetAssetFromDayPhase_ReturnValue) == 0x0000C0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetAssetFromDayPhase_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_ChangePrimaryMusic_ReturnValue) == 0x0000C8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_ChangePrimaryMusic_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Variable) == 0x0000D0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetGameTimeInSeconds_ReturnValue_5) == 0x0000D4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetGameTimeInSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_CurrentDayPhase) == 0x0000D8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_PreviousDayPhase) == 0x0000D9, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_bAtCreation) == 0x0000DA, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_bAtCreation' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_float_Variable_2) == 0x0000DC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Variable_1) == 0x0000E0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Not_PreBool_ReturnValue) == 0x0000E1, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Variable_2) == 0x0000E2, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_float_Variable_3) == 0x0000E4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Variable_3) == 0x0000E9, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000EA, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000EB, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Variable_4) == 0x0000EC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000ED, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_float_Variable_4) == 0x0000F4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000F8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0000FC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_float_Variable_5) == 0x000100, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000104, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000108, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000118, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x000120, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetMusicBank_ReturnValue_4) == 0x000128, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetMusicBank_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Has_Been_Initd_Variable_2) == 0x000130, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetAssetFromDayPhase_ReturnValue_1) == 0x000138, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetAssetFromDayPhase_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_NewMusicAsset) == 0x000140, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_NewMusicAsset' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_PlayMusicVoice_ReturnValue) == 0x000148, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_PlayMusicVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Time_1) == 0x000150, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Time_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Time) == 0x000154, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000158, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00015C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Voice) == 0x000160, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Voice' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Variable_5) == 0x000168, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_float_Variable_6) == 0x00016C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_IsClosed_Variable_2) == 0x000170, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_float_Variable_7) == 0x000174, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetGameTimeInSeconds_ReturnValue_6) == 0x000178, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetGameTimeInSeconds_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00017C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_NewBank) == 0x000180, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_NewBank' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x000188, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_ChangePrimaryMusic_ReturnValue_1) == 0x000190, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_ChangePrimaryMusic_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_DeathReport) == 0x000198, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_DeathReport' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Counter) == 0x0001E8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Counter' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001EC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_SpawnSound2D_ReturnValue_1) == 0x0001F0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Has_Been_Initd_Variable_3) == 0x0001F8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Has_Been_Initd_Variable_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanOR_ReturnValue) == 0x0001F9, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0001FA, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetMusicBank_ReturnValue_5) == 0x000200, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetMusicBank_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_ChangePrimaryMusic_ReturnValue_2) == 0x000208, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_ChangePrimaryMusic_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_IsValid_ReturnValue_3) == 0x000210, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Sound) == 0x000218, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Mission_Music) == 0x000220, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Mission_Music' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_SpawnSound2D_ReturnValue_2) == 0x000228, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_SpawnSound2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_Variable_6) == 0x000230, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x000231, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_OldThreshold) == 0x000232, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_OldThreshold' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Event_NewThreshold) == 0x000233, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Event_NewThreshold' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanOR_ReturnValue_1) == 0x000234, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanOR_ReturnValue_2) == 0x000235, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, Temp_bool_IsClosed_Variable_3) == 0x000236, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::Temp_bool_IsClosed_Variable_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_IsValid_ReturnValue_4) == 0x000237, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000238, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_IsValid_ReturnValue_5) == 0x000240, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanAND_ReturnValue) == 0x000241, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x000242, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Not_PreBool_ReturnValue_3) == 0x000243, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_EqualEqual_NameName_ReturnValue_7) == 0x000244, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_EqualEqual_NameName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_MakeLiteralByte_ReturnValue) == 0x000245, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetGameTimeInSeconds_ReturnValue_7) == 0x000248, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetGameTimeInSeconds_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00024C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetAssetFromCombatIntensity_ReturnValue) == 0x000250, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetAssetFromCombatIntensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_MakeLiteralInt_ReturnValue) == 0x000258, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_ChangePrimaryMusic_ReturnValue_3) == 0x000260, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_ChangePrimaryMusic_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_IntInt_ReturnValue) == 0x000268, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanAND_ReturnValue_1) == 0x000269, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00026A, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00026C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000270, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000274, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000278, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000279, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetAssetFromCombatIntensity_ReturnValue_1) == 0x000280, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetAssetFromCombatIntensity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanAND_ReturnValue_2) == 0x000288, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_ChangePrimaryMusic_ReturnValue_4) == 0x000290, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_ChangePrimaryMusic_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_SwitchEnum_CmpSuccess) == 0x000298, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x00029C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0002B0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x0002B8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetMusicBank_ReturnValue_6) == 0x0002C0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetMusicBank_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetAssetFromDayPhase_ReturnValue_2) == 0x0002C8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetAssetFromDayPhase_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0002D0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Not_PreBool_ReturnValue_4) == 0x0002D1, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Is_Valid_Mission_Timer) == 0x0002D2, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Is_Valid_Mission_Timer' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanAND_ReturnValue_3) == 0x0002D3, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_CustomEvent_Is_Demeter) == 0x0002D4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_CustomEvent_Is_Demeter' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue) == 0x0002D8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_1) == 0x0002DC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x0002E0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x0002E1, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_2) == 0x0002E4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_3) == 0x0002E8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x0002EC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x0002ED, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanOR_ReturnValue_3) == 0x0002EE, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanOR_ReturnValue_4) == 0x0002EF, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0002F0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanOR_ReturnValue_5) == 0x0002F1, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0002F4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x0002F8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002FC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x000300, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Select_Default) == 0x000304, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000308, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_FInterpTo_ReturnValue) == 0x00030C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanAND_ReturnValue_4) == 0x000310, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetAssetFromCombatIntensity_ReturnValue_2) == 0x000318, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetAssetFromCombatIntensity_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_4) == 0x000320, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_ChangePrimaryMusic_ReturnValue_5) == 0x000328, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_ChangePrimaryMusic_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_8) == 0x000330, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_5) == 0x000334, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_6) == 0x000338, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_FloatFloat_ReturnValue_9) == 0x00033C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_7) == 0x000340, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanOR_ReturnValue_6) == 0x000344, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_8) == 0x000348, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x00034C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Add_FloatFloat_ReturnValue) == 0x000350, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000354, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000358, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00035C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x000360, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000364, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_MakeLiteralInt_ReturnValue_3) == 0x000368, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_MakeLiteralInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Select_Default_1) == 0x00036C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000370, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_FInterpTo_ReturnValue_1) == 0x000374, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_BooleanAND_ReturnValue_5) == 0x000378, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetAssetFromCombatIntensity_ReturnValue_3) == 0x000380, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetAssetFromCombatIntensity_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_9) == 0x000388, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_ChangePrimaryMusic_ReturnValue_6) == 0x000390, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_ChangePrimaryMusic_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_10) == 0x000398, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_11) == 0x00039C, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_12) == 0x0003A0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0003A4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_GetEventHeatPercent_ReturnValue_13) == 0x0003A8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_GetEventHeatPercent_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x0003AC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x0003B0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x0003B4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_Less_FloatFloat_ReturnValue_3) == 0x0003B5, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_Less_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Select_Default_2) == 0x0003B8, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, K2Node_Select_Default_3) == 0x0003BC, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_FInterpTo_ReturnValue_2) == 0x0003C0, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MusicManager_C_ExecuteUbergraph_MusicManager, CallFunc_FInterpTo_ReturnValue_3) == 0x0003C4, "Member 'MusicManager_C_ExecuteUbergraph_MusicManager::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");

// Function MusicManager.MusicManager_C.Demeter Mission
// 0x0001 (0x0001 - 0x0000)
struct MusicManager_C_Demeter_Mission final
{
public:
	bool                                          Param_Is_Demeter;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicManager_C_Demeter_Mission) == 0x000001, "Wrong alignment on MusicManager_C_Demeter_Mission");
static_assert(sizeof(MusicManager_C_Demeter_Mission) == 0x000001, "Wrong size on MusicManager_C_Demeter_Mission");
static_assert(offsetof(MusicManager_C_Demeter_Mission, Param_Is_Demeter) == 0x000000, "Member 'MusicManager_C_Demeter_Mission::Param_Is_Demeter' has a wrong offset!");

// Function MusicManager.MusicManager_C.Get Valid Mission Timer Update
// 0x0001 (0x0001 - 0x0000)
struct MusicManager_C_Get_Valid_Mission_Timer_Update final
{
public:
	bool                                          Is_Valid_Mission_Timer;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicManager_C_Get_Valid_Mission_Timer_Update) == 0x000001, "Wrong alignment on MusicManager_C_Get_Valid_Mission_Timer_Update");
static_assert(sizeof(MusicManager_C_Get_Valid_Mission_Timer_Update) == 0x000001, "Wrong size on MusicManager_C_Get_Valid_Mission_Timer_Update");
static_assert(offsetof(MusicManager_C_Get_Valid_Mission_Timer_Update, Is_Valid_Mission_Timer) == 0x000000, "Member 'MusicManager_C_Get_Valid_Mission_Timer_Update::Is_Valid_Mission_Timer' has a wrong offset!");

// Function MusicManager.MusicManager_C.OnThresholdChange
// 0x0002 (0x0002 - 0x0000)
struct MusicManager_C_OnThresholdChange final
{
public:
	EFortCombatThresholds                         OldThreshold;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCombatThresholds                         NewThreshold;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_OnThresholdChange) == 0x000001, "Wrong alignment on MusicManager_C_OnThresholdChange");
static_assert(sizeof(MusicManager_C_OnThresholdChange) == 0x000002, "Wrong size on MusicManager_C_OnThresholdChange");
static_assert(offsetof(MusicManager_C_OnThresholdChange, OldThreshold) == 0x000000, "Member 'MusicManager_C_OnThresholdChange::OldThreshold' has a wrong offset!");
static_assert(offsetof(MusicManager_C_OnThresholdChange, NewThreshold) == 0x000001, "Member 'MusicManager_C_OnThresholdChange::NewThreshold' has a wrong offset!");

// Function MusicManager.MusicManager_C.Stop Mission Music
// 0x0008 (0x0008 - 0x0000)
struct MusicManager_C_Stop_Mission_Music final
{
public:
	class UAudioComponent*                        Param_Mission_Music;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Stop_Mission_Music) == 0x000008, "Wrong alignment on MusicManager_C_Stop_Mission_Music");
static_assert(sizeof(MusicManager_C_Stop_Mission_Music) == 0x000008, "Wrong size on MusicManager_C_Stop_Mission_Music");
static_assert(offsetof(MusicManager_C_Stop_Mission_Music, Param_Mission_Music) == 0x000000, "Member 'MusicManager_C_Stop_Mission_Music::Param_Mission_Music' has a wrong offset!");

// Function MusicManager.MusicManager_C.Play Mission Music
// 0x0008 (0x0008 - 0x0000)
struct MusicManager_C_Play_Mission_Music final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Play_Mission_Music) == 0x000008, "Wrong alignment on MusicManager_C_Play_Mission_Music");
static_assert(sizeof(MusicManager_C_Play_Mission_Music) == 0x000008, "Wrong size on MusicManager_C_Play_Mission_Music");
static_assert(offsetof(MusicManager_C_Play_Mission_Music, Sound) == 0x000000, "Member 'MusicManager_C_Play_Mission_Music::Sound' has a wrong offset!");

// Function MusicManager.MusicManager_C.Play Countdown Music
// 0x0004 (0x0004 - 0x0000)
struct MusicManager_C_Play_Countdown_Music final
{
public:
	float                                         Counter;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Play_Countdown_Music) == 0x000004, "Wrong alignment on MusicManager_C_Play_Countdown_Music");
static_assert(sizeof(MusicManager_C_Play_Countdown_Music) == 0x000004, "Wrong size on MusicManager_C_Play_Countdown_Music");
static_assert(offsetof(MusicManager_C_Play_Countdown_Music, Counter) == 0x000000, "Member 'MusicManager_C_Play_Countdown_Music::Counter' has a wrong offset!");

// Function MusicManager.MusicManager_C.OnPlayerDowned
// 0x0050 (0x0050 - 0x0000)
struct MusicManager_C_OnPlayerDowned final
{
public:
	struct FFortPlayerDeathReport                 DeathReport;                                       // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MusicManager_C_OnPlayerDowned) == 0x000008, "Wrong alignment on MusicManager_C_OnPlayerDowned");
static_assert(sizeof(MusicManager_C_OnPlayerDowned) == 0x000050, "Wrong size on MusicManager_C_OnPlayerDowned");
static_assert(offsetof(MusicManager_C_OnPlayerDowned, DeathReport) == 0x000000, "Member 'MusicManager_C_OnPlayerDowned::DeathReport' has a wrong offset!");

// Function MusicManager.MusicManager_C.OnMusicBankChanged
// 0x0008 (0x0008 - 0x0000)
struct MusicManager_C_OnMusicBankChanged final
{
public:
	class UFortMusicManagerBank*                  NewBank;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_OnMusicBankChanged) == 0x000008, "Wrong alignment on MusicManager_C_OnMusicBankChanged");
static_assert(sizeof(MusicManager_C_OnMusicBankChanged) == 0x000008, "Wrong size on MusicManager_C_OnMusicBankChanged");
static_assert(offsetof(MusicManager_C_OnMusicBankChanged, NewBank) == 0x000000, "Member 'MusicManager_C_OnMusicBankChanged::NewBank' has a wrong offset!");

// Function MusicManager.MusicManager_C.On Stinger Completed
// 0x0008 (0x0008 - 0x0000)
struct MusicManager_C_On_Stinger_Completed final
{
public:
	class UFortMusicVoice*                        Voice;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_On_Stinger_Completed) == 0x000008, "Wrong alignment on MusicManager_C_On_Stinger_Completed");
static_assert(sizeof(MusicManager_C_On_Stinger_Completed) == 0x000008, "Wrong size on MusicManager_C_On_Stinger_Completed");
static_assert(offsetof(MusicManager_C_On_Stinger_Completed, Voice) == 0x000000, "Member 'MusicManager_C_On_Stinger_Completed::Voice' has a wrong offset!");

// Function MusicManager.MusicManager_C.Music Fade Out
// 0x0004 (0x0004 - 0x0000)
struct MusicManager_C_Music_Fade_Out final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Music_Fade_Out) == 0x000004, "Wrong alignment on MusicManager_C_Music_Fade_Out");
static_assert(sizeof(MusicManager_C_Music_Fade_Out) == 0x000004, "Wrong size on MusicManager_C_Music_Fade_Out");
static_assert(offsetof(MusicManager_C_Music_Fade_Out, Time) == 0x000000, "Member 'MusicManager_C_Music_Fade_Out::Time' has a wrong offset!");

// Function MusicManager.MusicManager_C.Music Fade In
// 0x0004 (0x0004 - 0x0000)
struct MusicManager_C_Music_Fade_In final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Music_Fade_In) == 0x000004, "Wrong alignment on MusicManager_C_Music_Fade_In");
static_assert(sizeof(MusicManager_C_Music_Fade_In) == 0x000004, "Wrong size on MusicManager_C_Music_Fade_In");
static_assert(offsetof(MusicManager_C_Music_Fade_In, Time) == 0x000000, "Member 'MusicManager_C_Music_Fade_In::Time' has a wrong offset!");

// Function MusicManager.MusicManager_C.PlayStinger
// 0x0008 (0x0008 - 0x0000)
struct MusicManager_C_PlayStinger final
{
public:
	class UFortMusicAsset*                        NewMusicAsset;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_PlayStinger) == 0x000008, "Wrong alignment on MusicManager_C_PlayStinger");
static_assert(sizeof(MusicManager_C_PlayStinger) == 0x000008, "Wrong size on MusicManager_C_PlayStinger");
static_assert(offsetof(MusicManager_C_PlayStinger, NewMusicAsset) == 0x000000, "Member 'MusicManager_C_PlayStinger::NewMusicAsset' has a wrong offset!");

// Function MusicManager.MusicManager_C.OnDayPhaseChanged
// 0x0003 (0x0003 - 0x0000)
struct MusicManager_C_OnDayPhaseChanged final
{
public:
	EFortDayPhase                                 Param_CurrentDayPhase;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortDayPhase                                 PreviousDayPhase;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAtCreation;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicManager_C_OnDayPhaseChanged) == 0x000001, "Wrong alignment on MusicManager_C_OnDayPhaseChanged");
static_assert(sizeof(MusicManager_C_OnDayPhaseChanged) == 0x000003, "Wrong size on MusicManager_C_OnDayPhaseChanged");
static_assert(offsetof(MusicManager_C_OnDayPhaseChanged, Param_CurrentDayPhase) == 0x000000, "Member 'MusicManager_C_OnDayPhaseChanged::Param_CurrentDayPhase' has a wrong offset!");
static_assert(offsetof(MusicManager_C_OnDayPhaseChanged, PreviousDayPhase) == 0x000001, "Member 'MusicManager_C_OnDayPhaseChanged::PreviousDayPhase' has a wrong offset!");
static_assert(offsetof(MusicManager_C_OnDayPhaseChanged, bAtCreation) == 0x000002, "Member 'MusicManager_C_OnDayPhaseChanged::bAtCreation' has a wrong offset!");

// Function MusicManager.MusicManager_C.Start Weak Point Music
// 0x0008 (0x0008 - 0x0000)
struct MusicManager_C_Start_Weak_Point_Music final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Start_Weak_Point_Music) == 0x000008, "Wrong alignment on MusicManager_C_Start_Weak_Point_Music");
static_assert(sizeof(MusicManager_C_Start_Weak_Point_Music) == 0x000008, "Wrong size on MusicManager_C_Start_Weak_Point_Music");
static_assert(offsetof(MusicManager_C_Start_Weak_Point_Music, Sound) == 0x000000, "Member 'MusicManager_C_Start_Weak_Point_Music::Sound' has a wrong offset!");

// Function MusicManager.MusicManager_C.Start Boss DBNO Music
// 0x0008 (0x0008 - 0x0000)
struct MusicManager_C_Start_Boss_DBNO_Music final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Start_Boss_DBNO_Music) == 0x000008, "Wrong alignment on MusicManager_C_Start_Boss_DBNO_Music");
static_assert(sizeof(MusicManager_C_Start_Boss_DBNO_Music) == 0x000008, "Wrong size on MusicManager_C_Start_Boss_DBNO_Music");
static_assert(offsetof(MusicManager_C_Start_Boss_DBNO_Music, Sound) == 0x000000, "Member 'MusicManager_C_Start_Boss_DBNO_Music::Sound' has a wrong offset!");

// Function MusicManager.MusicManager_C.Play Boss Music
// 0x0008 (0x0008 - 0x0000)
struct MusicManager_C_Play_Boss_Music final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Play_Boss_Music) == 0x000008, "Wrong alignment on MusicManager_C_Play_Boss_Music");
static_assert(sizeof(MusicManager_C_Play_Boss_Music) == 0x000008, "Wrong size on MusicManager_C_Play_Boss_Music");
static_assert(offsetof(MusicManager_C_Play_Boss_Music, Sound) == 0x000000, "Member 'MusicManager_C_Play_Boss_Music::Sound' has a wrong offset!");

// Function MusicManager.MusicManager_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct MusicManager_C_UserConstructionScript final
{
public:
	class AFortPlayerControllerFrontEnd*          K2Node_DynamicCast_AsFort_Player_Controller_Front_End; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerFrontEnd*          K2Node_DynamicCast_AsFort_Player_Controller_Front_End_1; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MusicManager_C_UserConstructionScript) == 0x000008, "Wrong alignment on MusicManager_C_UserConstructionScript");
static_assert(sizeof(MusicManager_C_UserConstructionScript) == 0x000020, "Wrong size on MusicManager_C_UserConstructionScript");
static_assert(offsetof(MusicManager_C_UserConstructionScript, K2Node_DynamicCast_AsFort_Player_Controller_Front_End) == 0x000000, "Member 'MusicManager_C_UserConstructionScript::K2Node_DynamicCast_AsFort_Player_Controller_Front_End' has a wrong offset!");
static_assert(offsetof(MusicManager_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'MusicManager_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MusicManager_C_UserConstructionScript, K2Node_DynamicCast_AsFort_Player_Controller_Front_End_1) == 0x000010, "Member 'MusicManager_C_UserConstructionScript::K2Node_DynamicCast_AsFort_Player_Controller_Front_End_1' has a wrong offset!");
static_assert(offsetof(MusicManager_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'MusicManager_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function MusicManager.MusicManager_C.Primary Music Threshold 
// 0x0020 (0x0020 - 0x0000)
struct MusicManager_C_Primary_Music_Threshold_ final
{
public:
	EFortMusicCombatIntensity                     Intensity;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayStinger;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	const class UFortMusicManagerBank*            CallFunc_GetMusicBank_ReturnValue;                 // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UFortMusicAsset*                  CallFunc_GetAssetFromCombatIntensity_ReturnValue;  // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMusicVoice*                        CallFunc_ChangePrimaryMusic_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MusicManager_C_Primary_Music_Threshold_) == 0x000008, "Wrong alignment on MusicManager_C_Primary_Music_Threshold_");
static_assert(sizeof(MusicManager_C_Primary_Music_Threshold_) == 0x000020, "Wrong size on MusicManager_C_Primary_Music_Threshold_");
static_assert(offsetof(MusicManager_C_Primary_Music_Threshold_, Intensity) == 0x000000, "Member 'MusicManager_C_Primary_Music_Threshold_::Intensity' has a wrong offset!");
static_assert(offsetof(MusicManager_C_Primary_Music_Threshold_, bPlayStinger) == 0x000001, "Member 'MusicManager_C_Primary_Music_Threshold_::bPlayStinger' has a wrong offset!");
static_assert(offsetof(MusicManager_C_Primary_Music_Threshold_, CallFunc_GetMusicBank_ReturnValue) == 0x000008, "Member 'MusicManager_C_Primary_Music_Threshold_::CallFunc_GetMusicBank_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_Primary_Music_Threshold_, CallFunc_GetAssetFromCombatIntensity_ReturnValue) == 0x000010, "Member 'MusicManager_C_Primary_Music_Threshold_::CallFunc_GetAssetFromCombatIntensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MusicManager_C_Primary_Music_Threshold_, CallFunc_ChangePrimaryMusic_ReturnValue) == 0x000018, "Member 'MusicManager_C_Primary_Music_Threshold_::CallFunc_ChangePrimaryMusic_ReturnValue' has a wrong offset!");

}

