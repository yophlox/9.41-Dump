#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_SCMachine_Pickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_SCMachine_Pickup.BGA_Athena_SCMachine_Pickup_C
// 0x00F0 (0x08A0 - 0x07B0)
class ABGA_Athena_SCMachine_Pickup_C final : public ABuildingGameplayActorSpawnChip
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        SC_Machine_Memory_Card_Loop_Cue;                   // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               SpawnInEffect;                                     // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Collision;                                         // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BackgroundGlow;                                    // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Card;                                              // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         UnHide;                                            // 0x07E8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeUnhide;                                 // 0x07EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         OwnerTeam;                                         // 0x07F0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_7F1[0x7];                                      // 0x07F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         FoundBuildingOnDied;                               // 0x07F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	struct FVector                                Impact_Loc;                                        // 0x0808(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0814(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSlope;                                          // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_824[0x4];                                      // 0x0824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_DestroyPickup;                               // 0x0828(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_PickupLife;                                    // 0x0830(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   InteractText;                                      // 0x0850(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystem*                        SpawnOutParticle;                                  // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             PickupSound;                                       // 0x0870(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               SpawnFX;                                           // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnSoundPlayed;                                  // 0x0880(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SpawnInSound;                                      // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPendingKill;                                     // 0x0890(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_891[0x3];                                      // 0x0891(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StopLocation;                                      // 0x0894(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_Athena_SCMachine_Pickup(int32 EntryPoint);
	void OnDeathServer(float Damage, const struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void SpawnSound();
	void OnDestroyPickup();
	void CollectPickup();
	void BlueprintOnInteract(const class AFortPawn* InteractingPawn);
	void DestroyPickup();
	void ReceiveBeginPlay();
	void OnRep_UnHide();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void DetermineStopLocation();
	void ConsiderPositionCorrection();

	bool BlueprintCanInteract(const class AFortPawn* InteractingPawn) const;
	class FText BlueprintGetInteractionString(const class AFortPawn* InteractingPawn) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_SCMachine_Pickup_C">();
	}
	static class ABGA_Athena_SCMachine_Pickup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_SCMachine_Pickup_C>();
	}
};
static_assert(alignof(ABGA_Athena_SCMachine_Pickup_C) == 0x000008, "Wrong alignment on ABGA_Athena_SCMachine_Pickup_C");
static_assert(sizeof(ABGA_Athena_SCMachine_Pickup_C) == 0x0008A0, "Wrong size on ABGA_Athena_SCMachine_Pickup_C");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, UberGraphFrame) == 0x0007B0, "Member 'ABGA_Athena_SCMachine_Pickup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SC_Machine_Memory_Card_Loop_Cue) == 0x0007B8, "Member 'ABGA_Athena_SCMachine_Pickup_C::SC_Machine_Memory_Card_Loop_Cue' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnInEffect) == 0x0007C0, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnInEffect' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Collision) == 0x0007C8, "Member 'ABGA_Athena_SCMachine_Pickup_C::Collision' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, BackgroundGlow) == 0x0007D0, "Member 'ABGA_Athena_SCMachine_Pickup_C::BackgroundGlow' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, RotatingMovement) == 0x0007D8, "Member 'ABGA_Athena_SCMachine_Pickup_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Card) == 0x0007E0, "Member 'ABGA_Athena_SCMachine_Pickup_C::Card' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, UnHide) == 0x0007E8, "Member 'ABGA_Athena_SCMachine_Pickup_C::UnHide' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, DelayBeforeUnhide) == 0x0007EC, "Member 'ABGA_Athena_SCMachine_Pickup_C::DelayBeforeUnhide' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, OwnerTeam) == 0x0007F0, "Member 'ABGA_Athena_SCMachine_Pickup_C::OwnerTeam' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, FoundBuildingOnDied) == 0x0007F8, "Member 'ABGA_Athena_SCMachine_Pickup_C::FoundBuildingOnDied' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Impact_Loc) == 0x000808, "Member 'ABGA_Athena_SCMachine_Pickup_C::Impact_Loc' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, HitNormal) == 0x000814, "Member 'ABGA_Athena_SCMachine_Pickup_C::HitNormal' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, MaxSlope) == 0x000820, "Member 'ABGA_Athena_SCMachine_Pickup_C::MaxSlope' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Timer_DestroyPickup) == 0x000828, "Member 'ABGA_Athena_SCMachine_Pickup_C::Timer_DestroyPickup' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, Row_PickupLife) == 0x000830, "Member 'ABGA_Athena_SCMachine_Pickup_C::Row_PickupLife' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, InteractText) == 0x000850, "Member 'ABGA_Athena_SCMachine_Pickup_C::InteractText' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnOutParticle) == 0x000868, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnOutParticle' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, PickupSound) == 0x000870, "Member 'ABGA_Athena_SCMachine_Pickup_C::PickupSound' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnFX) == 0x000878, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnFX' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnSoundPlayed) == 0x000880, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnSoundPlayed' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, SpawnInSound) == 0x000888, "Member 'ABGA_Athena_SCMachine_Pickup_C::SpawnInSound' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, IsPendingKill) == 0x000890, "Member 'ABGA_Athena_SCMachine_Pickup_C::IsPendingKill' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_SCMachine_Pickup_C, StopLocation) == 0x000894, "Member 'ABGA_Athena_SCMachine_Pickup_C::StopLocation' has a wrong offset!");

}

