#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_PlayerController

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_PlayerController.Athena_PlayerController_C
// 0x0098 (0x3078 - 0x2FE0)
class AAthena_PlayerController_C final : public AFortPlayerControllerAthena
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2FE0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        ListenerOverride;                                  // 0x2FE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VictoryRoyaleAudio;                                // 0x2FF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VictoryRoyaleMusic;                                // 0x2FF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             VictoryRoyaleMenuMusicAsset;                       // 0x3000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  BladeWielderTag;                                   // 0x3008(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	EFortItemType                                 InteractingItemType;                               // 0x3028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3029[0x7];                                     // 0x3029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  InteractionTags;                                   // 0x3030(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	UMulticastInlineDelegateProperty_             PawnPossessedDispatcher;                           // 0x3050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         PermissionRecheckTime;                             // 0x3060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3064[0x4];                                     // 0x3064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           PermissionsRecheckTimerHandle;                     // 0x3068(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         LobbyMusicOnVictoryDelayTime;                      // 0x3070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PawnPossessedDispatcher__DelegateSignature(class APawn* PossessedPawn);
	void ExecuteUbergraph_Athena_PlayerController(int32 EntryPoint);
	void ReplicateRotationScaleReset();
	void ReceiveBeginPlay();
	void PlayWinEffects(class APawn* FinisherPawn, const class UFortWeaponItemDefinition* FinishingWeapon, EDeathCause DeathCause, bool bAudioOnly);
	void ReactToPawnPossession(class APawn* PossessedPawn);
	void RevokeCreativeTool();
	void RemoveItem();
	void OnLocalInteraction(class AActor* ReceivingActor);
	void PermissionsChanged();
	void RevokeItem(TSoftObjectPtr<class UFortWorldItemDefinition> Item);
	void GrantItem(TSoftObjectPtr<class UFortWorldItemDefinition> Item);
	void HandlePermissions(class AFortVolume* Volume);
	void OnEnterVolume(class AFortVolume* Volume);
	void OnLeaveVolume(class AFortVolume* Volume);
	void OnMusicPackLoaded(const class UAthenaMusicPackItemDefinition* NewMusicPack);
	void Start_Victory_Royale_Music();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnReady_B4409EAB4038578B1EBA9DB1586489B9(class AFortGameStateAthena* GameState, const class UFortPlaylist* Playlist, const struct FGameplayTagContainer& PlaylistContextTags);
	void OnLoaded_F82CC70840156DFAFAF85EB0D93E5E2D(class UObject* Loaded);
	void UserConstructionScript();
	void LeftAllVolumes(bool* bLeftVolumes);
	void SetupPermissionRecheckTimer();
	bool Is_Creative_Mode();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_PlayerController_C">();
	}
	static class AAthena_PlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_PlayerController_C>();
	}
};
static_assert(alignof(AAthena_PlayerController_C) == 0x000008, "Wrong alignment on AAthena_PlayerController_C");
static_assert(sizeof(AAthena_PlayerController_C) == 0x003078, "Wrong size on AAthena_PlayerController_C");
static_assert(offsetof(AAthena_PlayerController_C, UberGraphFrame) == 0x002FE0, "Member 'AAthena_PlayerController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, ListenerOverride) == 0x002FE8, "Member 'AAthena_PlayerController_C::ListenerOverride' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, VictoryRoyaleAudio) == 0x002FF0, "Member 'AAthena_PlayerController_C::VictoryRoyaleAudio' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, VictoryRoyaleMusic) == 0x002FF8, "Member 'AAthena_PlayerController_C::VictoryRoyaleMusic' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, VictoryRoyaleMenuMusicAsset) == 0x003000, "Member 'AAthena_PlayerController_C::VictoryRoyaleMenuMusicAsset' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, BladeWielderTag) == 0x003008, "Member 'AAthena_PlayerController_C::BladeWielderTag' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, InteractingItemType) == 0x003028, "Member 'AAthena_PlayerController_C::InteractingItemType' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, InteractionTags) == 0x003030, "Member 'AAthena_PlayerController_C::InteractionTags' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, PawnPossessedDispatcher) == 0x003050, "Member 'AAthena_PlayerController_C::PawnPossessedDispatcher' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, PermissionRecheckTime) == 0x003060, "Member 'AAthena_PlayerController_C::PermissionRecheckTime' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, PermissionsRecheckTimerHandle) == 0x003068, "Member 'AAthena_PlayerController_C::PermissionsRecheckTimerHandle' has a wrong offset!");
static_assert(offsetof(AAthena_PlayerController_C, LobbyMusicOnVictoryDelayTime) == 0x003070, "Member 'AAthena_PlayerController_C::LobbyMusicOnVictoryDelayTime' has a wrong offset!");

}

