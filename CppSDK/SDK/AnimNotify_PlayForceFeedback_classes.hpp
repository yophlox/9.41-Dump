#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotify_PlayForceFeedback

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotify_PlayForceFeedback.AnimNotify_PlayForceFeedback_C
// 0x0020 (0x0058 - 0x0038)
class UAnimNotify_PlayForceFeedback_C final : public UAnimNotify
{
public:
	class UForceFeedbackEffect*                   ForceFeedbackTemplate;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   ForceFeedbackFarTemplate;                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayAtWorldLocation;                              // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InnerRadius;                                       // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OuterRadius;                                       // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotify_PlayForceFeedback_C">();
	}
	static class UAnimNotify_PlayForceFeedback_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotify_PlayForceFeedback_C>();
	}
};
static_assert(alignof(UAnimNotify_PlayForceFeedback_C) == 0x000008, "Wrong alignment on UAnimNotify_PlayForceFeedback_C");
static_assert(sizeof(UAnimNotify_PlayForceFeedback_C) == 0x000058, "Wrong size on UAnimNotify_PlayForceFeedback_C");
static_assert(offsetof(UAnimNotify_PlayForceFeedback_C, ForceFeedbackTemplate) == 0x000038, "Member 'UAnimNotify_PlayForceFeedback_C::ForceFeedbackTemplate' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayForceFeedback_C, ForceFeedbackFarTemplate) == 0x000040, "Member 'UAnimNotify_PlayForceFeedback_C::ForceFeedbackFarTemplate' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayForceFeedback_C, bPlayAtWorldLocation) == 0x000048, "Member 'UAnimNotify_PlayForceFeedback_C::bPlayAtWorldLocation' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayForceFeedback_C, InnerRadius) == 0x00004C, "Member 'UAnimNotify_PlayForceFeedback_C::InnerRadius' has a wrong offset!");
static_assert(offsetof(UAnimNotify_PlayForceFeedback_C, OuterRadius) == 0x000050, "Member 'UAnimNotify_PlayForceFeedback_C::OuterRadius' has a wrong offset!");

}

