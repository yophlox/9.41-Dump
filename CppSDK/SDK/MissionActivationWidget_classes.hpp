#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionActivationWidget

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MissionActivationWidget.MissionActivationWidget_C
// 0x0198 (0x0528 - 0x0390)
class UMissionActivationWidget_C final : public UFortMissionActivationWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       CloseDetailsPanel;                                 // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       StartObjectiveMinusToMinusGlobalMinusLockdown;     // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       IncreaseDifficultyMinusToMinusGlobalMinusLockdown; // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CloseMinusGlobalMinusLockOut;                      // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenMinusGlobalMinusLockOut;                       // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideIncreaseDifficultyPanel;                       // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideStartObjectivePanel;                           // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideHintBox;                                       // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenDetailsPanel;                                  // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenIncreaseDifficultyPanel;                       // 0x03E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       OpenStartObjectivePanel;                           // 0x03E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UIconTextButton_C*                      BackButton;                                        // 0x03F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BlugloRequirement;                                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          BottomBar;                                         // 0x0400(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_1;                                 // 0x0408(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               DetailsPanelSizeBox;                               // 0x0410(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Hint;                                              // 0x0418(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           HintWrapper;                                       // 0x0420(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_4;                                   // 0x0428(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         IncreaseDifficultyButton;                          // 0x0430(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               IncreaseDifficultySizeBox;                         // 0x0438(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LockoutTimeRemainingText;                          // 0x0440(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMissionDifficultyIncreasePanel_C*      MissionDifficultyIncreasePanel;                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          MissionLockoutBorder;                              // 0x0450(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMissionStartObjectivePanel_C*          MissionStartObjectivePanel;                        // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMissionVotingDetailsPanel_C*           MissionVotingDetailsPanel;                         // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ObjectiveReadyTimer;                               // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       QuestName;                                         // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               RootOverlay;                                       // 0x0478(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Shadow;                                            // 0x0480(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         StartObjectiveButton;                              // 0x0488(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               StartObjectiveSizeBox;                             // 0x0490(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TimerMinusGlow;                                    // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EFortMissionActivationWidgetState             PreviousState;                                     // 0x04A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x7];                                      // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   StartObjectiveHintText;                            // 0x04A8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   IncreaseDifficultyHintText;                        // 0x04C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           ReadyTimer;                                        // 0x04D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EFortMissionActivationWidgetState             NextStateToSet;                                    // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x3];                                      // 0x04E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AnimsPlayed;                                       // 0x04E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortVoteType                                 CurrentVote;                                       // 0x04E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           LockoutTimer;                                      // 0x04F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          WidgetState_SkipAnimations;                        // 0x04F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ArePanelButtonsInteractable;                       // 0x04F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          StartObjectiveShowingLockout;                      // 0x04FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IncreaseDifficultyShowingLockout;                  // 0x04FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             ShowWidgetSound;                                   // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             HideWidgetSound;                                   // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CloseSubPanelSound;                                // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OpenSubPanelSound;                                 // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WidgetState_IsVoteInstigator;                      // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MissionActivationWidget(int32 EntryPoint);
	void InitFromObject(class UObject* InitObject);
	void HandleMissionActivatedNoVote();
	void HandleSomeoneStartedOtherVote();
	void OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 VoteResult);
	void OnBeginOutro();
	void OnBeginIntro();
	void HandleVoteResultFinished(EFortVoteType VoteType, bool Success);
	void HandleOnRecepientVoted();
	void PreConstruct(bool IsDesignTime);
	void BndEvt__IncreaseDifficultyButton_K2Node_ComponentBoundEvent_59_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__StartObjectiveButton_K2Node_ComponentBoundEvent_52_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void OnActivated();
	void Destruct();
	void BndEvt__IncreaseDifficultyButton_K2Node_ComponentBoundEvent_246_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__StartObjectiveButton_K2Node_ComponentBoundEvent_233_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__IncreaseDifficultyButton_K2Node_ComponentBoundEvent_94_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__StartObjectiveButton_K2Node_ComponentBoundEvent_72_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__DeclineButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Construct();
	void OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked);
	void OnStateUpdated(EFortMissionActivationWidgetState ActiveState, EFortMissionActivationWidgetState Param_PreviousState);
	void UpdatePanelButtonInteractability(bool ButtonsEnabled, bool UpdateLockoutDisplay, bool ForceUpdateFocus, bool TryFocusIncreaseDifficulty);
	void SetBluGloRequirementHint(int32 Param_BlugloRequirement);
	void UpdateObjectiveReadyTime();
	void BindEvents();
	void UnbindEvents();
	void StartNextState();
	void UpdateButton(class UCommonButton* Button, bool bEnabled, bool bLockedOut);
	float GetMissionObjectiveRemainingTime();
	void HandleCloseDetailsPanelAnimFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MissionActivationWidget_C">();
	}
	static class UMissionActivationWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionActivationWidget_C>();
	}
};
static_assert(alignof(UMissionActivationWidget_C) == 0x000008, "Wrong alignment on UMissionActivationWidget_C");
static_assert(sizeof(UMissionActivationWidget_C) == 0x000528, "Wrong size on UMissionActivationWidget_C");
static_assert(offsetof(UMissionActivationWidget_C, UberGraphFrame) == 0x000390, "Member 'UMissionActivationWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, CloseDetailsPanel) == 0x000398, "Member 'UMissionActivationWidget_C::CloseDetailsPanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, StartObjectiveMinusToMinusGlobalMinusLockdown) == 0x0003A0, "Member 'UMissionActivationWidget_C::StartObjectiveMinusToMinusGlobalMinusLockdown' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, IncreaseDifficultyMinusToMinusGlobalMinusLockdown) == 0x0003A8, "Member 'UMissionActivationWidget_C::IncreaseDifficultyMinusToMinusGlobalMinusLockdown' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, CloseMinusGlobalMinusLockOut) == 0x0003B0, "Member 'UMissionActivationWidget_C::CloseMinusGlobalMinusLockOut' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, OpenMinusGlobalMinusLockOut) == 0x0003B8, "Member 'UMissionActivationWidget_C::OpenMinusGlobalMinusLockOut' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, HideIncreaseDifficultyPanel) == 0x0003C0, "Member 'UMissionActivationWidget_C::HideIncreaseDifficultyPanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, HideStartObjectivePanel) == 0x0003C8, "Member 'UMissionActivationWidget_C::HideStartObjectivePanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, HideHintBox) == 0x0003D0, "Member 'UMissionActivationWidget_C::HideHintBox' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, OpenDetailsPanel) == 0x0003D8, "Member 'UMissionActivationWidget_C::OpenDetailsPanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, OpenIncreaseDifficultyPanel) == 0x0003E0, "Member 'UMissionActivationWidget_C::OpenIncreaseDifficultyPanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, OpenStartObjectivePanel) == 0x0003E8, "Member 'UMissionActivationWidget_C::OpenStartObjectivePanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, BackButton) == 0x0003F0, "Member 'UMissionActivationWidget_C::BackButton' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, BlugloRequirement) == 0x0003F8, "Member 'UMissionActivationWidget_C::BlugloRequirement' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, BottomBar) == 0x000400, "Member 'UMissionActivationWidget_C::BottomBar' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, CommonTextBlock_1) == 0x000408, "Member 'UMissionActivationWidget_C::CommonTextBlock_1' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, DetailsPanelSizeBox) == 0x000410, "Member 'UMissionActivationWidget_C::DetailsPanelSizeBox' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, Hint) == 0x000418, "Member 'UMissionActivationWidget_C::Hint' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, HintWrapper) == 0x000420, "Member 'UMissionActivationWidget_C::HintWrapper' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, HorizontalBox_4) == 0x000428, "Member 'UMissionActivationWidget_C::HorizontalBox_4' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, IncreaseDifficultyButton) == 0x000430, "Member 'UMissionActivationWidget_C::IncreaseDifficultyButton' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, IncreaseDifficultySizeBox) == 0x000438, "Member 'UMissionActivationWidget_C::IncreaseDifficultySizeBox' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, LockoutTimeRemainingText) == 0x000440, "Member 'UMissionActivationWidget_C::LockoutTimeRemainingText' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, MissionDifficultyIncreasePanel) == 0x000448, "Member 'UMissionActivationWidget_C::MissionDifficultyIncreasePanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, MissionLockoutBorder) == 0x000450, "Member 'UMissionActivationWidget_C::MissionLockoutBorder' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, MissionStartObjectivePanel) == 0x000458, "Member 'UMissionActivationWidget_C::MissionStartObjectivePanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, MissionVotingDetailsPanel) == 0x000460, "Member 'UMissionActivationWidget_C::MissionVotingDetailsPanel' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, ObjectiveReadyTimer) == 0x000468, "Member 'UMissionActivationWidget_C::ObjectiveReadyTimer' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, QuestName) == 0x000470, "Member 'UMissionActivationWidget_C::QuestName' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, RootOverlay) == 0x000478, "Member 'UMissionActivationWidget_C::RootOverlay' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, Shadow) == 0x000480, "Member 'UMissionActivationWidget_C::Shadow' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, StartObjectiveButton) == 0x000488, "Member 'UMissionActivationWidget_C::StartObjectiveButton' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, StartObjectiveSizeBox) == 0x000490, "Member 'UMissionActivationWidget_C::StartObjectiveSizeBox' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, TimerMinusGlow) == 0x000498, "Member 'UMissionActivationWidget_C::TimerMinusGlow' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, PreviousState) == 0x0004A0, "Member 'UMissionActivationWidget_C::PreviousState' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, StartObjectiveHintText) == 0x0004A8, "Member 'UMissionActivationWidget_C::StartObjectiveHintText' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, IncreaseDifficultyHintText) == 0x0004C0, "Member 'UMissionActivationWidget_C::IncreaseDifficultyHintText' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, ReadyTimer) == 0x0004D8, "Member 'UMissionActivationWidget_C::ReadyTimer' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, NextStateToSet) == 0x0004E0, "Member 'UMissionActivationWidget_C::NextStateToSet' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, AnimsPlayed) == 0x0004E4, "Member 'UMissionActivationWidget_C::AnimsPlayed' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, CurrentVote) == 0x0004E8, "Member 'UMissionActivationWidget_C::CurrentVote' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, LockoutTimer) == 0x0004F0, "Member 'UMissionActivationWidget_C::LockoutTimer' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, WidgetState_SkipAnimations) == 0x0004F8, "Member 'UMissionActivationWidget_C::WidgetState_SkipAnimations' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, ArePanelButtonsInteractable) == 0x0004F9, "Member 'UMissionActivationWidget_C::ArePanelButtonsInteractable' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, StartObjectiveShowingLockout) == 0x0004FA, "Member 'UMissionActivationWidget_C::StartObjectiveShowingLockout' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, IncreaseDifficultyShowingLockout) == 0x0004FB, "Member 'UMissionActivationWidget_C::IncreaseDifficultyShowingLockout' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, ShowWidgetSound) == 0x000500, "Member 'UMissionActivationWidget_C::ShowWidgetSound' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, HideWidgetSound) == 0x000508, "Member 'UMissionActivationWidget_C::HideWidgetSound' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, CloseSubPanelSound) == 0x000510, "Member 'UMissionActivationWidget_C::CloseSubPanelSound' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, OpenSubPanelSound) == 0x000518, "Member 'UMissionActivationWidget_C::OpenSubPanelSound' has a wrong offset!");
static_assert(offsetof(UMissionActivationWidget_C, WidgetState_IsVoteInstigator) == 0x000520, "Member 'UMissionActivationWidget_C::WidgetState_IsVoteInstigator' has a wrong offset!");

}

