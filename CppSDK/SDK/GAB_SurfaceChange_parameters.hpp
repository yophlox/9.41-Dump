#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SurfaceChange

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.ExecuteUbergraph_GAB_SurfaceChange
// 0x00E0 (0x00E0 - 0x0000)
struct GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0018(0x00B0)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess; // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange");
static_assert(sizeof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange) == 0x0000E0, "Wrong size on GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, EntryPoint) == 0x000000, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x00000C, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_Event_EventData) == 0x000018, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000C8, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x0000D0, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange, GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess) == 0x0000D9, "Member 'GAB_SurfaceChange_C_ExecuteUbergraph_GAB_SurfaceChange::GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GAB_SurfaceChange_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.HotfixableGEApplication
// 0x0048 (0x0048 - 0x0000)
struct GAB_SurfaceChange_C_HotfixableGEApplication final
{
public:
	struct FScalableFloat                         Input;                                             // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 GameplayEffectAppliedOnTrue;                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GameplayEffectAppliedOnFalse;                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SurfaceChange_C_HotfixableGEApplication) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_HotfixableGEApplication");
static_assert(sizeof(GAB_SurfaceChange_C_HotfixableGEApplication) == 0x000048, "Wrong size on GAB_SurfaceChange_C_HotfixableGEApplication");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, Input) == 0x000000, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::Input' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, GameplayEffectAppliedOnTrue) == 0x000020, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::GameplayEffectAppliedOnTrue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, GameplayEffectAppliedOnFalse) == 0x000028, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::GameplayEffectAppliedOnFalse' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_GetValueAtLevel_ReturnValue) == 0x000030, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000034, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_HotfixableGEApplication, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x000040, "Member 'GAB_SurfaceChange_C_HotfixableGEApplication::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.LavaBounce
// 0x0248 (0x0248 - 0x0000)
struct GAB_SurfaceChange_C_LavaBounce final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAtLevel_ReturnValue_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_2;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_3;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_4;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_5;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue_6;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00A4(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MirrorVectorByNormal_ReturnValue;         // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_1;                          // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector_NetQuantizeNormal              K2Node_MakeStruct_Vector_NetQuantizeNormal;        // 0x0180(0x000C)(NoDestructor)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 CallFunc_MakeGameplayCueParameters_ReturnValue;    // 0x0190(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(GAB_SurfaceChange_C_LavaBounce) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_LavaBounce");
static_assert(sizeof(GAB_SurfaceChange_C_LavaBounce) == 0x000248, "Wrong size on GAB_SurfaceChange_C_LavaBounce");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_X) == 0x000018, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_Y) == 0x00001C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_Z) == 0x000020, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_NormalizeAxis_ReturnValue) == 0x000034, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FFloor_ReturnValue) == 0x000038, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FFloor_ReturnValue_1) == 0x00003C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000040, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FFloor_ReturnValue_2) == 0x000044, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue) == 0x000048, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000054, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000058, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_HasAuthority_ReturnValue) == 0x000060, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_1) == 0x000064, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_2) == 0x000068, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_3) == 0x00006C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_4) == 0x000070, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000074, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_5) == 0x000080, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000084, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetValueAtLevel_ReturnValue_6) == 0x000088, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetValueAtLevel_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00008C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_RandomFloatInRange_ReturnValue) == 0x00009C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000A0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000A4, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000AC, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000B8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000C4, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0000D4, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_FMin_ReturnValue) == 0x0000DC, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Normal2D_ReturnValue) == 0x0000E0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x0000E8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000F0, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GetVelocity_ReturnValue) == 0x0000F8, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_MirrorVectorByNormal_ReturnValue) == 0x000104, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_MirrorVectorByNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x000110, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Normal2D_ReturnValue_1) == 0x000118, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x000120, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000128, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000130, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Normal_ReturnValue) == 0x00013C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000148, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Add_VectorVector_ReturnValue) == 0x000154, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_VSize_ReturnValue) == 0x000160, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_Normal_ReturnValue_1) == 0x000164, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000170, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_X_1) == 0x000174, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_Y_1) == 0x000178, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_BreakVector_Z_1) == 0x00017C, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, K2Node_MakeStruct_Vector_NetQuantizeNormal) == 0x000180, "Member 'GAB_SurfaceChange_C_LavaBounce::K2Node_MakeStruct_Vector_NetQuantizeNormal' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_LavaBounce, CallFunc_MakeGameplayCueParameters_ReturnValue) == 0x000190, "Member 'GAB_SurfaceChange_C_LavaBounce::CallFunc_MakeGameplayCueParameters_ReturnValue' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.SurfaceCleanup
// 0x0060 (0x0060 - 0x0000)
struct GAB_SurfaceChange_C_SurfaceCleanup final
{
public:
	bool                                          AddLingeringEffects;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPhysicalSurface                              SurfaceType;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasSnow;                                          // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAddLingeringEffects;                              // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasLava;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasIce;                                           // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_1; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue_1; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_2; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue_2; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GAB_SurfaceChange_C_SurfaceCleanup) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_SurfaceCleanup");
static_assert(sizeof(GAB_SurfaceChange_C_SurfaceCleanup) == 0x000060, "Wrong size on GAB_SurfaceChange_C_SurfaceCleanup");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, AddLingeringEffects) == 0x000000, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::AddLingeringEffects' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, SurfaceType) == 0x000001, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::SurfaceType' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bHasSnow) == 0x000002, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bHasSnow' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bAddLingeringEffects) == 0x000003, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bAddLingeringEffects' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bHasLava) == 0x000004, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bHasLava' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, bHasIce) == 0x000005, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::bHasIce' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000008, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x00000C, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue_1) == 0x000014, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_BooleanAND_ReturnValue_2) == 0x000015, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput) == 0x000018, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x000028, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_1) == 0x000030, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_ReturnValue_1) == 0x000040, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_2) == 0x000048, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_2' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_SurfaceCleanup, CallFunc_HasAllMatchingGameplayTags_ReturnValue_2) == 0x000058, "Member 'GAB_SurfaceChange_C_SurfaceCleanup::CallFunc_HasAllMatchingGameplayTags_ReturnValue_2' has a wrong offset!");

// Function GAB_SurfaceChange.GAB_SurfaceChange_C.OnRep_ReplicatedRandomAngle
// 0x0020 (0x0020 - 0x0000)
struct GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle final
{
public:
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle) == 0x000008, "Wrong alignment on GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle");
static_assert(sizeof(GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle) == 0x000020, "Wrong size on GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle");
static_assert(offsetof(GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle, CallFunc_Conv_FloatToString_ReturnValue) == 0x000000, "Member 'GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'GAB_SurfaceChange_C_OnRep_ReplicatedRandomAngle::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

}

