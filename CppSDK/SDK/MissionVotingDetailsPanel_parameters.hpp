#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionVotingDetailsPanel

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnVoteResultFinished__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature final
{
public:
	EFortVoteType                                 VoteType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature) == 0x000001, "Wrong alignment on MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature");
static_assert(sizeof(MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature) == 0x000002, "Wrong size on MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature");
static_assert(offsetof(MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature, VoteType) == 0x000000, "Member 'MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature::VoteType' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature, Success) == 0x000001, "Member 'MissionVotingDetailsPanel_C_OnVoteResultFinished__DelegateSignature::Success' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.ExecuteUbergraph_MissionVotingDetailsPanel
// 0x01E8 (0x01E8 - 0x0000)
struct MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_2;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_1;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	EFortVoteType                                 K2Node_Event_VoteType_1;                           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVoteActive;                        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_VoteResult;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsMultiplayer;                       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortVoteType                                 K2Node_Event_VoteType;                             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortVoteArbitratorType                       CallFunc_GetArbitratorType_ReturnValue;            // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0100(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x011C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRequestVote_ReturnValue;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0168(0x0018)()
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVoteMultiPlayer_Success;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanRequestVote_ReturnValue_1;             // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18A[0x2];                                      // 0x018A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMissionObjectiveTimeRemaining_ReturnValue; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerControllerZone*              K2Node_DynamicCast_AsFort_Player_Controller_Zone;  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x01B8(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x01D0(0x0018)()
};
static_assert(alignof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel");
static_assert(sizeof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel) == 0x0001E8, "Wrong size on MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, EntryPoint) == 0x000000, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, Temp_bool_Variable) == 0x000020, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_ComponentBoundEvent_Button_2) == 0x000030, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_ComponentBoundEvent_Button_1) == 0x000038, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_CustomEvent_Success) == 0x000040, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_CreateDelegate_OutputDelegate_1) == 0x000044, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000058, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Event_VoteType_1) == 0x000060, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Event_VoteType_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Event_bIsVoteActive) == 0x000061, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Event_bIsVoteActive' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Event_VoteResult) == 0x000064, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Event_VoteResult' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000068, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Event_bIsMultiplayer) == 0x000069, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Event_bIsMultiplayer' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Event_VoteType) == 0x000078, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Event_VoteType' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, Temp_object_Variable) == 0x000080, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000088, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, Temp_object_Variable_1) == 0x000090, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000098, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, Temp_bool_Variable_1) == 0x000099, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Select_Default) == 0x0000A0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000A8, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000B0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000C0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000D0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000E0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000F0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_GetArbitratorType_ReturnValue) == 0x0000F8, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_GetArbitratorType_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, Temp_text_Variable) == 0x000100, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_SwitchEnum_CmpSuccess) == 0x000118, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Event_MyGeometry) == 0x00011C, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Event_InDeltaTime) == 0x000154, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Select_Default_1) == 0x000158, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_CanRequestVote_ReturnValue) == 0x000160, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_CanRequestVote_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, Temp_text_Variable_1) == 0x000168, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_ComponentBoundEvent_Button) == 0x000180, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_IsVoteMultiPlayer_Success) == 0x000188, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_IsVoteMultiPlayer_Success' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_CanRequestVote_ReturnValue_1) == 0x000189, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_CanRequestVote_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_GetMissionObjectiveTimeRemaining_ReturnValue) == 0x00018C, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_GetMissionObjectiveTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000190, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000191, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_BooleanAND_ReturnValue) == 0x000192, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_GetPlayerController_ReturnValue) == 0x000198, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, Temp_bool_Variable_2) == 0x0001A0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_DynamicCast_AsFort_Player_Controller_Zone) == 0x0001A8, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_DynamicCast_AsFort_Player_Controller_Zone' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, K2Node_Select_Default_2) == 0x0001B8, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel, CallFunc_TextToUpper_ReturnValue) == 0x0001D0, "Member 'MissionVotingDetailsPanel_C_ExecuteUbergraph_MissionVotingDetailsPanel::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MissionVotingDetailsPanel_C_BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(MissionVotingDetailsPanel_C_BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on MissionVotingDetailsPanel_C_BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(MissionVotingDetailsPanel_C_BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'MissionVotingDetailsPanel_C_BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.Tick
// 0x003C (0x003C - 0x0000)
struct MissionVotingDetailsPanel_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_Tick) == 0x000004, "Wrong alignment on MissionVotingDetailsPanel_C_Tick");
static_assert(sizeof(MissionVotingDetailsPanel_C_Tick) == 0x00003C, "Wrong size on MissionVotingDetailsPanel_C_Tick");
static_assert(offsetof(MissionVotingDetailsPanel_C_Tick, MyGeometry) == 0x000000, "Member 'MissionVotingDetailsPanel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_Tick, InDeltaTime) == 0x000038, "Member 'MissionVotingDetailsPanel_C_Tick::InDeltaTime' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnVoteUpdatedBP
// 0x0001 (0x0001 - 0x0000)
struct MissionVotingDetailsPanel_C_OnVoteUpdatedBP final
{
public:
	EFortVoteType                                 VoteType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_OnVoteUpdatedBP) == 0x000001, "Wrong alignment on MissionVotingDetailsPanel_C_OnVoteUpdatedBP");
static_assert(sizeof(MissionVotingDetailsPanel_C_OnVoteUpdatedBP) == 0x000001, "Wrong size on MissionVotingDetailsPanel_C_OnVoteUpdatedBP");
static_assert(offsetof(MissionVotingDetailsPanel_C_OnVoteUpdatedBP, VoteType) == 0x000000, "Member 'MissionVotingDetailsPanel_C_OnVoteUpdatedBP::VoteType' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnMultiplayerChangedBP
// 0x0001 (0x0001 - 0x0000)
struct MissionVotingDetailsPanel_C_OnMultiplayerChangedBP final
{
public:
	bool                                          bIsMultiplayer;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionVotingDetailsPanel_C_OnMultiplayerChangedBP) == 0x000001, "Wrong alignment on MissionVotingDetailsPanel_C_OnMultiplayerChangedBP");
static_assert(sizeof(MissionVotingDetailsPanel_C_OnMultiplayerChangedBP) == 0x000001, "Wrong size on MissionVotingDetailsPanel_C_OnMultiplayerChangedBP");
static_assert(offsetof(MissionVotingDetailsPanel_C_OnMultiplayerChangedBP, bIsMultiplayer) == 0x000000, "Member 'MissionVotingDetailsPanel_C_OnMultiplayerChangedBP::bIsMultiplayer' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OnActiveVoteChangedBP
// 0x0008 (0x0008 - 0x0000)
struct MissionVotingDetailsPanel_C_OnActiveVoteChangedBP final
{
public:
	EFortVoteType                                 VoteType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVoteActive;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_VoteResult;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_OnActiveVoteChangedBP) == 0x000004, "Wrong alignment on MissionVotingDetailsPanel_C_OnActiveVoteChangedBP");
static_assert(sizeof(MissionVotingDetailsPanel_C_OnActiveVoteChangedBP) == 0x000008, "Wrong size on MissionVotingDetailsPanel_C_OnActiveVoteChangedBP");
static_assert(offsetof(MissionVotingDetailsPanel_C_OnActiveVoteChangedBP, VoteType) == 0x000000, "Member 'MissionVotingDetailsPanel_C_OnActiveVoteChangedBP::VoteType' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_OnActiveVoteChangedBP, bIsVoteActive) == 0x000001, "Member 'MissionVotingDetailsPanel_C_OnActiveVoteChangedBP::bIsVoteActive' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_OnActiveVoteChangedBP, Param_VoteResult) == 0x000004, "Member 'MissionVotingDetailsPanel_C_OnActiveVoteChangedBP::Param_VoteResult' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.ShowVoteResult
// 0x0001 (0x0001 - 0x0000)
struct MissionVotingDetailsPanel_C_ShowVoteResult final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionVotingDetailsPanel_C_ShowVoteResult) == 0x000001, "Wrong alignment on MissionVotingDetailsPanel_C_ShowVoteResult");
static_assert(sizeof(MissionVotingDetailsPanel_C_ShowVoteResult) == 0x000001, "Wrong size on MissionVotingDetailsPanel_C_ShowVoteResult");
static_assert(offsetof(MissionVotingDetailsPanel_C_ShowVoteResult, Success) == 0x000000, "Member 'MissionVotingDetailsPanel_C_ShowVoteResult::Success' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MissionVotingDetailsPanel_C_BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(MissionVotingDetailsPanel_C_BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on MissionVotingDetailsPanel_C_BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(MissionVotingDetailsPanel_C_BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'MissionVotingDetailsPanel_C_BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct MissionVotingDetailsPanel_C_BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(MissionVotingDetailsPanel_C_BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on MissionVotingDetailsPanel_C_BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(MissionVotingDetailsPanel_C_BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'MissionVotingDetailsPanel_C_BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.InitializePanel
// 0x0001 (0x0001 - 0x0000)
struct MissionVotingDetailsPanel_C_InitializePanel final
{
public:
	EFortVoteType                                 InVoteType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_InitializePanel) == 0x000001, "Wrong alignment on MissionVotingDetailsPanel_C_InitializePanel");
static_assert(sizeof(MissionVotingDetailsPanel_C_InitializePanel) == 0x000001, "Wrong size on MissionVotingDetailsPanel_C_InitializePanel");
static_assert(offsetof(MissionVotingDetailsPanel_C_InitializePanel, InVoteType) == 0x000000, "Member 'MissionVotingDetailsPanel_C_InitializePanel::InVoteType' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.RefreshPanel
// 0x0030 (0x0030 - 0x0000)
struct MissionVotingDetailsPanel_C_RefreshPanel final
{
public:
	bool                                          CallFunc_IsVoteMultiPlayer_Success;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAvailableBluGloCount_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVoteActive_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionVotingDetailsPanel_C_RefreshPanel) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_RefreshPanel");
static_assert(sizeof(MissionVotingDetailsPanel_C_RefreshPanel) == 0x000030, "Wrong size on MissionVotingDetailsPanel_C_RefreshPanel");
static_assert(offsetof(MissionVotingDetailsPanel_C_RefreshPanel, CallFunc_IsVoteMultiPlayer_Success) == 0x000000, "Member 'MissionVotingDetailsPanel_C_RefreshPanel::CallFunc_IsVoteMultiPlayer_Success' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_RefreshPanel, CallFunc_GetAvailableBluGloCount_ReturnValue) == 0x000004, "Member 'MissionVotingDetailsPanel_C_RefreshPanel::CallFunc_GetAvailableBluGloCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_RefreshPanel, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'MissionVotingDetailsPanel_C_RefreshPanel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_RefreshPanel, CallFunc_GetUINavigationManager_ReturnValue) == 0x000020, "Member 'MissionVotingDetailsPanel_C_RefreshPanel::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_RefreshPanel, CallFunc_IsVoteActive_ReturnValue) == 0x000028, "Member 'MissionVotingDetailsPanel_C_RefreshPanel::CallFunc_IsVoteActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_RefreshPanel, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'MissionVotingDetailsPanel_C_RefreshPanel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_RefreshPanel, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'MissionVotingDetailsPanel_C_RefreshPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateRemainingVoteTime
// 0x0030 (0x0030 - 0x0000)
struct MissionVotingDetailsPanel_C_UpdateRemainingVoteTime final
{
public:
	float                                         RemainingTime;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RemainingTimepercent;                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVoteActive_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVoteTimeRemaining_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0010(0x0018)()
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_UpdateRemainingVoteTime");
static_assert(sizeof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime) == 0x000030, "Wrong size on MissionVotingDetailsPanel_C_UpdateRemainingVoteTime");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, RemainingTime) == 0x000000, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::RemainingTime' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, RemainingTimepercent) == 0x000004, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::RemainingTimepercent' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, CallFunc_IsVoteActive_ReturnValue) == 0x000008, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::CallFunc_IsVoteActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, CallFunc_GetVoteTimeRemaining_ReturnValue) == 0x00000C, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::CallFunc_GetVoteTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, CallFunc_Conv_FloatToText_ReturnValue) == 0x000010, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00002D, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateRemainingVoteTime, CallFunc_IsValid_ReturnValue_1) == 0x00002E, "Member 'MissionVotingDetailsPanel_C_UpdateRemainingVoteTime::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateVoteInstigatorInfo
// 0x00B0 (0x00B0 - 0x0000)
struct MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo final
{
public:
	struct FUniqueNetIdRepl                       InstigatorId;                                      // 0x0000(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortRegisteredPlayerInfo*              CallFunc_GetPlayerInfoFromUniqueID_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortVoteType                                 Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetInstigatorId_ReturnValue;              // 0x0088(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo");
static_assert(sizeof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo) == 0x0000B0, "Wrong size on MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, InstigatorId) == 0x000000, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::InstigatorId' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, Temp_object_Variable) == 0x000028, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, Temp_object_Variable_1) == 0x000030, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, Temp_object_Variable_2) == 0x000038, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, Temp_object_Variable_3) == 0x000040, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, CallFunc_GetPlayerInfoFromUniqueID_ReturnValue) == 0x000048, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::CallFunc_GetPlayerInfoFromUniqueID_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, Temp_byte_Variable) == 0x000050, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, CallFunc_GetPlayerName_ReturnValue) == 0x000058, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, K2Node_Select_Default) == 0x000080, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo, CallFunc_GetInstigatorId_ReturnValue) == 0x000088, "Member 'MissionVotingDetailsPanel_C_UpdateVoteInstigatorInfo::CallFunc_GetInstigatorId_ReturnValue' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateVoteButton
// 0x0118 (0x0118 - 0x0000)
struct MissionVotingDetailsPanel_C_UpdateVoteButton final
{
public:
	bool                                          CanIncreaseDifficulty;                             // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0060(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0078(0x0018)()
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVoteRequired_VoteRequired;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00A8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x00C0(0x0018)()
	int32                                         CallFunc_GetStartObjectiveBluGloRequirement_ReturnValue; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x00E0(0x0018)()
	int32                                         CallFunc_GetAvailableBluGloCount_ReturnValue;      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVoteActive_ReturnValue;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAvailableBluGloCount_ReturnValue_1;    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVoteActive_ReturnValue_1;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIncreaseDifficultyBluGloRequirement_ReturnValue; // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionVotingDetailsPanel_C_UpdateVoteButton) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_UpdateVoteButton");
static_assert(sizeof(MissionVotingDetailsPanel_C_UpdateVoteButton) == 0x000118, "Wrong size on MissionVotingDetailsPanel_C_UpdateVoteButton");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CanIncreaseDifficulty) == 0x000000, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CanIncreaseDifficulty' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_bool_Variable) == 0x000001, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_text_Variable) == 0x000008, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_text_Variable_1) == 0x000020, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_bool_Variable_1) == 0x000038, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_text_Variable_2) == 0x000040, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_bool_Variable_2) == 0x000058, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_text_Variable_3) == 0x000060, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_text_Variable_4) == 0x000078, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GetContext_ReturnValue) == 0x000090, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue) == 0x000098, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue) == 0x00009C, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_IsVoteRequired_VoteRequired) == 0x0000A1, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_IsVoteRequired_VoteRequired' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_byte_Variable) == 0x0000A2, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, K2Node_Select_Default) == 0x0000A8, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, K2Node_Select_Default_1) == 0x0000C0, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GetStartObjectiveBluGloRequirement_ReturnValue) == 0x0000D8, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GetStartObjectiveBluGloRequirement_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, K2Node_Select_Default_2) == 0x0000E0, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GetAvailableBluGloCount_ReturnValue) == 0x0000F8, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GetAvailableBluGloCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_IsVoteActive_ReturnValue) == 0x0000FC, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_IsVoteActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000FD, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_Not_PreBool_ReturnValue) == 0x0000FE, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_byte_Variable_1) == 0x0000FF, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, Temp_bool_Variable_3) == 0x000101, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, K2Node_Select_Default_3) == 0x000102, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GetAvailableBluGloCount_ReturnValue_1) == 0x000104, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GetAvailableBluGloCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_IsVoteActive_ReturnValue_1) == 0x000108, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_IsVoteActive_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GetIncreaseDifficultyBluGloRequirement_ReturnValue) == 0x00010C, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GetIncreaseDifficultyBluGloRequirement_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_Not_PreBool_ReturnValue_1) == 0x000110, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000111, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_BooleanAND_ReturnValue_1) == 0x000112, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_IsValid_ReturnValue) == 0x000113, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, CallFunc_BooleanAND_ReturnValue_2) == 0x000114, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteButton, K2Node_SwitchEnum_CmpSuccess) == 0x000115, "Member 'MissionVotingDetailsPanel_C_UpdateVoteButton::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateObjectiveReadyTime
// 0x0068 (0x0068 - 0x0000)
struct MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime final
{
public:
	float                                         MissionObjectiveTimeRemaining;                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMissionObjectiveTimeRemaining_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TimeSecondsToText_ReturnValue;            // 0x0030(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0050(0x0018)()
};
static_assert(alignof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime");
static_assert(sizeof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime) == 0x000068, "Wrong size on MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, MissionObjectiveTimeRemaining) == 0x000000, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::MissionObjectiveTimeRemaining' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, CallFunc_GetMissionObjectiveTimeRemaining_ReturnValue) == 0x000008, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::CallFunc_GetMissionObjectiveTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, Temp_text_Variable) == 0x000010, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, Temp_bool_Variable) == 0x000028, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000029, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, CallFunc_TimeSecondsToText_ReturnValue) == 0x000030, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::CallFunc_TimeSecondsToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime, K2Node_Select_Default) == 0x000050, "Member 'MissionVotingDetailsPanel_C_UpdateObjectiveReadyTime::K2Node_Select_Default' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.IsVoteRequired
// 0x0003 (0x0003 - 0x0000)
struct MissionVotingDetailsPanel_C_IsVoteRequired final
{
public:
	bool                                          VoteRequired;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionVotingDetailsPanel_C_IsVoteRequired) == 0x000001, "Wrong alignment on MissionVotingDetailsPanel_C_IsVoteRequired");
static_assert(sizeof(MissionVotingDetailsPanel_C_IsVoteRequired) == 0x000003, "Wrong size on MissionVotingDetailsPanel_C_IsVoteRequired");
static_assert(offsetof(MissionVotingDetailsPanel_C_IsVoteRequired, VoteRequired) == 0x000000, "Member 'MissionVotingDetailsPanel_C_IsVoteRequired::VoteRequired' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_IsVoteRequired, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'MissionVotingDetailsPanel_C_IsVoteRequired::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_IsVoteRequired, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'MissionVotingDetailsPanel_C_IsVoteRequired::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.OpenDetails
// 0x0008 (0x0008 - 0x0000)
struct MissionVotingDetailsPanel_C_OpenDetails final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_OpenDetails) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_OpenDetails");
static_assert(sizeof(MissionVotingDetailsPanel_C_OpenDetails) == 0x000008, "Wrong size on MissionVotingDetailsPanel_C_OpenDetails");
static_assert(offsetof(MissionVotingDetailsPanel_C_OpenDetails, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'MissionVotingDetailsPanel_C_OpenDetails::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.CloseDetails
// 0x0008 (0x0008 - 0x0000)
struct MissionVotingDetailsPanel_C_CloseDetails final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_CloseDetails) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_CloseDetails");
static_assert(sizeof(MissionVotingDetailsPanel_C_CloseDetails) == 0x000008, "Wrong size on MissionVotingDetailsPanel_C_CloseDetails");
static_assert(offsetof(MissionVotingDetailsPanel_C_CloseDetails, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'MissionVotingDetailsPanel_C_CloseDetails::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateDisplay
// 0x0300 (0x0300 - 0x0000)
struct MissionVotingDetailsPanel_C_UpdateDisplay final
{
public:
	bool                                          IsSinglePlayer;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortVoteType                                 Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	bool                                          Temp_bool_Variable_2;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x00A8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00C0(0x0018)()
	bool                                          Temp_bool_Variable_3;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x00F8(0x0018)()
	EFortVoteType                                 Temp_byte_Variable_2;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_2;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable_3;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortVoteType                                 Temp_byte_Variable_3;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_10;                             // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0188(0x0018)()
	EFortVoteType                                 Temp_byte_Variable_4;                              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortVoteType                                 Temp_byte_Variable_9;                              // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A6[0x2];                                      // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_14;                             // 0x01A8(0x0018)()
	bool                                          CallFunc_IsVoteRequired_VoteRequired;              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x01C8(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x01E0(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x01F8(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x0210(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x0228(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x0248(0x0018)()
	class FText                                   K2Node_Select_Default_4;                           // 0x0260(0x0018)()
	bool                                          CallFunc_IsVoteRequired_VoteRequired_1;            // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default_5;                           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetStartObjectiveBluGloRequirement_ReturnValue; // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0290(0x0018)()
	int32                                         CallFunc_GetIncreaseDifficultyBluGloRequirement_ReturnValue; // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x02B0(0x0018)()
	class FText                                   K2Node_Select_Default_6;                           // 0x02C8(0x0018)()
	ESlateVisibility                              K2Node_Select_Default_7;                           // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_8;                           // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_9;                           // 0x02E8(0x0018)()
};
static_assert(alignof(MissionVotingDetailsPanel_C_UpdateDisplay) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_UpdateDisplay");
static_assert(sizeof(MissionVotingDetailsPanel_C_UpdateDisplay) == 0x000300, "Wrong size on MissionVotingDetailsPanel_C_UpdateDisplay");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, IsSinglePlayer) == 0x000000, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::IsSinglePlayer' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable) == 0x000001, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable) == 0x000008, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_1) == 0x000020, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_2) == 0x000038, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_3) == 0x000050, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_bool_Variable) == 0x000068, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_1) == 0x000069, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_bool_Variable_1) == 0x00006A, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_4) == 0x000070, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_5) == 0x000088, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_bool_Variable_2) == 0x0000A0, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_6) == 0x0000A8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_7) == 0x0000C0, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_bool_Variable_3) == 0x0000D8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_8) == 0x0000E0, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_9) == 0x0000F8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_2) == 0x000110, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_object_Variable) == 0x000118, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_object_Variable_1) == 0x000120, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_object_Variable_2) == 0x000128, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_object_Variable_3) == 0x000130, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_3) == 0x000138, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_10) == 0x000140, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_11) == 0x000158, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_12) == 0x000170, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_13) == 0x000188, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_4) == 0x0001A0, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_5) == 0x0001A1, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_6) == 0x0001A2, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_7) == 0x0001A3, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_8) == 0x0001A4, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_byte_Variable_9) == 0x0001A5, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_14) == 0x0001A8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, CallFunc_IsVoteRequired_VoteRequired) == 0x0001C0, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::CallFunc_IsVoteRequired_VoteRequired' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default) == 0x0001C8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_1) == 0x0001E0, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_2) == 0x0001F8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_15) == 0x000210, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_text_Variable_16) == 0x000228, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, Temp_bool_Variable_4) == 0x000240, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_3) == 0x000248, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_4) == 0x000260, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, CallFunc_IsVoteRequired_VoteRequired_1) == 0x000278, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::CallFunc_IsVoteRequired_VoteRequired_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_5) == 0x000280, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, CallFunc_GetStartObjectiveBluGloRequirement_ReturnValue) == 0x000288, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::CallFunc_GetStartObjectiveBluGloRequirement_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_SwitchEnum_CmpSuccess) == 0x00028C, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, CallFunc_Conv_IntToText_ReturnValue) == 0x000290, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, CallFunc_GetIncreaseDifficultyBluGloRequirement_ReturnValue) == 0x0002A8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::CallFunc_GetIncreaseDifficultyBluGloRequirement_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0002B0, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_6) == 0x0002C8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_7) == 0x0002E0, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_8) == 0x0002E1, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateDisplay, K2Node_Select_Default_9) == 0x0002E8, "Member 'MissionVotingDetailsPanel_C_UpdateDisplay::K2Node_Select_Default_9' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateVoteCounts
// 0x0038 (0x0038 - 0x0000)
struct MissionVotingDetailsPanel_C_UpdateVoteCounts final
{
public:
	int32                                         CallFunc_GetVoteCounts_OutYesVoteCount;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVoteCounts_OutNoVoteCount;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0020(0x0018)()
};
static_assert(alignof(MissionVotingDetailsPanel_C_UpdateVoteCounts) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_UpdateVoteCounts");
static_assert(sizeof(MissionVotingDetailsPanel_C_UpdateVoteCounts) == 0x000038, "Wrong size on MissionVotingDetailsPanel_C_UpdateVoteCounts");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteCounts, CallFunc_GetVoteCounts_OutYesVoteCount) == 0x000000, "Member 'MissionVotingDetailsPanel_C_UpdateVoteCounts::CallFunc_GetVoteCounts_OutYesVoteCount' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteCounts, CallFunc_GetVoteCounts_OutNoVoteCount) == 0x000004, "Member 'MissionVotingDetailsPanel_C_UpdateVoteCounts::CallFunc_GetVoteCounts_OutNoVoteCount' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteCounts, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'MissionVotingDetailsPanel_C_UpdateVoteCounts::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoteCounts, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000020, "Member 'MissionVotingDetailsPanel_C_UpdateVoteCounts::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.IsVoteMultiPlayer
// 0x0020 (0x0020 - 0x0000)
struct MissionVotingDetailsPanel_C_IsVoteMultiPlayer final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVoter>                         CallFunc_GetVoters_ReturnValue;                    // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionVotingDetailsPanel_C_IsVoteMultiPlayer) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_IsVoteMultiPlayer");
static_assert(sizeof(MissionVotingDetailsPanel_C_IsVoteMultiPlayer) == 0x000020, "Wrong size on MissionVotingDetailsPanel_C_IsVoteMultiPlayer");
static_assert(offsetof(MissionVotingDetailsPanel_C_IsVoteMultiPlayer, Success) == 0x000000, "Member 'MissionVotingDetailsPanel_C_IsVoteMultiPlayer::Success' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_IsVoteMultiPlayer, CallFunc_GetVoters_ReturnValue) == 0x000008, "Member 'MissionVotingDetailsPanel_C_IsVoteMultiPlayer::CallFunc_GetVoters_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_IsVoteMultiPlayer, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'MissionVotingDetailsPanel_C_IsVoteMultiPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_IsVoteMultiPlayer, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'MissionVotingDetailsPanel_C_IsVoteMultiPlayer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function MissionVotingDetailsPanel.MissionVotingDetailsPanel_C.UpdateVoterInfo
// 0x0098 (0x0098 - 0x0000)
struct MissionVotingDetailsPanel_C_UpdateVoterInfo final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue_1;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasPlayerVoted_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVoter>                         CallFunc_GetVoters_ReturnValue;                    // 0x0028(0x0010)(ZeroConstructor, ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoter                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0038)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionVoter_C*                        CallFunc_Create_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionVotingDetailsPanel_C_UpdateVoterInfo) == 0x000008, "Wrong alignment on MissionVotingDetailsPanel_C_UpdateVoterInfo");
static_assert(sizeof(MissionVotingDetailsPanel_C_UpdateVoterInfo) == 0x000098, "Wrong size on MissionVotingDetailsPanel_C_UpdateVoterInfo");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_GetUINavigationManager_ReturnValue) == 0x000008, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_GetUINavigationManager_ReturnValue_1) == 0x000018, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_GetUINavigationManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_HasPlayerVoted_ReturnValue) == 0x000020, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_HasPlayerVoted_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_GetVoters_ReturnValue) == 0x000028, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_GetVoters_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_Array_Get_Item) == 0x000040, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_GetOwningPlayer_ReturnValue) == 0x000080, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_Create_ReturnValue) == 0x000088, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionVotingDetailsPanel_C_UpdateVoterInfo, CallFunc_AddChild_ReturnValue) == 0x000090, "Member 'MissionVotingDetailsPanel_C_UpdateVoterInfo::CallFunc_AddChild_ReturnValue' has a wrong offset!");

}

