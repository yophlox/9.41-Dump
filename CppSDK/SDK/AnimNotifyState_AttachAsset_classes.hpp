#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimNotifyState_AttachAsset

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AnimNotifyState_AttachAsset.AnimNotifyState_AttachAsset_C
// 0x0040 (0x0070 - 0x0030)
class UAnimNotifyState_AttachAsset_C final : public UAnimNotifyState
{
public:
	struct FAssetAttachment                       Attachment;                                        // 0x0030(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference)
	class UAnimSequence*                          Animation;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Looping;                                           // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayRate;                                          // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Param_Animation, float TotalDuration) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Param_Animation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimNotifyState_AttachAsset_C">();
	}
	static class UAnimNotifyState_AttachAsset_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimNotifyState_AttachAsset_C>();
	}
};
static_assert(alignof(UAnimNotifyState_AttachAsset_C) == 0x000008, "Wrong alignment on UAnimNotifyState_AttachAsset_C");
static_assert(sizeof(UAnimNotifyState_AttachAsset_C) == 0x000070, "Wrong size on UAnimNotifyState_AttachAsset_C");
static_assert(offsetof(UAnimNotifyState_AttachAsset_C, Attachment) == 0x000030, "Member 'UAnimNotifyState_AttachAsset_C::Attachment' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_AttachAsset_C, Animation) == 0x000060, "Member 'UAnimNotifyState_AttachAsset_C::Animation' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_AttachAsset_C, Looping) == 0x000068, "Member 'UAnimNotifyState_AttachAsset_C::Looping' has a wrong offset!");
static_assert(offsetof(UAnimNotifyState_AttachAsset_C, PlayRate) == 0x00006C, "Member 'UAnimNotifyState_AttachAsset_C::PlayRate' has a wrong offset!");

}

