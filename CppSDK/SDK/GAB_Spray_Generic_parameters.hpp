#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_Spray_Generic

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GAB_Spray_Generic.GAB_Spray_Generic_C.ExecuteUbergraph_GAB_Spray_Generic
// 0x00D0 (0x00D0 - 0x0000)
struct GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetCurrentSourceObject_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAthenaSprayItemDefinition*             K2Node_DynamicCast_AsAthena_Spray_Item_Definition; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              CallFunc_GetActivatingPawn_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerController*                  K2Node_DynamicCast_AsFort_Player_Controller;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TargetLineTrace_HitSomething;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_TargetLineTrace_Location;                 // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TargetLineTrace_Normal;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlaceInstanceOfClass_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromAxes_ReturnValue;         // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SprayDecal_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic) == 0x000010, "Wrong alignment on GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic");
static_assert(sizeof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic) == 0x0000D0, "Wrong size on GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, EntryPoint) == 0x000000, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::EntryPoint' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_IsServer_ReturnValue) == 0x000004, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_GetCurrentSourceObject_ReturnValue) == 0x000008, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_GetCurrentSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, K2Node_DynamicCast_AsAthena_Spray_Item_Definition) == 0x000010, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::K2Node_DynamicCast_AsAthena_Spray_Item_Definition' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_GetActivatingPawn_ReturnValue) == 0x000020, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_GetActivatingPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_GetActivatingPawn_ReturnValue_1) == 0x000030, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_GetActivatingPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, K2Node_DynamicCast_AsFort_Player_Controller) == 0x000038, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::K2Node_DynamicCast_AsFort_Player_Controller' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_TargetLineTrace_HitSomething) == 0x000041, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_TargetLineTrace_HitSomething' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_TargetLineTrace_Location) == 0x000044, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_TargetLineTrace_Location' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_TargetLineTrace_Normal) == 0x000050, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_TargetLineTrace_Normal' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_GetRightVector_ReturnValue) == 0x00005C, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_CanPlaceInstanceOfClass_ReturnValue) == 0x000068, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_CanPlaceInstanceOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_Cross_VectorVector_ReturnValue) == 0x000078, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_MakeRotationFromAxes_ReturnValue) == 0x000084, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_MakeRotationFromAxes_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'GAB_Spray_Generic_C_ExecuteUbergraph_GAB_Spray_Generic::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function GAB_Spray_Generic.GAB_Spray_Generic_C.TargetLineTrace
// 0x01B0 (0x01B0 - 0x0000)
struct GAB_Spray_Generic_C_TargetLineTrace final
{
public:
	class AFortPawn*                              ActivatingPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitSomething;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetBaseAimRotation_ReturnValue;           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCapsuleComponent*                      K2Node_DynamicCast_AsCapsule_Collision;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_133[0x1];                                      // 0x0133(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GAB_Spray_Generic_C_TargetLineTrace) == 0x000008, "Wrong alignment on GAB_Spray_Generic_C_TargetLineTrace");
static_assert(sizeof(GAB_Spray_Generic_C_TargetLineTrace) == 0x0001B0, "Wrong size on GAB_Spray_Generic_C_TargetLineTrace");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, ActivatingPawn) == 0x000000, "Member 'GAB_Spray_Generic_C_TargetLineTrace::ActivatingPawn' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, HitSomething) == 0x000008, "Member 'GAB_Spray_Generic_C_TargetLineTrace::HitSomething' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, Location) == 0x00000C, "Member 'GAB_Spray_Generic_C_TargetLineTrace::Location' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, Normal) == 0x000018, "Member 'GAB_Spray_Generic_C_TargetLineTrace::Normal' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_GetBaseAimRotation_ReturnValue) == 0x000024, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_GetBaseAimRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, K2Node_MakeArray_Array) == 0x000030, "Member 'GAB_Spray_Generic_C_TargetLineTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_GetForwardVector_ReturnValue) == 0x000040, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000050, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000058, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, K2Node_DynamicCast_AsCapsule_Collision) == 0x000068, "Member 'GAB_Spray_Generic_C_TargetLineTrace::K2Node_DynamicCast_AsCapsule_Collision' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'GAB_Spray_Generic_C_TargetLineTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000074, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakVector_X) == 0x000080, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakVector_Y) == 0x000084, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakVector_Z) == 0x000088, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_Add_FloatFloat_ReturnValue) == 0x00008C, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x00009C, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_LineTraceSingle_OutHit) == 0x0000A8, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x000130, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000131, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000132, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_Time) == 0x000134, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_Distance) == 0x000138, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_Location) == 0x00013C, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_Normal) == 0x000154, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_PhysMat) == 0x000170, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_HitActor) == 0x000178, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_HitComponent) == 0x000180, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000188, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000194, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_TargetLineTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0001A4, "Member 'GAB_Spray_Generic_C_TargetLineTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function GAB_Spray_Generic.GAB_Spray_Generic_C.GetMontageToPlay
// 0x0098 (0x0098 - 0x0000)
struct GAB_Spray_Generic_C_GetMontageToPlay final
{
public:
	class UFortMontageItemDefinitionBase*         EmoteAsset;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCustomBodyType                           BodyType;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortCustomGender                             Gender;                                            // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            ReturnValue;                                       // 0x0010(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	EFortCustomGender                             Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            CallFunc_GetMontageToPlay_ReturnValue;             // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsAssetNull_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0070(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(GAB_Spray_Generic_C_GetMontageToPlay) == 0x000008, "Wrong alignment on GAB_Spray_Generic_C_GetMontageToPlay");
static_assert(sizeof(GAB_Spray_Generic_C_GetMontageToPlay) == 0x000098, "Wrong size on GAB_Spray_Generic_C_GetMontageToPlay");
static_assert(offsetof(GAB_Spray_Generic_C_GetMontageToPlay, EmoteAsset) == 0x000000, "Member 'GAB_Spray_Generic_C_GetMontageToPlay::EmoteAsset' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_GetMontageToPlay, BodyType) == 0x000008, "Member 'GAB_Spray_Generic_C_GetMontageToPlay::BodyType' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_GetMontageToPlay, Gender) == 0x000009, "Member 'GAB_Spray_Generic_C_GetMontageToPlay::Gender' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_GetMontageToPlay, ReturnValue) == 0x000010, "Member 'GAB_Spray_Generic_C_GetMontageToPlay::ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_GetMontageToPlay, Temp_byte_Variable) == 0x000038, "Member 'GAB_Spray_Generic_C_GetMontageToPlay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_GetMontageToPlay, CallFunc_GetMontageToPlay_ReturnValue) == 0x000040, "Member 'GAB_Spray_Generic_C_GetMontageToPlay::CallFunc_GetMontageToPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_GetMontageToPlay, CallFunc_IsAssetNull_ReturnValue) == 0x000068, "Member 'GAB_Spray_Generic_C_GetMontageToPlay::CallFunc_IsAssetNull_ReturnValue' has a wrong offset!");
static_assert(offsetof(GAB_Spray_Generic_C_GetMontageToPlay, K2Node_Select_Default) == 0x000070, "Member 'GAB_Spray_Generic_C_GetMontageToPlay::K2Node_Select_Default' has a wrong offset!");

}

