#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ARDronePawn

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ARDronePawn.BP_ARDronePawn_C.ExecuteUbergraph_BP_ARDronePawn
// 0x0048 (0x0048 - 0x0000)
struct BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_OldController;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAltitude_ReturnValue;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWindVolumeFromAltitude_Volume;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn) == 0x000008, "Wrong alignment on BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn");
static_assert(sizeof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn) == 0x000048, "Wrong size on BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, EntryPoint) == 0x000000, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_FInterpTo_ReturnValue) == 0x00000C, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, K2Node_Event_OldController) == 0x000010, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, K2Node_Event_NewController) == 0x000018, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_GetVelocity_ReturnValue) == 0x000024, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000034, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_GetAltitude_ReturnValue) == 0x000038, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_GetAltitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_GetWindVolumeFromAltitude_Volume) == 0x00003C, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_GetWindVolumeFromAltitude_Volume' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn, CallFunc_FInterpTo_ReturnValue_1) == 0x000040, "Member 'BP_ARDronePawn_C_ExecuteUbergraph_BP_ARDronePawn::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");

// Function BP_ARDronePawn.BP_ARDronePawn_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ARDronePawn_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ARDronePawn_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ARDronePawn_C_ReceiveTick");
static_assert(sizeof(BP_ARDronePawn_C_ReceiveTick) == 0x000004, "Wrong size on BP_ARDronePawn_C_ReceiveTick");
static_assert(offsetof(BP_ARDronePawn_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ARDronePawn_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ARDronePawn.BP_ARDronePawn_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_ARDronePawn_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ARDronePawn_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_ARDronePawn_C_ReceivePossessed");
static_assert(sizeof(BP_ARDronePawn_C_ReceivePossessed) == 0x000008, "Wrong size on BP_ARDronePawn_C_ReceivePossessed");
static_assert(offsetof(BP_ARDronePawn_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_ARDronePawn_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_ARDronePawn.BP_ARDronePawn_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_ARDronePawn_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ARDronePawn_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on BP_ARDronePawn_C_ReceiveUnpossessed");
static_assert(sizeof(BP_ARDronePawn_C_ReceiveUnpossessed) == 0x000008, "Wrong size on BP_ARDronePawn_C_ReceiveUnpossessed");
static_assert(offsetof(BP_ARDronePawn_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'BP_ARDronePawn_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function BP_ARDronePawn.BP_ARDronePawn_C.SetWindAudioEnabled
// 0x0020 (0x0020 - 0x0000)
struct BP_ARDronePawn_C_SetWindAudioEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue_1;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ARDronePawn_C_SetWindAudioEnabled) == 0x000008, "Wrong alignment on BP_ARDronePawn_C_SetWindAudioEnabled");
static_assert(sizeof(BP_ARDronePawn_C_SetWindAudioEnabled) == 0x000020, "Wrong size on BP_ARDronePawn_C_SetWindAudioEnabled");
static_assert(offsetof(BP_ARDronePawn_C_SetWindAudioEnabled, Enabled) == 0x000000, "Member 'BP_ARDronePawn_C_SetWindAudioEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_SetWindAudioEnabled, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_ARDronePawn_C_SetWindAudioEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_SetWindAudioEnabled, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_ARDronePawn_C_SetWindAudioEnabled::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_SetWindAudioEnabled, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'BP_ARDronePawn_C_SetWindAudioEnabled::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_SetWindAudioEnabled, CallFunc_IsValid_ReturnValue_2) == 0x000010, "Member 'BP_ARDronePawn_C_SetWindAudioEnabled::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_SetWindAudioEnabled, CallFunc_SpawnSound2D_ReturnValue_1) == 0x000018, "Member 'BP_ARDronePawn_C_SetWindAudioEnabled::CallFunc_SpawnSound2D_ReturnValue_1' has a wrong offset!");

// Function BP_ARDronePawn.BP_ARDronePawn_C.GetWindVolumeFromAltitude
// 0x000C (0x000C - 0x0000)
struct BP_ARDronePawn_C_GetWindVolumeFromAltitude final
{
public:
	float                                         Altitude;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Volume;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ARDronePawn_C_GetWindVolumeFromAltitude) == 0x000004, "Wrong alignment on BP_ARDronePawn_C_GetWindVolumeFromAltitude");
static_assert(sizeof(BP_ARDronePawn_C_GetWindVolumeFromAltitude) == 0x00000C, "Wrong size on BP_ARDronePawn_C_GetWindVolumeFromAltitude");
static_assert(offsetof(BP_ARDronePawn_C_GetWindVolumeFromAltitude, Altitude) == 0x000000, "Member 'BP_ARDronePawn_C_GetWindVolumeFromAltitude::Altitude' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_GetWindVolumeFromAltitude, Volume) == 0x000004, "Member 'BP_ARDronePawn_C_GetWindVolumeFromAltitude::Volume' has a wrong offset!");
static_assert(offsetof(BP_ARDronePawn_C_GetWindVolumeFromAltitude, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_ARDronePawn_C_GetWindVolumeFromAltitude::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

}

