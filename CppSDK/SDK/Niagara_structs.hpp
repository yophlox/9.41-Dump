#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Niagara

#include "Basic.hpp"

#include "NiagaraShader_structs.hpp"
#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "NiagaraCore_structs.hpp"


namespace SDK
{

// Enum Niagara.ENiagaraCollisionMode
// NumValues: 0x0005
enum class ENiagaraCollisionMode : uint8
{
	None                                     = 0,
	SceneGeometry                            = 1,
	DepthBuffer                              = 2,
	DistanceField                            = 3,
	ENiagaraCollisionMode_MAX                = 4,
};

// Enum Niagara.ENiagaraScriptGroup
// NumValues: 0x0004
enum class ENiagaraScriptGroup : uint8
{
	Particle                                 = 0,
	Emitter                                  = 1,
	System                                   = 2,
	Max                                      = 3,
};

// Enum Niagara.ENiagaraScriptUsage
// NumValues: 0x000D
enum class ENiagaraScriptUsage : uint8
{
	Function                                 = 0,
	Module                                   = 1,
	DynamicInput                             = 2,
	ParticleSpawnScript                      = 3,
	ParticleSpawnScriptInterpolated          = 4,
	ParticleUpdateScript                     = 5,
	ParticleEventScript                      = 6,
	ParticleGPUComputeScript                 = 7,
	EmitterSpawnScript                       = 8,
	EmitterUpdateScript                      = 9,
	SystemSpawnScript                        = 10,
	SystemUpdateScript                       = 11,
	ENiagaraScriptUsage_MAX                  = 12,
};

// Enum Niagara.ENiagaraScriptCompileStatus
// NumValues: 0x0008
enum class ENiagaraScriptCompileStatus : uint8
{
	NCS_Unknown                              = 0,
	NCS_Dirty                                = 1,
	NCS_Error                                = 2,
	NCS_UpToDate                             = 3,
	NCS_BeingCreated                         = 4,
	NCS_UpToDateWithWarnings                 = 5,
	NCS_ComputeUpToDateWithWarnings          = 6,
	NCS_MAX                                  = 7,
};

// Enum Niagara.ENiagaraInputNodeUsage
// NumValues: 0x0007
enum class ENiagaraInputNodeUsage : uint8
{
	Undefined                                = 0,
	Parameter                                = 1,
	Attribute                                = 2,
	SystemConstant                           = 3,
	TranslatorConstant                       = 4,
	RapidIterationParameter                  = 5,
	ENiagaraInputNodeUsage_MAX               = 6,
};

// Enum Niagara.ENiagaraDataSetType
// NumValues: 0x0004
enum class ENiagaraDataSetType : uint8
{
	ParticleData                             = 0,
	Shared                                   = 1,
	Event                                    = 2,
	ENiagaraDataSetType_MAX                  = 3,
};

// Enum Niagara.ENiagaraAgeUpdateMode
// NumValues: 0x0003
enum class ENiagaraAgeUpdateMode : uint8
{
	TickDeltaTime                            = 0,
	DesiredAge                               = 1,
	ENiagaraAgeUpdateMode_MAX                = 2,
};

// Enum Niagara.ENiagaraSimTarget
// NumValues: 0x0004
enum class ENiagaraSimTarget : uint8
{
	CPUSim                                   = 0,
	GPUComputeSim                            = 1,
	DynamicLoadBalancedSim                   = 2,
	ENiagaraSimTarget_MAX                    = 3,
};

// Enum Niagara.ENDISkeletalMesh_SkinningMode
// NumValues: 0x0004
enum class ENDISkeletalMesh_SkinningMode : uint8
{
	None                                     = 0,
	SkinOnTheFly                             = 1,
	PreSkin                                  = 2,
	ENDISkeletalMesh_MAX                     = 3,
};

// Enum Niagara.EScriptExecutionMode
// NumValues: 0x0004
enum class EScriptExecutionMode : uint8
{
	EveryParticle                            = 0,
	SpawnedParticles                         = 1,
	SingleParticle                           = 2,
	EScriptExecutionMode_MAX                 = 3,
};

// Enum Niagara.ENiagaraSortMode
// NumValues: 0x0006
enum class ENiagaraSortMode : uint8
{
	None                                     = 0,
	ViewDepth                                = 1,
	ViewDistance                             = 2,
	CustomAscending                          = 3,
	CustomDecending                          = 4,
	ENiagaraSortMode_MAX                     = 5,
};

// Enum Niagara.ENiagaraMeshFacingMode
// NumValues: 0x0005
enum class ENiagaraMeshFacingMode : uint8
{
	Default                                  = 0,
	Velocity                                 = 1,
	CameraPosition                           = 2,
	CameraPlane                              = 3,
	ENiagaraMeshFacingMode_MAX               = 4,
};

// Enum Niagara.ENiagaraPreviewGridResetMode
// NumValues: 0x0004
enum class ENiagaraPreviewGridResetMode : uint8
{
	Never                                    = 0,
	Individual                               = 1,
	All                                      = 2,
	ENiagaraPreviewGridResetMode_MAX         = 3,
};

// Enum Niagara.ENiagaraRibbonDrawDirection
// NumValues: 0x0003
enum class ENiagaraRibbonDrawDirection : uint8
{
	FrontToBack                              = 0,
	BackToFront                              = 1,
	ENiagaraRibbonDrawDirection_MAX          = 2,
};

// Enum Niagara.ENiagaraRibbonAgeOffsetMode
// NumValues: 0x0003
enum class ENiagaraRibbonAgeOffsetMode : uint8
{
	Scale                                    = 0,
	Clip                                     = 1,
	ENiagaraRibbonAgeOffsetMode_MAX          = 2,
};

// Enum Niagara.ENiagaraRibbonFacingMode
// NumValues: 0x0003
enum class ENiagaraRibbonFacingMode : uint8
{
	Screen                                   = 0,
	Custom                                   = 1,
	ENiagaraRibbonFacingMode_MAX             = 2,
};

// Enum Niagara.ENiagaraModuleDependencyScriptConstraint
// NumValues: 0x0003
enum class ENiagaraModuleDependencyScriptConstraint : uint8
{
	SameScript                               = 0,
	AllScripts                               = 1,
	ENiagaraModuleDependencyScriptConstraint_MAX = 2,
};

// Enum Niagara.ENiagaraModuleDependencyType
// NumValues: 0x0003
enum class ENiagaraModuleDependencyType : uint8
{
	PreDependency                            = 0,
	PostDependency                           = 1,
	ENiagaraModuleDependencyType_MAX         = 2,
};

// Enum Niagara.EUnusedAttributeBehaviour
// NumValues: 0x0006
enum class EUnusedAttributeBehaviour : uint8
{
	Copy                                     = 0,
	Zero                                     = 1,
	None                                     = 2,
	MarkInvalid                              = 3,
	PassThrough                              = 4,
	EUnusedAttributeBehaviour_MAX            = 5,
};

// Enum Niagara.ENiagaraSpriteFacingMode
// NumValues: 0x0006
enum class ENiagaraSpriteFacingMode : uint8
{
	FaceCamera                               = 0,
	FaceCameraPlane                          = 1,
	CustomFacingVector                       = 2,
	FaceCameraPosition                       = 3,
	FaceCameraDistanceBlend                  = 4,
	ENiagaraSpriteFacingMode_MAX             = 5,
};

// Enum Niagara.ENiagaraSpriteAlignment
// NumValues: 0x0004
enum class ENiagaraSpriteAlignment : uint8
{
	Unaligned                                = 0,
	VelocityAligned                          = 1,
	CustomAlignment                          = 2,
	ENiagaraSpriteAlignment_MAX              = 3,
};

// Enum Niagara.ENiagaraExecutionState
// NumValues: 0x0007
enum class ENiagaraExecutionState : uint8
{
	Active                                   = 0,
	Inactive                                 = 1,
	InactiveClear                            = 2,
	Complete                                 = 3,
	Disabled                                 = 4,
	Num                                      = 5,
	ENiagaraExecutionState_MAX               = 6,
};

// Enum Niagara.ENiagaraExecutionStateSource
// NumValues: 0x0005
enum class ENiagaraExecutionStateSource : uint8
{
	Scalability                              = 0,
	Internal                                 = 1,
	Owner                                    = 2,
	InternalCompletion                       = 3,
	ENiagaraExecutionStateSource_MAX         = 4,
};

// Enum Niagara.ENiagaraNumericOutputTypeSelectionMode
// NumValues: 0x0005
enum class ENiagaraNumericOutputTypeSelectionMode : uint8
{
	None                                     = 0,
	Largest                                  = 1,
	Smallest                                 = 2,
	Scalar                                   = 3,
	ENiagaraNumericOutputTypeSelectionMode_MAX = 4,
};

// ScriptStruct Niagara.NiagaraParameterMap
// 0x0001 (0x0001 - 0x0000)
struct FNiagaraParameterMap final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraParameterMap) == 0x000001, "Wrong alignment on FNiagaraParameterMap");
static_assert(sizeof(FNiagaraParameterMap) == 0x000001, "Wrong size on FNiagaraParameterMap");

// ScriptStruct Niagara.NiagaraTypeDefinition
// 0x0018 (0x0018 - 0x0000)
struct FNiagaraTypeDefinition final
{
public:
	class UStruct*                                Struct;                                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEnum*                                  Enum;                                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraTypeDefinition) == 0x000008, "Wrong alignment on FNiagaraTypeDefinition");
static_assert(sizeof(FNiagaraTypeDefinition) == 0x000018, "Wrong size on FNiagaraTypeDefinition");
static_assert(offsetof(FNiagaraTypeDefinition, Struct) == 0x000000, "Member 'FNiagaraTypeDefinition::Struct' has a wrong offset!");
static_assert(offsetof(FNiagaraTypeDefinition, Enum) == 0x000008, "Member 'FNiagaraTypeDefinition::Enum' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVariable
// 0x0030 (0x0030 - 0x0000)
struct FNiagaraVariable final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FNiagaraTypeDefinition                 TypeDef;                                           // 0x0008(0x0018)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<uint8>                                 VarData;                                           // 0x0020(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FNiagaraVariable) == 0x000008, "Wrong alignment on FNiagaraVariable");
static_assert(sizeof(FNiagaraVariable) == 0x000030, "Wrong size on FNiagaraVariable");
static_assert(offsetof(FNiagaraVariable, Name) == 0x000000, "Member 'FNiagaraVariable::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraVariable, TypeDef) == 0x000008, "Member 'FNiagaraVariable::TypeDef' has a wrong offset!");
static_assert(offsetof(FNiagaraVariable, VarData) == 0x000020, "Member 'FNiagaraVariable::VarData' has a wrong offset!");

// ScriptStruct Niagara.MovieSceneNiagaraParameterSectionTemplate
// 0x0030 (0x0050 - 0x0020)
struct FMovieSceneNiagaraParameterSectionTemplate : public FMovieSceneEvalTemplate
{
public:
	struct FNiagaraVariable                       Parameter;                                         // 0x0020(0x0030)(HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneNiagaraParameterSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneNiagaraParameterSectionTemplate");
static_assert(sizeof(FMovieSceneNiagaraParameterSectionTemplate) == 0x000050, "Wrong size on FMovieSceneNiagaraParameterSectionTemplate");
static_assert(offsetof(FMovieSceneNiagaraParameterSectionTemplate, Parameter) == 0x000020, "Member 'FMovieSceneNiagaraParameterSectionTemplate::Parameter' has a wrong offset!");

// ScriptStruct Niagara.NiagaraBool
// 0x0004 (0x0004 - 0x0000)
struct FNiagaraBool final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FNiagaraBool) == 0x000004, "Wrong alignment on FNiagaraBool");
static_assert(sizeof(FNiagaraBool) == 0x000004, "Wrong size on FNiagaraBool");
static_assert(offsetof(FNiagaraBool, Value) == 0x000000, "Member 'FNiagaraBool::Value' has a wrong offset!");

// ScriptStruct Niagara.MovieSceneNiagaraBoolParameterSectionTemplate
// 0x0090 (0x00E0 - 0x0050)
struct FMovieSceneNiagaraBoolParameterSectionTemplate final : public FMovieSceneNiagaraParameterSectionTemplate
{
public:
	struct FMovieSceneBoolChannel                 BoolChannel;                                       // 0x0050(0x0090)(NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneNiagaraBoolParameterSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneNiagaraBoolParameterSectionTemplate");
static_assert(sizeof(FMovieSceneNiagaraBoolParameterSectionTemplate) == 0x0000E0, "Wrong size on FMovieSceneNiagaraBoolParameterSectionTemplate");
static_assert(offsetof(FMovieSceneNiagaraBoolParameterSectionTemplate, BoolChannel) == 0x000050, "Member 'FMovieSceneNiagaraBoolParameterSectionTemplate::BoolChannel' has a wrong offset!");

// ScriptStruct Niagara.NiagaraTestStructInner
// 0x0018 (0x0018 - 0x0000)
struct FNiagaraTestStructInner final
{
public:
	struct FVector                                InnerVector1;                                      // 0x0000(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                InnerVector2;                                      // 0x000C(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraTestStructInner) == 0x000004, "Wrong alignment on FNiagaraTestStructInner");
static_assert(sizeof(FNiagaraTestStructInner) == 0x000018, "Wrong size on FNiagaraTestStructInner");
static_assert(offsetof(FNiagaraTestStructInner, InnerVector1) == 0x000000, "Member 'FNiagaraTestStructInner::InnerVector1' has a wrong offset!");
static_assert(offsetof(FNiagaraTestStructInner, InnerVector2) == 0x00000C, "Member 'FNiagaraTestStructInner::InnerVector2' has a wrong offset!");

// ScriptStruct Niagara.NiagaraScriptExecutionPaddingInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x04) FNiagaraScriptExecutionPaddingInfo final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraScriptExecutionPaddingInfo) == 0x000004, "Wrong alignment on FNiagaraScriptExecutionPaddingInfo");
static_assert(sizeof(FNiagaraScriptExecutionPaddingInfo) == 0x000010, "Wrong size on FNiagaraScriptExecutionPaddingInfo");

// ScriptStruct Niagara.NiagaraParameterStore
// 0x00E8 (0x00E8 - 0x0000)
struct FNiagaraParameterStore
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Owner;                                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FNiagaraVariable, int32>          ParameterOffsets;                                  // 0x0010(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<uint8>                                 ParameterData;                                     // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UNiagaraDataInterface*>          DataInterfaces;                                    // 0x0070(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_80[0x68];                                      // 0x0080(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraParameterStore) == 0x000008, "Wrong alignment on FNiagaraParameterStore");
static_assert(sizeof(FNiagaraParameterStore) == 0x0000E8, "Wrong size on FNiagaraParameterStore");
static_assert(offsetof(FNiagaraParameterStore, Owner) == 0x000008, "Member 'FNiagaraParameterStore::Owner' has a wrong offset!");
static_assert(offsetof(FNiagaraParameterStore, ParameterOffsets) == 0x000010, "Member 'FNiagaraParameterStore::ParameterOffsets' has a wrong offset!");
static_assert(offsetof(FNiagaraParameterStore, ParameterData) == 0x000060, "Member 'FNiagaraParameterStore::ParameterData' has a wrong offset!");
static_assert(offsetof(FNiagaraParameterStore, DataInterfaces) == 0x000070, "Member 'FNiagaraParameterStore::DataInterfaces' has a wrong offset!");

// ScriptStruct Niagara.NiagaraScriptExecutionParameterStore
// 0x0020 (0x0108 - 0x00E8)
struct FNiagaraScriptExecutionParameterStore final : public FNiagaraParameterStore
{
public:
	int32                                         ParameterSize;                                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                        PaddedParameterSize;                               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FNiagaraScriptExecutionPaddingInfo> PaddingInfo;                                       // 0x00F0(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         bInitialized : 1;                                  // 0x0100(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraScriptExecutionParameterStore) == 0x000008, "Wrong alignment on FNiagaraScriptExecutionParameterStore");
static_assert(sizeof(FNiagaraScriptExecutionParameterStore) == 0x000108, "Wrong size on FNiagaraScriptExecutionParameterStore");
static_assert(offsetof(FNiagaraScriptExecutionParameterStore, ParameterSize) == 0x0000E8, "Member 'FNiagaraScriptExecutionParameterStore::ParameterSize' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptExecutionParameterStore, PaddedParameterSize) == 0x0000EC, "Member 'FNiagaraScriptExecutionParameterStore::PaddedParameterSize' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptExecutionParameterStore, PaddingInfo) == 0x0000F0, "Member 'FNiagaraScriptExecutionParameterStore::PaddingInfo' has a wrong offset!");

// ScriptStruct Niagara.MovieSceneNiagaraColorParameterSectionTemplate
// 0x0280 (0x02D0 - 0x0050)
struct FMovieSceneNiagaraColorParameterSectionTemplate final : public FMovieSceneNiagaraParameterSectionTemplate
{
public:
	struct FMovieSceneFloatChannel                RedChannel;                                        // 0x0050(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                GreenChannel;                                      // 0x00F0(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                BlueChannel;                                       // 0x0190(0x00A0)(NativeAccessSpecifierPrivate)
	struct FMovieSceneFloatChannel                AlphaChannel;                                      // 0x0230(0x00A0)(NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneNiagaraColorParameterSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneNiagaraColorParameterSectionTemplate");
static_assert(sizeof(FMovieSceneNiagaraColorParameterSectionTemplate) == 0x0002D0, "Wrong size on FMovieSceneNiagaraColorParameterSectionTemplate");
static_assert(offsetof(FMovieSceneNiagaraColorParameterSectionTemplate, RedChannel) == 0x000050, "Member 'FMovieSceneNiagaraColorParameterSectionTemplate::RedChannel' has a wrong offset!");
static_assert(offsetof(FMovieSceneNiagaraColorParameterSectionTemplate, GreenChannel) == 0x0000F0, "Member 'FMovieSceneNiagaraColorParameterSectionTemplate::GreenChannel' has a wrong offset!");
static_assert(offsetof(FMovieSceneNiagaraColorParameterSectionTemplate, BlueChannel) == 0x000190, "Member 'FMovieSceneNiagaraColorParameterSectionTemplate::BlueChannel' has a wrong offset!");
static_assert(offsetof(FMovieSceneNiagaraColorParameterSectionTemplate, AlphaChannel) == 0x000230, "Member 'FMovieSceneNiagaraColorParameterSectionTemplate::AlphaChannel' has a wrong offset!");

// ScriptStruct Niagara.MovieSceneNiagaraFloatParameterSectionTemplate
// 0x00A0 (0x00F0 - 0x0050)
struct FMovieSceneNiagaraFloatParameterSectionTemplate final : public FMovieSceneNiagaraParameterSectionTemplate
{
public:
	struct FMovieSceneFloatChannel                FloatChannel;                                      // 0x0050(0x00A0)(NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneNiagaraFloatParameterSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneNiagaraFloatParameterSectionTemplate");
static_assert(sizeof(FMovieSceneNiagaraFloatParameterSectionTemplate) == 0x0000F0, "Wrong size on FMovieSceneNiagaraFloatParameterSectionTemplate");
static_assert(offsetof(FMovieSceneNiagaraFloatParameterSectionTemplate, FloatChannel) == 0x000050, "Member 'FMovieSceneNiagaraFloatParameterSectionTemplate::FloatChannel' has a wrong offset!");

// ScriptStruct Niagara.NiagaraModuleDependency
// 0x0028 (0x0028 - 0x0000)
struct FNiagaraModuleDependency final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraModuleDependencyType                  Type;                                              // 0x0008(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraModuleDependencyScriptConstraint      ScriptConstraint;                                  // 0x0009(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Description;                                       // 0x0010(0x0018)(Edit, AssetRegistrySearchable, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraModuleDependency) == 0x000008, "Wrong alignment on FNiagaraModuleDependency");
static_assert(sizeof(FNiagaraModuleDependency) == 0x000028, "Wrong size on FNiagaraModuleDependency");
static_assert(offsetof(FNiagaraModuleDependency, ID) == 0x000000, "Member 'FNiagaraModuleDependency::ID' has a wrong offset!");
static_assert(offsetof(FNiagaraModuleDependency, Type) == 0x000008, "Member 'FNiagaraModuleDependency::Type' has a wrong offset!");
static_assert(offsetof(FNiagaraModuleDependency, ScriptConstraint) == 0x000009, "Member 'FNiagaraModuleDependency::ScriptConstraint' has a wrong offset!");
static_assert(offsetof(FNiagaraModuleDependency, Description) == 0x000010, "Member 'FNiagaraModuleDependency::Description' has a wrong offset!");

// ScriptStruct Niagara.MovieSceneNiagaraIntegerParameterSectionTemplate
// 0x0090 (0x00E0 - 0x0050)
struct FMovieSceneNiagaraIntegerParameterSectionTemplate final : public FMovieSceneNiagaraParameterSectionTemplate
{
public:
	struct FMovieSceneIntegerChannel              IntegerChannel;                                    // 0x0050(0x0090)(NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneNiagaraIntegerParameterSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneNiagaraIntegerParameterSectionTemplate");
static_assert(sizeof(FMovieSceneNiagaraIntegerParameterSectionTemplate) == 0x0000E0, "Wrong size on FMovieSceneNiagaraIntegerParameterSectionTemplate");
static_assert(offsetof(FMovieSceneNiagaraIntegerParameterSectionTemplate, IntegerChannel) == 0x000050, "Member 'FMovieSceneNiagaraIntegerParameterSectionTemplate::IntegerChannel' has a wrong offset!");

// ScriptStruct Niagara.NDIStaticMeshSectionFilter
// 0x0010 (0x0010 - 0x0000)
struct FNDIStaticMeshSectionFilter final
{
public:
	TArray<int32>                                 AllowedMaterialSlots;                              // 0x0000(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNDIStaticMeshSectionFilter) == 0x000008, "Wrong alignment on FNDIStaticMeshSectionFilter");
static_assert(sizeof(FNDIStaticMeshSectionFilter) == 0x000010, "Wrong size on FNDIStaticMeshSectionFilter");
static_assert(offsetof(FNDIStaticMeshSectionFilter, AllowedMaterialSlots) == 0x000000, "Member 'FNDIStaticMeshSectionFilter::AllowedMaterialSlots' has a wrong offset!");

// ScriptStruct Niagara.MovieSceneNiagaraSystemTrackImplementation
// 0x0008 (0x0018 - 0x0010)
struct FMovieSceneNiagaraSystemTrackImplementation final : public FMovieSceneTrackImplementation
{
public:
	struct FFrameNumber                           SpawnSectionStartFrame;                            // 0x0010(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FFrameNumber                           SpawnSectionEndFrame;                              // 0x0014(0x0004)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FMovieSceneNiagaraSystemTrackImplementation) == 0x000008, "Wrong alignment on FMovieSceneNiagaraSystemTrackImplementation");
static_assert(sizeof(FMovieSceneNiagaraSystemTrackImplementation) == 0x000018, "Wrong size on FMovieSceneNiagaraSystemTrackImplementation");
static_assert(offsetof(FMovieSceneNiagaraSystemTrackImplementation, SpawnSectionStartFrame) == 0x000010, "Member 'FMovieSceneNiagaraSystemTrackImplementation::SpawnSectionStartFrame' has a wrong offset!");
static_assert(offsetof(FMovieSceneNiagaraSystemTrackImplementation, SpawnSectionEndFrame) == 0x000014, "Member 'FMovieSceneNiagaraSystemTrackImplementation::SpawnSectionEndFrame' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEventReceiverProperties
// 0x0018 (0x0018 - 0x0000)
struct FNiagaraEventReceiverProperties final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceEventGenerator;                              // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceEmitter;                                     // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEventReceiverProperties) == 0x000004, "Wrong alignment on FNiagaraEventReceiverProperties");
static_assert(sizeof(FNiagaraEventReceiverProperties) == 0x000018, "Wrong size on FNiagaraEventReceiverProperties");
static_assert(offsetof(FNiagaraEventReceiverProperties, Name) == 0x000000, "Member 'FNiagaraEventReceiverProperties::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraEventReceiverProperties, SourceEventGenerator) == 0x000008, "Member 'FNiagaraEventReceiverProperties::SourceEventGenerator' has a wrong offset!");
static_assert(offsetof(FNiagaraEventReceiverProperties, SourceEmitter) == 0x000010, "Member 'FNiagaraEventReceiverProperties::SourceEmitter' has a wrong offset!");

// ScriptStruct Niagara.NiagaraDataSetID
// 0x000C (0x000C - 0x0000)
struct FNiagaraDataSetID final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraDataSetType                           Type;                                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraDataSetID) == 0x000004, "Wrong alignment on FNiagaraDataSetID");
static_assert(sizeof(FNiagaraDataSetID) == 0x00000C, "Wrong size on FNiagaraDataSetID");
static_assert(offsetof(FNiagaraDataSetID, Name) == 0x000000, "Member 'FNiagaraDataSetID::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraDataSetID, Type) == 0x000008, "Member 'FNiagaraDataSetID::Type' has a wrong offset!");

// ScriptStruct Niagara.NiagaraDataSetProperties
// 0x0020 (0x0020 - 0x0000)
struct FNiagaraDataSetProperties final
{
public:
	struct FNiagaraDataSetID                      ID;                                                // 0x0000(0x000C)(Edit, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNiagaraVariable>               Variables;                                         // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraDataSetProperties) == 0x000008, "Wrong alignment on FNiagaraDataSetProperties");
static_assert(sizeof(FNiagaraDataSetProperties) == 0x000020, "Wrong size on FNiagaraDataSetProperties");
static_assert(offsetof(FNiagaraDataSetProperties, ID) == 0x000000, "Member 'FNiagaraDataSetProperties::ID' has a wrong offset!");
static_assert(offsetof(FNiagaraDataSetProperties, Variables) == 0x000010, "Member 'FNiagaraDataSetProperties::Variables' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEventGeneratorProperties
// 0x0030 (0x0030 - 0x0000)
struct FNiagaraEventGeneratorProperties final
{
public:
	int32                                         MaxEventsPerFrame;                                 // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ID;                                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraDataSetProperties              SetProps;                                          // 0x0010(0x0020)(NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEventGeneratorProperties) == 0x000008, "Wrong alignment on FNiagaraEventGeneratorProperties");
static_assert(sizeof(FNiagaraEventGeneratorProperties) == 0x000030, "Wrong size on FNiagaraEventGeneratorProperties");
static_assert(offsetof(FNiagaraEventGeneratorProperties, MaxEventsPerFrame) == 0x000000, "Member 'FNiagaraEventGeneratorProperties::MaxEventsPerFrame' has a wrong offset!");
static_assert(offsetof(FNiagaraEventGeneratorProperties, ID) == 0x000004, "Member 'FNiagaraEventGeneratorProperties::ID' has a wrong offset!");
static_assert(offsetof(FNiagaraEventGeneratorProperties, SetProps) == 0x000010, "Member 'FNiagaraEventGeneratorProperties::SetProps' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEmitterScriptProperties
// 0x0028 (0x0028 - 0x0000)
struct FNiagaraEmitterScriptProperties
{
public:
	class UNiagaraScript*                         Script;                                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraEventReceiverProperties> EventReceivers;                                    // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraEventGeneratorProperties> EventGenerators;                                   // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEmitterScriptProperties) == 0x000008, "Wrong alignment on FNiagaraEmitterScriptProperties");
static_assert(sizeof(FNiagaraEmitterScriptProperties) == 0x000028, "Wrong size on FNiagaraEmitterScriptProperties");
static_assert(offsetof(FNiagaraEmitterScriptProperties, Script) == 0x000000, "Member 'FNiagaraEmitterScriptProperties::Script' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterScriptProperties, EventReceivers) == 0x000008, "Member 'FNiagaraEmitterScriptProperties::EventReceivers' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterScriptProperties, EventGenerators) == 0x000018, "Member 'FNiagaraEmitterScriptProperties::EventGenerators' has a wrong offset!");

// ScriptStruct Niagara.MovieSceneNiagaraSystemTrackTemplate
// 0x0000 (0x0020 - 0x0020)
struct FMovieSceneNiagaraSystemTrackTemplate final : public FMovieSceneEvalTemplate
{
};
static_assert(alignof(FMovieSceneNiagaraSystemTrackTemplate) == 0x000008, "Wrong alignment on FMovieSceneNiagaraSystemTrackTemplate");
static_assert(sizeof(FMovieSceneNiagaraSystemTrackTemplate) == 0x000020, "Wrong size on FMovieSceneNiagaraSystemTrackTemplate");

// ScriptStruct Niagara.MovieSceneNiagaraVectorParameterSectionTemplate
// 0x0288 (0x02D8 - 0x0050)
struct FMovieSceneNiagaraVectorParameterSectionTemplate final : public FMovieSceneNiagaraParameterSectionTemplate
{
public:
	struct FMovieSceneFloatChannel                VectorChannels[0x4];                               // 0x0050(0x00A0)(NativeAccessSpecifierPrivate)
	int32                                         ChannelsUsed;                                      // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMovieSceneNiagaraVectorParameterSectionTemplate) == 0x000008, "Wrong alignment on FMovieSceneNiagaraVectorParameterSectionTemplate");
static_assert(sizeof(FMovieSceneNiagaraVectorParameterSectionTemplate) == 0x0002D8, "Wrong size on FMovieSceneNiagaraVectorParameterSectionTemplate");
static_assert(offsetof(FMovieSceneNiagaraVectorParameterSectionTemplate, VectorChannels) == 0x000050, "Member 'FMovieSceneNiagaraVectorParameterSectionTemplate::VectorChannels' has a wrong offset!");
static_assert(offsetof(FMovieSceneNiagaraVectorParameterSectionTemplate, ChannelsUsed) == 0x0002D0, "Member 'FMovieSceneNiagaraVectorParameterSectionTemplate::ChannelsUsed' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVariableDataInterfaceBinding
// 0x0030 (0x0030 - 0x0000)
struct FNiagaraVariableDataInterfaceBinding final
{
public:
	struct FNiagaraVariable                       BoundVariable;                                     // 0x0000(0x0030)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraVariableDataInterfaceBinding) == 0x000008, "Wrong alignment on FNiagaraVariableDataInterfaceBinding");
static_assert(sizeof(FNiagaraVariableDataInterfaceBinding) == 0x000030, "Wrong size on FNiagaraVariableDataInterfaceBinding");
static_assert(offsetof(FNiagaraVariableDataInterfaceBinding, BoundVariable) == 0x000000, "Member 'FNiagaraVariableDataInterfaceBinding::BoundVariable' has a wrong offset!");

// ScriptStruct Niagara.NiagaraSpawnInfo
// 0x0010 (0x0010 - 0x0000)
struct FNiagaraSpawnInfo final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InterpStartDt;                                     // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         IntervalDt;                                        // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SpawnGroup;                                        // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraSpawnInfo) == 0x000004, "Wrong alignment on FNiagaraSpawnInfo");
static_assert(sizeof(FNiagaraSpawnInfo) == 0x000010, "Wrong size on FNiagaraSpawnInfo");
static_assert(offsetof(FNiagaraSpawnInfo, Count) == 0x000000, "Member 'FNiagaraSpawnInfo::Count' has a wrong offset!");
static_assert(offsetof(FNiagaraSpawnInfo, InterpStartDt) == 0x000004, "Member 'FNiagaraSpawnInfo::InterpStartDt' has a wrong offset!");
static_assert(offsetof(FNiagaraSpawnInfo, IntervalDt) == 0x000008, "Member 'FNiagaraSpawnInfo::IntervalDt' has a wrong offset!");
static_assert(offsetof(FNiagaraSpawnInfo, SpawnGroup) == 0x00000C, "Member 'FNiagaraSpawnInfo::SpawnGroup' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVariableAttributeBinding
// 0x0090 (0x0090 - 0x0000)
struct FNiagaraVariableAttributeBinding final
{
public:
	struct FNiagaraVariable                       BoundVariable;                                     // 0x0000(0x0030)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraVariable                       DataSetVariable;                                   // 0x0030(0x0030)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraVariable                       DefaultValueIfNonExistent;                         // 0x0060(0x0030)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraVariableAttributeBinding) == 0x000008, "Wrong alignment on FNiagaraVariableAttributeBinding");
static_assert(sizeof(FNiagaraVariableAttributeBinding) == 0x000090, "Wrong size on FNiagaraVariableAttributeBinding");
static_assert(offsetof(FNiagaraVariableAttributeBinding, BoundVariable) == 0x000000, "Member 'FNiagaraVariableAttributeBinding::BoundVariable' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableAttributeBinding, DataSetVariable) == 0x000030, "Member 'FNiagaraVariableAttributeBinding::DataSetVariable' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableAttributeBinding, DefaultValueIfNonExistent) == 0x000060, "Member 'FNiagaraVariableAttributeBinding::DefaultValueIfNonExistent' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVariableInfo
// 0x0050 (0x0050 - 0x0000)
struct FNiagaraVariableInfo final
{
public:
	struct FNiagaraVariable                       Variable;                                          // 0x0000(0x0030)(HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Definition;                                        // 0x0030(0x0018)(NativeAccessSpecifierPublic)
	class UNiagaraDataInterface*                  DataInterface;                                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraVariableInfo) == 0x000008, "Wrong alignment on FNiagaraVariableInfo");
static_assert(sizeof(FNiagaraVariableInfo) == 0x000050, "Wrong size on FNiagaraVariableInfo");
static_assert(offsetof(FNiagaraVariableInfo, Variable) == 0x000000, "Member 'FNiagaraVariableInfo::Variable' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableInfo, Definition) == 0x000030, "Member 'FNiagaraVariableInfo::Definition' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableInfo, DataInterface) == 0x000048, "Member 'FNiagaraVariableInfo::DataInterface' has a wrong offset!");

// ScriptStruct Niagara.NiagaraCollisionEventPayload
// 0x002C (0x002C - 0x0000)
struct FNiagaraCollisionEventPayload final
{
public:
	struct FVector                                CollisionPos;                                      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CollisionNormal;                                   // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CollisionVelocity;                                 // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ParticleIndex;                                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PhysicalMaterialIndex;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraCollisionEventPayload) == 0x000004, "Wrong alignment on FNiagaraCollisionEventPayload");
static_assert(sizeof(FNiagaraCollisionEventPayload) == 0x00002C, "Wrong size on FNiagaraCollisionEventPayload");
static_assert(offsetof(FNiagaraCollisionEventPayload, CollisionPos) == 0x000000, "Member 'FNiagaraCollisionEventPayload::CollisionPos' has a wrong offset!");
static_assert(offsetof(FNiagaraCollisionEventPayload, CollisionNormal) == 0x00000C, "Member 'FNiagaraCollisionEventPayload::CollisionNormal' has a wrong offset!");
static_assert(offsetof(FNiagaraCollisionEventPayload, CollisionVelocity) == 0x000018, "Member 'FNiagaraCollisionEventPayload::CollisionVelocity' has a wrong offset!");
static_assert(offsetof(FNiagaraCollisionEventPayload, ParticleIndex) == 0x000024, "Member 'FNiagaraCollisionEventPayload::ParticleIndex' has a wrong offset!");
static_assert(offsetof(FNiagaraCollisionEventPayload, PhysicalMaterialIndex) == 0x000028, "Member 'FNiagaraCollisionEventPayload::PhysicalMaterialIndex' has a wrong offset!");

// ScriptStruct Niagara.VMExternalFunctionBindingInfo
// 0x0028 (0x0028 - 0x0000)
struct FVMExternalFunctionBindingInfo final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   OwnerName;                                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  InputParamLocations;                               // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         NumOutputs;                                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FVMExternalFunctionBindingInfo) == 0x000008, "Wrong alignment on FVMExternalFunctionBindingInfo");
static_assert(sizeof(FVMExternalFunctionBindingInfo) == 0x000028, "Wrong size on FVMExternalFunctionBindingInfo");
static_assert(offsetof(FVMExternalFunctionBindingInfo, Name) == 0x000000, "Member 'FVMExternalFunctionBindingInfo::Name' has a wrong offset!");
static_assert(offsetof(FVMExternalFunctionBindingInfo, OwnerName) == 0x000008, "Member 'FVMExternalFunctionBindingInfo::OwnerName' has a wrong offset!");
static_assert(offsetof(FVMExternalFunctionBindingInfo, InputParamLocations) == 0x000010, "Member 'FVMExternalFunctionBindingInfo::InputParamLocations' has a wrong offset!");
static_assert(offsetof(FVMExternalFunctionBindingInfo, NumOutputs) == 0x000020, "Member 'FVMExternalFunctionBindingInfo::NumOutputs' has a wrong offset!");

// ScriptStruct Niagara.NiagaraStatScope
// 0x0010 (0x0010 - 0x0000)
struct FNiagaraStatScope final
{
public:
	class FName                                   FullName;                                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FriendlyName;                                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraStatScope) == 0x000004, "Wrong alignment on FNiagaraStatScope");
static_assert(sizeof(FNiagaraStatScope) == 0x000010, "Wrong size on FNiagaraStatScope");
static_assert(offsetof(FNiagaraStatScope, FullName) == 0x000000, "Member 'FNiagaraStatScope::FullName' has a wrong offset!");
static_assert(offsetof(FNiagaraStatScope, FriendlyName) == 0x000008, "Member 'FNiagaraStatScope::FriendlyName' has a wrong offset!");

// ScriptStruct Niagara.NiagaraFunctionSignature
// 0x0038 (0x0038 - 0x0000)
struct FNiagaraFunctionSignature final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraVariable>               Inputs;                                            // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraVariable>               Outputs;                                           // 0x0018(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   OwnerName;                                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRequiresContext;                                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMemberFunction;                                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraFunctionSignature) == 0x000008, "Wrong alignment on FNiagaraFunctionSignature");
static_assert(sizeof(FNiagaraFunctionSignature) == 0x000038, "Wrong size on FNiagaraFunctionSignature");
static_assert(offsetof(FNiagaraFunctionSignature, Name) == 0x000000, "Member 'FNiagaraFunctionSignature::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraFunctionSignature, Inputs) == 0x000008, "Member 'FNiagaraFunctionSignature::Inputs' has a wrong offset!");
static_assert(offsetof(FNiagaraFunctionSignature, Outputs) == 0x000018, "Member 'FNiagaraFunctionSignature::Outputs' has a wrong offset!");
static_assert(offsetof(FNiagaraFunctionSignature, OwnerName) == 0x000028, "Member 'FNiagaraFunctionSignature::OwnerName' has a wrong offset!");
static_assert(offsetof(FNiagaraFunctionSignature, bRequiresContext) == 0x000030, "Member 'FNiagaraFunctionSignature::bRequiresContext' has a wrong offset!");
static_assert(offsetof(FNiagaraFunctionSignature, bMemberFunction) == 0x000031, "Member 'FNiagaraFunctionSignature::bMemberFunction' has a wrong offset!");

// ScriptStruct Niagara.NiagaraScriptDataInterfaceCompileInfo
// 0x0050 (0x0050 - 0x0000)
struct FNiagaraScriptDataInterfaceCompileInfo final
{
public:
	class FName                                   Name;                                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserPtrIdx;                                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraTypeDefinition                 Type;                                              // 0x0010(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraFunctionSignature>      RegisteredFunctions;                               // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                   RegisteredParameterMapRead;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RegisteredParameterMapWrite;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlaceholder;                                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraScriptDataInterfaceCompileInfo) == 0x000008, "Wrong alignment on FNiagaraScriptDataInterfaceCompileInfo");
static_assert(sizeof(FNiagaraScriptDataInterfaceCompileInfo) == 0x000050, "Wrong size on FNiagaraScriptDataInterfaceCompileInfo");
static_assert(offsetof(FNiagaraScriptDataInterfaceCompileInfo, Name) == 0x000000, "Member 'FNiagaraScriptDataInterfaceCompileInfo::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceCompileInfo, UserPtrIdx) == 0x000008, "Member 'FNiagaraScriptDataInterfaceCompileInfo::UserPtrIdx' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceCompileInfo, Type) == 0x000010, "Member 'FNiagaraScriptDataInterfaceCompileInfo::Type' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceCompileInfo, RegisteredFunctions) == 0x000028, "Member 'FNiagaraScriptDataInterfaceCompileInfo::RegisteredFunctions' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceCompileInfo, RegisteredParameterMapRead) == 0x000038, "Member 'FNiagaraScriptDataInterfaceCompileInfo::RegisteredParameterMapRead' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceCompileInfo, RegisteredParameterMapWrite) == 0x000040, "Member 'FNiagaraScriptDataInterfaceCompileInfo::RegisteredParameterMapWrite' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceCompileInfo, bIsPlaceholder) == 0x000048, "Member 'FNiagaraScriptDataInterfaceCompileInfo::bIsPlaceholder' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEventScriptProperties
// 0x0030 (0x0058 - 0x0028)
struct FNiagaraEventScriptProperties final : public FNiagaraEmitterScriptProperties
{
public:
	EScriptExecutionMode                          ExecutionMode;                                     // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        SpawnNumber;                                       // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        MaxEventsPerFrame;                                 // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  SourceEmitterID;                                   // 0x0034(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   SourceEventName;                                   // 0x0044(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRandomSpawnNumber;                                // 0x004C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	uint32                                        MinSpawnNumber;                                    // 0x0050(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraEventScriptProperties) == 0x000008, "Wrong alignment on FNiagaraEventScriptProperties");
static_assert(sizeof(FNiagaraEventScriptProperties) == 0x000058, "Wrong size on FNiagaraEventScriptProperties");
static_assert(offsetof(FNiagaraEventScriptProperties, ExecutionMode) == 0x000028, "Member 'FNiagaraEventScriptProperties::ExecutionMode' has a wrong offset!");
static_assert(offsetof(FNiagaraEventScriptProperties, SpawnNumber) == 0x00002C, "Member 'FNiagaraEventScriptProperties::SpawnNumber' has a wrong offset!");
static_assert(offsetof(FNiagaraEventScriptProperties, MaxEventsPerFrame) == 0x000030, "Member 'FNiagaraEventScriptProperties::MaxEventsPerFrame' has a wrong offset!");
static_assert(offsetof(FNiagaraEventScriptProperties, SourceEmitterID) == 0x000034, "Member 'FNiagaraEventScriptProperties::SourceEmitterID' has a wrong offset!");
static_assert(offsetof(FNiagaraEventScriptProperties, SourceEventName) == 0x000044, "Member 'FNiagaraEventScriptProperties::SourceEventName' has a wrong offset!");
static_assert(offsetof(FNiagaraEventScriptProperties, bRandomSpawnNumber) == 0x00004C, "Member 'FNiagaraEventScriptProperties::bRandomSpawnNumber' has a wrong offset!");
static_assert(offsetof(FNiagaraEventScriptProperties, MinSpawnNumber) == 0x000050, "Member 'FNiagaraEventScriptProperties::MinSpawnNumber' has a wrong offset!");

// ScriptStruct Niagara.NiagaraScriptDataInterfaceInfo
// 0x0040 (0x0040 - 0x0000)
struct FNiagaraScriptDataInterfaceInfo final
{
public:
	class UNiagaraDataInterface*                  DataInterface;                                     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Name;                                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserPtrIdx;                                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraTypeDefinition                 Type;                                              // 0x0018(0x0018)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RegisteredParameterMapRead;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   RegisteredParameterMapWrite;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraScriptDataInterfaceInfo) == 0x000008, "Wrong alignment on FNiagaraScriptDataInterfaceInfo");
static_assert(sizeof(FNiagaraScriptDataInterfaceInfo) == 0x000040, "Wrong size on FNiagaraScriptDataInterfaceInfo");
static_assert(offsetof(FNiagaraScriptDataInterfaceInfo, DataInterface) == 0x000000, "Member 'FNiagaraScriptDataInterfaceInfo::DataInterface' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceInfo, Name) == 0x000008, "Member 'FNiagaraScriptDataInterfaceInfo::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceInfo, UserPtrIdx) == 0x000010, "Member 'FNiagaraScriptDataInterfaceInfo::UserPtrIdx' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceInfo, Type) == 0x000018, "Member 'FNiagaraScriptDataInterfaceInfo::Type' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceInfo, RegisteredParameterMapRead) == 0x000030, "Member 'FNiagaraScriptDataInterfaceInfo::RegisteredParameterMapRead' has a wrong offset!");
static_assert(offsetof(FNiagaraScriptDataInterfaceInfo, RegisteredParameterMapWrite) == 0x000038, "Member 'FNiagaraScriptDataInterfaceInfo::RegisteredParameterMapWrite' has a wrong offset!");

// ScriptStruct Niagara.NiagaraScriptDataUsageInfo
// 0x0001 (0x0001 - 0x0000)
struct FNiagaraScriptDataUsageInfo final
{
public:
	bool                                          bReadsAttributeData;                               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraScriptDataUsageInfo) == 0x000001, "Wrong alignment on FNiagaraScriptDataUsageInfo");
static_assert(sizeof(FNiagaraScriptDataUsageInfo) == 0x000001, "Wrong size on FNiagaraScriptDataUsageInfo");
static_assert(offsetof(FNiagaraScriptDataUsageInfo, bReadsAttributeData) == 0x000000, "Member 'FNiagaraScriptDataUsageInfo::bReadsAttributeData' has a wrong offset!");

// ScriptStruct Niagara.MeshTriCoordinate
// 0x0010 (0x0010 - 0x0000)
struct FMeshTriCoordinate final
{
public:
	int32                                         Tri;                                               // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                BaryCoord;                                         // 0x0004(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMeshTriCoordinate) == 0x000004, "Wrong alignment on FMeshTriCoordinate");
static_assert(sizeof(FMeshTriCoordinate) == 0x000010, "Wrong size on FMeshTriCoordinate");
static_assert(offsetof(FMeshTriCoordinate, Tri) == 0x000000, "Member 'FMeshTriCoordinate::Tri' has a wrong offset!");
static_assert(offsetof(FMeshTriCoordinate, BaryCoord) == 0x000004, "Member 'FMeshTriCoordinate::BaryCoord' has a wrong offset!");

// ScriptStruct Niagara.NiagaraEmitterHandle
// 0x0030 (0x0030 - 0x0000)
struct FNiagaraEmitterHandle final
{
public:
	struct FGuid                                  ID;                                                // 0x0000(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   IdName;                                            // 0x0010(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsEnabled;                                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Name;                                              // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraEmitter*                        Instance;                                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FNiagaraEmitterHandle) == 0x000008, "Wrong alignment on FNiagaraEmitterHandle");
static_assert(sizeof(FNiagaraEmitterHandle) == 0x000030, "Wrong size on FNiagaraEmitterHandle");
static_assert(offsetof(FNiagaraEmitterHandle, ID) == 0x000000, "Member 'FNiagaraEmitterHandle::ID' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterHandle, IdName) == 0x000010, "Member 'FNiagaraEmitterHandle::IdName' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterHandle, bIsEnabled) == 0x000018, "Member 'FNiagaraEmitterHandle::bIsEnabled' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterHandle, Name) == 0x00001C, "Member 'FNiagaraEmitterHandle::Name' has a wrong offset!");
static_assert(offsetof(FNiagaraEmitterHandle, Instance) == 0x000028, "Member 'FNiagaraEmitterHandle::Instance' has a wrong offset!");

// ScriptStruct Niagara.NiagaraParameters
// 0x0010 (0x0010 - 0x0000)
struct FNiagaraParameters final
{
public:
	TArray<struct FNiagaraVariable>               Parameters;                                        // 0x0000(0x0010)(Edit, EditFixedSize, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraParameters) == 0x000008, "Wrong alignment on FNiagaraParameters");
static_assert(sizeof(FNiagaraParameters) == 0x000010, "Wrong size on FNiagaraParameters");
static_assert(offsetof(FNiagaraParameters, Parameters) == 0x000000, "Member 'FNiagaraParameters::Parameters' has a wrong offset!");

// ScriptStruct Niagara.NiagaraUserRedirectionParameterStore
// 0x0050 (0x0138 - 0x00E8)
struct FNiagaraUserRedirectionParameterStore final : public FNiagaraParameterStore
{
public:
	TMap<struct FNiagaraVariable, struct FNiagaraVariable> UserParameterRedirects;                            // 0x00E8(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FNiagaraUserRedirectionParameterStore) == 0x000008, "Wrong alignment on FNiagaraUserRedirectionParameterStore");
static_assert(sizeof(FNiagaraUserRedirectionParameterStore) == 0x000138, "Wrong size on FNiagaraUserRedirectionParameterStore");
static_assert(offsetof(FNiagaraUserRedirectionParameterStore, UserParameterRedirects) == 0x0000E8, "Member 'FNiagaraUserRedirectionParameterStore::UserParameterRedirects' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVMExecutableData
// 0x0178 (0x0178 - 0x0000)
struct FNiagaraVMExecutableData final
{
public:
	TArray<uint8>                                 ByteCode;                                          // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         NumUserPtrs;                                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraParameters                     Parameters;                                        // 0x0018(0x0010)(NativeAccessSpecifierPublic)
	struct FNiagaraParameters                     InternalParameters;                                // 0x0028(0x0010)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FNiagaraParameters>  DataSetToParameters;                               // 0x0038(0x0050)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraVariable>               Attributes;                                        // 0x0088(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FNiagaraScriptDataUsageInfo            DataUsage;                                         // 0x0098(0x0001)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNiagaraScriptDataInterfaceCompileInfo> DataInterfaceInfo;                                 // 0x00A0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVMExternalFunctionBindingInfo> CalledVMExternalFunctions;                         // 0x00B0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraDataSetID>              ReadDataSets;                                      // 0x00C0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraDataSetProperties>      WriteDataSets;                                     // 0x00D0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FNiagaraStatScope>              StatScopes;                                        // 0x00E0(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 LastHlslTranslation;                               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LastHlslTranslationGPU;                            // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LastAssemblyTranslation;                           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        LastOpCount;                                       // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNiagaraDataInterfaceGPUParamInfo> DIParamInfo;                                       // 0x0128(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         ParameterCollectionPaths;                          // 0x0138(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	ENiagaraScriptCompileStatus                   LastCompileStatus;                                 // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReadsAttributeData;                               // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorMsg;                                          // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CompileTime;                                       // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNiagaraCompileEvent>           LastCompileEvents;                                 // 0x0168(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraVMExecutableData) == 0x000008, "Wrong alignment on FNiagaraVMExecutableData");
static_assert(sizeof(FNiagaraVMExecutableData) == 0x000178, "Wrong size on FNiagaraVMExecutableData");
static_assert(offsetof(FNiagaraVMExecutableData, ByteCode) == 0x000000, "Member 'FNiagaraVMExecutableData::ByteCode' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, NumUserPtrs) == 0x000010, "Member 'FNiagaraVMExecutableData::NumUserPtrs' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, Parameters) == 0x000018, "Member 'FNiagaraVMExecutableData::Parameters' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, InternalParameters) == 0x000028, "Member 'FNiagaraVMExecutableData::InternalParameters' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, DataSetToParameters) == 0x000038, "Member 'FNiagaraVMExecutableData::DataSetToParameters' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, Attributes) == 0x000088, "Member 'FNiagaraVMExecutableData::Attributes' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, DataUsage) == 0x000098, "Member 'FNiagaraVMExecutableData::DataUsage' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, DataInterfaceInfo) == 0x0000A0, "Member 'FNiagaraVMExecutableData::DataInterfaceInfo' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, CalledVMExternalFunctions) == 0x0000B0, "Member 'FNiagaraVMExecutableData::CalledVMExternalFunctions' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, ReadDataSets) == 0x0000C0, "Member 'FNiagaraVMExecutableData::ReadDataSets' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, WriteDataSets) == 0x0000D0, "Member 'FNiagaraVMExecutableData::WriteDataSets' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, StatScopes) == 0x0000E0, "Member 'FNiagaraVMExecutableData::StatScopes' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, LastHlslTranslation) == 0x0000F0, "Member 'FNiagaraVMExecutableData::LastHlslTranslation' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, LastHlslTranslationGPU) == 0x000100, "Member 'FNiagaraVMExecutableData::LastHlslTranslationGPU' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, LastAssemblyTranslation) == 0x000110, "Member 'FNiagaraVMExecutableData::LastAssemblyTranslation' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, LastOpCount) == 0x000120, "Member 'FNiagaraVMExecutableData::LastOpCount' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, DIParamInfo) == 0x000128, "Member 'FNiagaraVMExecutableData::DIParamInfo' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, ParameterCollectionPaths) == 0x000138, "Member 'FNiagaraVMExecutableData::ParameterCollectionPaths' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, LastCompileStatus) == 0x000148, "Member 'FNiagaraVMExecutableData::LastCompileStatus' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, bReadsAttributeData) == 0x000149, "Member 'FNiagaraVMExecutableData::bReadsAttributeData' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, ErrorMsg) == 0x000150, "Member 'FNiagaraVMExecutableData::ErrorMsg' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, CompileTime) == 0x000160, "Member 'FNiagaraVMExecutableData::CompileTime' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableData, LastCompileEvents) == 0x000168, "Member 'FNiagaraVMExecutableData::LastCompileEvents' has a wrong offset!");

// ScriptStruct Niagara.NiagaraTestStruct
// 0x0048 (0x0048 - 0x0000)
struct FNiagaraTestStruct final
{
public:
	struct FVector                                Vector1;                                           // 0x0000(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Vector2;                                           // 0x000C(0x000C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraTestStructInner                InnerStruct1;                                      // 0x0018(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FNiagaraTestStructInner                InnerStruct2;                                      // 0x0030(0x0018)(Edit, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraTestStruct) == 0x000004, "Wrong alignment on FNiagaraTestStruct");
static_assert(sizeof(FNiagaraTestStruct) == 0x000048, "Wrong size on FNiagaraTestStruct");
static_assert(offsetof(FNiagaraTestStruct, Vector1) == 0x000000, "Member 'FNiagaraTestStruct::Vector1' has a wrong offset!");
static_assert(offsetof(FNiagaraTestStruct, Vector2) == 0x00000C, "Member 'FNiagaraTestStruct::Vector2' has a wrong offset!");
static_assert(offsetof(FNiagaraTestStruct, InnerStruct1) == 0x000018, "Member 'FNiagaraTestStruct::InnerStruct1' has a wrong offset!");
static_assert(offsetof(FNiagaraTestStruct, InnerStruct2) == 0x000030, "Member 'FNiagaraTestStruct::InnerStruct2' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVMExecutableDataId
// 0x0088 (0x0088 - 0x0000)
struct FNiagaraVMExecutableDataId final
{
public:
	struct FGuid                                  CompilerVersionID;                                 // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENiagaraScriptUsage                           ScriptUsageType;                                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  ScriptUsageTypeID;                                 // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         AdditionalDefines;                                 // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGuid                                  BaseScriptID;                                      // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNiagaraCompileHash                    BaseScriptCompileHash;                             // 0x0048(0x0010)(NativeAccessSpecifierPublic)
	TArray<struct FNiagaraCompileHash>            ReferencedCompileHashes;                           // 0x0058(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGuid>                          ReferencedDependencyIds;                           // 0x0068(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x10];                                      // 0x0078(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraVMExecutableDataId) == 0x000008, "Wrong alignment on FNiagaraVMExecutableDataId");
static_assert(sizeof(FNiagaraVMExecutableDataId) == 0x000088, "Wrong size on FNiagaraVMExecutableDataId");
static_assert(offsetof(FNiagaraVMExecutableDataId, CompilerVersionID) == 0x000000, "Member 'FNiagaraVMExecutableDataId::CompilerVersionID' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableDataId, ScriptUsageType) == 0x000010, "Member 'FNiagaraVMExecutableDataId::ScriptUsageType' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableDataId, ScriptUsageTypeID) == 0x000014, "Member 'FNiagaraVMExecutableDataId::ScriptUsageTypeID' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableDataId, AdditionalDefines) == 0x000028, "Member 'FNiagaraVMExecutableDataId::AdditionalDefines' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableDataId, BaseScriptID) == 0x000038, "Member 'FNiagaraVMExecutableDataId::BaseScriptID' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableDataId, BaseScriptCompileHash) == 0x000048, "Member 'FNiagaraVMExecutableDataId::BaseScriptCompileHash' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableDataId, ReferencedCompileHashes) == 0x000058, "Member 'FNiagaraVMExecutableDataId::ReferencedCompileHashes' has a wrong offset!");
static_assert(offsetof(FNiagaraVMExecutableDataId, ReferencedDependencyIds) == 0x000068, "Member 'FNiagaraVMExecutableDataId::ReferencedDependencyIds' has a wrong offset!");

// ScriptStruct Niagara.NiagaraSystemCompileRequest
// 0x0078 (0x0078 - 0x0000)
struct FNiagaraSystemCompileRequest final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        RootObjects;                                       // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_18[0x60];                                      // 0x0018(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraSystemCompileRequest) == 0x000008, "Wrong alignment on FNiagaraSystemCompileRequest");
static_assert(sizeof(FNiagaraSystemCompileRequest) == 0x000078, "Wrong size on FNiagaraSystemCompileRequest");
static_assert(offsetof(FNiagaraSystemCompileRequest, RootObjects) == 0x000008, "Member 'FNiagaraSystemCompileRequest::RootObjects' has a wrong offset!");

// ScriptStruct Niagara.EmitterCompiledScriptPair
// 0x00B8 (0x00B8 - 0x0000)
struct alignas(0x08) FEmitterCompiledScriptPair final
{
public:
	uint8                                         Pad_0[0xB8];                                       // 0x0000(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEmitterCompiledScriptPair) == 0x000008, "Wrong alignment on FEmitterCompiledScriptPair");
static_assert(sizeof(FEmitterCompiledScriptPair) == 0x0000B8, "Wrong size on FEmitterCompiledScriptPair");

// ScriptStruct Niagara.NiagaraEmitterSpawnAttributes
// 0x0010 (0x0010 - 0x0000)
struct FNiagaraEmitterSpawnAttributes final
{
public:
	TArray<class FName>                           SpawnAttributes;                                   // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraEmitterSpawnAttributes) == 0x000008, "Wrong alignment on FNiagaraEmitterSpawnAttributes");
static_assert(sizeof(FNiagaraEmitterSpawnAttributes) == 0x000010, "Wrong size on FNiagaraEmitterSpawnAttributes");
static_assert(offsetof(FNiagaraEmitterSpawnAttributes, SpawnAttributes) == 0x000000, "Member 'FNiagaraEmitterSpawnAttributes::SpawnAttributes' has a wrong offset!");

// ScriptStruct Niagara.NiagaraInputConditionMetadata
// 0x0018 (0x0018 - 0x0000)
struct FNiagaraInputConditionMetadata final
{
public:
	class FName                                   InputName;                                         // 0x0000(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         TargetValues;                                      // 0x0008(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraInputConditionMetadata) == 0x000008, "Wrong alignment on FNiagaraInputConditionMetadata");
static_assert(sizeof(FNiagaraInputConditionMetadata) == 0x000018, "Wrong size on FNiagaraInputConditionMetadata");
static_assert(offsetof(FNiagaraInputConditionMetadata, InputName) == 0x000000, "Member 'FNiagaraInputConditionMetadata::InputName' has a wrong offset!");
static_assert(offsetof(FNiagaraInputConditionMetadata, TargetValues) == 0x000008, "Member 'FNiagaraInputConditionMetadata::TargetValues' has a wrong offset!");

// ScriptStruct Niagara.NiagaraVariableMetaData
// 0x00C8 (0x00C8 - 0x0000)
struct FNiagaraVariableMetaData final
{
public:
	class FText                                   Description;                                       // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   CategoryName;                                      // 0x0018(0x0018)(Edit, NativeAccessSpecifierPublic)
	bool                                          bAdvancedDisplay;                                  // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EditorSortPriority;                                // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInlineEditConditionToggle;                        // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNiagaraInputConditionMetadata         EditCondition;                                     // 0x0040(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FNiagaraInputConditionMetadata         VisibleCondition;                                  // 0x0058(0x0018)(Edit, NativeAccessSpecifierPublic)
	TMap<class FName, class FString>              PropertyMetaData;                                  // 0x0070(0x0050)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIsStaticSwitch;                                   // 0x00C0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StaticSwitchDefaultValue;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraVariableMetaData) == 0x000008, "Wrong alignment on FNiagaraVariableMetaData");
static_assert(sizeof(FNiagaraVariableMetaData) == 0x0000C8, "Wrong size on FNiagaraVariableMetaData");
static_assert(offsetof(FNiagaraVariableMetaData, Description) == 0x000000, "Member 'FNiagaraVariableMetaData::Description' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, CategoryName) == 0x000018, "Member 'FNiagaraVariableMetaData::CategoryName' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, bAdvancedDisplay) == 0x000030, "Member 'FNiagaraVariableMetaData::bAdvancedDisplay' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, EditorSortPriority) == 0x000034, "Member 'FNiagaraVariableMetaData::EditorSortPriority' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, bInlineEditConditionToggle) == 0x000038, "Member 'FNiagaraVariableMetaData::bInlineEditConditionToggle' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, EditCondition) == 0x000040, "Member 'FNiagaraVariableMetaData::EditCondition' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, VisibleCondition) == 0x000058, "Member 'FNiagaraVariableMetaData::VisibleCondition' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, PropertyMetaData) == 0x000070, "Member 'FNiagaraVariableMetaData::PropertyMetaData' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, bIsStaticSwitch) == 0x0000C0, "Member 'FNiagaraVariableMetaData::bIsStaticSwitch' has a wrong offset!");
static_assert(offsetof(FNiagaraVariableMetaData, StaticSwitchDefaultValue) == 0x0000C4, "Member 'FNiagaraVariableMetaData::StaticSwitchDefaultValue' has a wrong offset!");

// ScriptStruct Niagara.NiagaraID
// 0x0008 (0x0008 - 0x0000)
struct FNiagaraID final
{
public:
	int32                                         Index;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AcquireTag;                                        // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraID) == 0x000004, "Wrong alignment on FNiagaraID");
static_assert(sizeof(FNiagaraID) == 0x000008, "Wrong size on FNiagaraID");
static_assert(offsetof(FNiagaraID, Index) == 0x000000, "Member 'FNiagaraID::Index' has a wrong offset!");
static_assert(offsetof(FNiagaraID, AcquireTag) == 0x000004, "Member 'FNiagaraID::AcquireTag' has a wrong offset!");

// ScriptStruct Niagara.NiagaraMatrix
// 0x0040 (0x0040 - 0x0000)
struct FNiagaraMatrix final
{
public:
	struct FVector4                               Row0;                                              // 0x0000(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               Row1;                                              // 0x0010(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               Row2;                                              // 0x0020(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector4                               Row3;                                              // 0x0030(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraMatrix) == 0x000010, "Wrong alignment on FNiagaraMatrix");
static_assert(sizeof(FNiagaraMatrix) == 0x000040, "Wrong size on FNiagaraMatrix");
static_assert(offsetof(FNiagaraMatrix, Row0) == 0x000000, "Member 'FNiagaraMatrix::Row0' has a wrong offset!");
static_assert(offsetof(FNiagaraMatrix, Row1) == 0x000010, "Member 'FNiagaraMatrix::Row1' has a wrong offset!");
static_assert(offsetof(FNiagaraMatrix, Row2) == 0x000020, "Member 'FNiagaraMatrix::Row2' has a wrong offset!");
static_assert(offsetof(FNiagaraMatrix, Row3) == 0x000030, "Member 'FNiagaraMatrix::Row3' has a wrong offset!");

// ScriptStruct Niagara.NiagaraNumeric
// 0x0001 (0x0001 - 0x0000)
struct FNiagaraNumeric final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNiagaraNumeric) == 0x000001, "Wrong alignment on FNiagaraNumeric");
static_assert(sizeof(FNiagaraNumeric) == 0x000001, "Wrong size on FNiagaraNumeric");

// ScriptStruct Niagara.NiagaraInt32
// 0x0004 (0x0004 - 0x0000)
struct FNiagaraInt32 final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraInt32) == 0x000004, "Wrong alignment on FNiagaraInt32");
static_assert(sizeof(FNiagaraInt32) == 0x000004, "Wrong size on FNiagaraInt32");
static_assert(offsetof(FNiagaraInt32, Value) == 0x000000, "Member 'FNiagaraInt32::Value' has a wrong offset!");

// ScriptStruct Niagara.NiagaraFloat
// 0x0004 (0x0004 - 0x0000)
struct FNiagaraFloat final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FNiagaraFloat) == 0x000004, "Wrong alignment on FNiagaraFloat");
static_assert(sizeof(FNiagaraFloat) == 0x000004, "Wrong size on FNiagaraFloat");
static_assert(offsetof(FNiagaraFloat, Value) == 0x000000, "Member 'FNiagaraFloat::Value' has a wrong offset!");

}

