#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionVotingDetailsPanel

#include "Basic.hpp"

#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MissionVotingDetailsPanel.MissionVotingDetailsPanel_C
// 0x0228 (0x0480 - 0x0258)
class UMissionVotingDetailsPanel_C final : public UFortMissionActivationWidgetPanel
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HideVoteResultAnimation;                           // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowVoteResultAnimation;                           // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Open_Timer;                                        // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Close_Details_Panel;                               // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Open_Details_Panel;                                // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       VoteResultAnimationMinusUNUSED;                    // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       AvailableBluGlo;                                   // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         BluGloCostBox;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CounterBackgroundGlow;                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InstigatorTimeRemainingImage;                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       InstigatorVoteTimer;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           NotVotedPanel;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         NoVoteButton;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       NoVoteCount;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         NoVoteRequiredBox;                                 // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ObjectiveReadyTimer;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        PanelSwitcher;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PanelTitle;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PendingVoteDescription;                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PendingVoteTitle;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ReceipientTimeRemainingImage;                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ReceipientVoteTime;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       RequiredBluGlo;                                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      StartVoteButton;                                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           StartVotePanel;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TimeTypeIcon;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TimeTypeIconMinus1;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VoteMinusResultMinusGlow;                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VoteDescription;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               VotedPanel;                                        // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VotedPanelContents;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPlayerBanner_C*                        VoteInstigatorBanner;                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VoteInstigatorName;                                // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VoteName;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       VoteResult;                                        // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VoterList;                                         // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPanelButton_C*                         YesVoteButton;                                     // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       YesVoteCount;                                      // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	EFortVoteType                                 CurrentVoteType;                                   // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsReceipient;                                      // 0x03B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               InstigaterTimerMaterial;                           // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ReceipientTimerMaterial;                           // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastInlineDelegateProperty_             OnRecepientVoted;                                  // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTagContainer                  ReadyUpObjectiveHandle;                            // 0x03D8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           ReadyTimer;                                        // 0x03F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMissionReady;                                    // 0x0400(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         VoteDuration;                                      // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  DeadDropMission;                                   // 0x0408(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	UMulticastInlineDelegateProperty_             OnVoteLockedOut;                                   // 0x0428(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         FailedVoteLockOutDuration;                         // 0x0438(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           VoteResultAnimationTimer;                          // 0x0440(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          LastVoteResultSuccess;                             // 0x0448(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastInlineDelegateProperty_             OnVoteResultFinished;                              // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USoundBase*                             VoteSucceededSound;                                // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             VoteFailedSound;                                   // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastInlineDelegateProperty_             OnMissionActivateNoVote;                           // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnRecepientVoted__DelegateSignature();
	void OnVoteLockedOut__DelegateSignature();
	void OnVoteResultFinished__DelegateSignature(EFortVoteType VoteType, bool Success);
	void OnMissionActivateNoVote__DelegateSignature();
	void ExecuteUbergraph_MissionVotingDetailsPanel(int32 EntryPoint);
	void BndEvt__StartVoteButton_K2Node_ComponentBoundEvent_41_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PlayHideVoteResultAnimation();
	void HandleHideVoteResultAnimationFinished();
	void HandleShowVoteResultAnimationFinished();
	void OnVoteUpdatedBP(EFortVoteType VoteType);
	void OnMultiplayerChangedBP(bool bIsMultiplayer);
	void OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32 Param_VoteResult);
	void ShowVoteResult(bool Success);
	void BndEvt__NoVoteButton_K2Node_ComponentBoundEvent_18_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__YesVoteButton_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void Destruct();
	void InitializePanel(EFortVoteType InVoteType);
	void RefreshPanel();
	void UpdateRemainingVoteTime();
	void UpdateVoteInstigatorInfo();
	void UpdateVoteButton();
	void UpdateObjectiveReadyTime();
	void IsVoteRequired(bool* VoteRequired);
	void OpenDetails();
	void CloseDetails();
	void UpdateDisplay();
	void UpdateVoteCounts();
	void CleanupVoteResultAnimation();
	void IsVoteMultiPlayer(bool* Success);
	void UpdateVoterInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MissionVotingDetailsPanel_C">();
	}
	static class UMissionVotingDetailsPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMissionVotingDetailsPanel_C>();
	}
};
static_assert(alignof(UMissionVotingDetailsPanel_C) == 0x000008, "Wrong alignment on UMissionVotingDetailsPanel_C");
static_assert(sizeof(UMissionVotingDetailsPanel_C) == 0x000480, "Wrong size on UMissionVotingDetailsPanel_C");
static_assert(offsetof(UMissionVotingDetailsPanel_C, UberGraphFrame) == 0x000258, "Member 'UMissionVotingDetailsPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, HideVoteResultAnimation) == 0x000260, "Member 'UMissionVotingDetailsPanel_C::HideVoteResultAnimation' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, ShowVoteResultAnimation) == 0x000268, "Member 'UMissionVotingDetailsPanel_C::ShowVoteResultAnimation' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, Open_Timer) == 0x000270, "Member 'UMissionVotingDetailsPanel_C::Open_Timer' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, Close_Details_Panel) == 0x000278, "Member 'UMissionVotingDetailsPanel_C::Close_Details_Panel' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, Open_Details_Panel) == 0x000280, "Member 'UMissionVotingDetailsPanel_C::Open_Details_Panel' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteResultAnimationMinusUNUSED) == 0x000288, "Member 'UMissionVotingDetailsPanel_C::VoteResultAnimationMinusUNUSED' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, AvailableBluGlo) == 0x000290, "Member 'UMissionVotingDetailsPanel_C::AvailableBluGlo' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, BluGloCostBox) == 0x000298, "Member 'UMissionVotingDetailsPanel_C::BluGloCostBox' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, CounterBackgroundGlow) == 0x0002A0, "Member 'UMissionVotingDetailsPanel_C::CounterBackgroundGlow' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, Image_0) == 0x0002A8, "Member 'UMissionVotingDetailsPanel_C::Image_0' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, Image_1) == 0x0002B0, "Member 'UMissionVotingDetailsPanel_C::Image_1' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, Image_2) == 0x0002B8, "Member 'UMissionVotingDetailsPanel_C::Image_2' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, Image_3) == 0x0002C0, "Member 'UMissionVotingDetailsPanel_C::Image_3' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, InstigatorTimeRemainingImage) == 0x0002C8, "Member 'UMissionVotingDetailsPanel_C::InstigatorTimeRemainingImage' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, InstigatorVoteTimer) == 0x0002D0, "Member 'UMissionVotingDetailsPanel_C::InstigatorVoteTimer' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, NotVotedPanel) == 0x0002D8, "Member 'UMissionVotingDetailsPanel_C::NotVotedPanel' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, NoVoteButton) == 0x0002E0, "Member 'UMissionVotingDetailsPanel_C::NoVoteButton' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, NoVoteCount) == 0x0002E8, "Member 'UMissionVotingDetailsPanel_C::NoVoteCount' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, NoVoteRequiredBox) == 0x0002F0, "Member 'UMissionVotingDetailsPanel_C::NoVoteRequiredBox' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, ObjectiveReadyTimer) == 0x0002F8, "Member 'UMissionVotingDetailsPanel_C::ObjectiveReadyTimer' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, PanelSwitcher) == 0x000300, "Member 'UMissionVotingDetailsPanel_C::PanelSwitcher' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, PanelTitle) == 0x000308, "Member 'UMissionVotingDetailsPanel_C::PanelTitle' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, PendingVoteDescription) == 0x000310, "Member 'UMissionVotingDetailsPanel_C::PendingVoteDescription' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, PendingVoteTitle) == 0x000318, "Member 'UMissionVotingDetailsPanel_C::PendingVoteTitle' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, ReceipientTimeRemainingImage) == 0x000320, "Member 'UMissionVotingDetailsPanel_C::ReceipientTimeRemainingImage' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, ReceipientVoteTime) == 0x000328, "Member 'UMissionVotingDetailsPanel_C::ReceipientVoteTime' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, RequiredBluGlo) == 0x000330, "Member 'UMissionVotingDetailsPanel_C::RequiredBluGlo' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, StartVoteButton) == 0x000338, "Member 'UMissionVotingDetailsPanel_C::StartVoteButton' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, StartVotePanel) == 0x000340, "Member 'UMissionVotingDetailsPanel_C::StartVotePanel' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, TimeTypeIcon) == 0x000348, "Member 'UMissionVotingDetailsPanel_C::TimeTypeIcon' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, TimeTypeIconMinus1) == 0x000350, "Member 'UMissionVotingDetailsPanel_C::TimeTypeIconMinus1' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteMinusResultMinusGlow) == 0x000358, "Member 'UMissionVotingDetailsPanel_C::VoteMinusResultMinusGlow' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteDescription) == 0x000360, "Member 'UMissionVotingDetailsPanel_C::VoteDescription' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VotedPanel) == 0x000368, "Member 'UMissionVotingDetailsPanel_C::VotedPanel' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VotedPanelContents) == 0x000370, "Member 'UMissionVotingDetailsPanel_C::VotedPanelContents' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteInstigatorBanner) == 0x000378, "Member 'UMissionVotingDetailsPanel_C::VoteInstigatorBanner' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteInstigatorName) == 0x000380, "Member 'UMissionVotingDetailsPanel_C::VoteInstigatorName' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteName) == 0x000388, "Member 'UMissionVotingDetailsPanel_C::VoteName' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteResult) == 0x000390, "Member 'UMissionVotingDetailsPanel_C::VoteResult' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoterList) == 0x000398, "Member 'UMissionVotingDetailsPanel_C::VoterList' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, YesVoteButton) == 0x0003A0, "Member 'UMissionVotingDetailsPanel_C::YesVoteButton' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, YesVoteCount) == 0x0003A8, "Member 'UMissionVotingDetailsPanel_C::YesVoteCount' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, CurrentVoteType) == 0x0003B0, "Member 'UMissionVotingDetailsPanel_C::CurrentVoteType' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, IsReceipient) == 0x0003B1, "Member 'UMissionVotingDetailsPanel_C::IsReceipient' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, InstigaterTimerMaterial) == 0x0003B8, "Member 'UMissionVotingDetailsPanel_C::InstigaterTimerMaterial' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, ReceipientTimerMaterial) == 0x0003C0, "Member 'UMissionVotingDetailsPanel_C::ReceipientTimerMaterial' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, OnRecepientVoted) == 0x0003C8, "Member 'UMissionVotingDetailsPanel_C::OnRecepientVoted' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, ReadyUpObjectiveHandle) == 0x0003D8, "Member 'UMissionVotingDetailsPanel_C::ReadyUpObjectiveHandle' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, ReadyTimer) == 0x0003F8, "Member 'UMissionVotingDetailsPanel_C::ReadyTimer' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, IsMissionReady) == 0x000400, "Member 'UMissionVotingDetailsPanel_C::IsMissionReady' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteDuration) == 0x000404, "Member 'UMissionVotingDetailsPanel_C::VoteDuration' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, DeadDropMission) == 0x000408, "Member 'UMissionVotingDetailsPanel_C::DeadDropMission' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, OnVoteLockedOut) == 0x000428, "Member 'UMissionVotingDetailsPanel_C::OnVoteLockedOut' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, FailedVoteLockOutDuration) == 0x000438, "Member 'UMissionVotingDetailsPanel_C::FailedVoteLockOutDuration' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteResultAnimationTimer) == 0x000440, "Member 'UMissionVotingDetailsPanel_C::VoteResultAnimationTimer' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, LastVoteResultSuccess) == 0x000448, "Member 'UMissionVotingDetailsPanel_C::LastVoteResultSuccess' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, OnVoteResultFinished) == 0x000450, "Member 'UMissionVotingDetailsPanel_C::OnVoteResultFinished' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteSucceededSound) == 0x000460, "Member 'UMissionVotingDetailsPanel_C::VoteSucceededSound' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, VoteFailedSound) == 0x000468, "Member 'UMissionVotingDetailsPanel_C::VoteFailedSound' has a wrong offset!");
static_assert(offsetof(UMissionVotingDetailsPanel_C, OnMissionActivateNoVote) == 0x000470, "Member 'UMissionVotingDetailsPanel_C::OnMissionActivateNoVote' has a wrong offset!");

}

