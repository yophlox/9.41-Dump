#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenCapture

#include "Basic.hpp"

#include "ScreenCapture_classes.hpp"
#include "ScreenCapture_parameters.hpp"


namespace SDK
{

// Function ScreenCapture.ScreenCaptureContext.CreateScreenCaptureContext
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UScreenCaptureContext*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UScreenCaptureContext* UScreenCaptureContext::CreateScreenCaptureContext(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("ScreenCaptureContext", "CreateScreenCaptureContext");

	Params::ScreenCaptureContext_CreateScreenCaptureContext Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScreenCapture.ScreenCaptureContext.RemoveFile
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LocalFilePath                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScreenCaptureContext::RemoveFile(const class FString& LocalFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenCaptureContext", "RemoveFile");

	Params::ScreenCaptureContext_RemoveFile Parms{};

	Parms.LocalFilePath = std::move(LocalFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScreenCapture.ScreenCaptureContext.SaveToAlbum
// (Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LocalFilePath                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScreenCaptureContext::SaveToAlbum(const class FString& LocalFilePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenCaptureContext", "SaveToAlbum");

	Params::ScreenCaptureContext_SaveToAlbum Parms{};

	Parms.LocalFilePath = std::move(LocalFilePath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function ScreenCapture.ScreenCaptureContext.StartCapture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInRecordAppAudio                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bGeneratePreviewImage                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScreenCaptureContext::StartCapture(bool bInRecordAppAudio, bool bGeneratePreviewImage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenCaptureContext", "StartCapture");

	Params::ScreenCaptureContext_StartCapture Parms{};

	Parms.bInRecordAppAudio = bInRecordAppAudio;
	Parms.bGeneratePreviewImage = bGeneratePreviewImage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScreenCapture.ScreenCaptureContext.StopCapture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsCaptureInterrupted                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScreenCaptureContext::StopCapture(bool bIsCaptureInterrupted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenCaptureContext", "StopCapture");

	Params::ScreenCaptureContext_StopCapture Parms{};

	Parms.bIsCaptureInterrupted = bIsCaptureInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScreenCapture.ScreenCaptureContext.TakeScreenshot
// (Final, Native, Public, BlueprintCallable)

void UScreenCaptureContext::TakeScreenshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenCaptureContext", "TakeScreenshot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function ScreenCapture.ScreenCaptureContext.ToggleMicrophoneRecording
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableMicrophone                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UScreenCaptureContext::ToggleMicrophoneRecording(bool bEnableMicrophone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenCaptureContext", "ToggleMicrophoneRecording");

	Params::ScreenCaptureContext_ToggleMicrophoneRecording Parms{};

	Parms.bEnableMicrophone = bEnableMicrophone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function ScreenCapture.ScreenCaptureContext.IsRecording
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScreenCaptureContext::IsRecording() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScreenCaptureContext", "IsRecording");

	Params::ScreenCaptureContext_IsRecording Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

