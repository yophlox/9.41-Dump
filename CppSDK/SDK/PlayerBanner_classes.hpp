#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerBanner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerBanner.PlayerBanner_C
// 0x0080 (0x02E8 - 0x0268)
class UPlayerBanner_C final : public UFortAccountWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BannerImage;                                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLoadGuard*                       LoadGuard;                                         // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SurroundImage;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLoadGuard*                       SurroundLoadGuard;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bUseLargeTexture;                                  // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       OwnerNetID;                                        // 0x0298(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   CurrentBannerColorId;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldUseIconRepresentation;                      // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentBannerIconId;                               // 0x02CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SurroundEnabled;                                   // 0x02D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceConstant*>      BannerSurroundMats;                                // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_PlayerBanner(int32 EntryPoint);
	void Destruct();
	void Account_Info_Changed(const struct FFortPublicAccountInfo& NewInfo);
	void OnTeamMemberStateChanged(const struct FFortTeamMemberInfo& TeamMemberInfo);
	void SetBannerImage(const struct FFortHomeBaseInfo& Image_info, bool* Success);
	void SetBannerIconId(class FName InBannerIconId);
	void SetBannerColorId(class FName InBannerColorId);
	void SetBannerOwner(const struct FUniqueNetIdRepl& OwnerId);
	void GetBannerMID(class UMaterialInstanceDynamic** BannerMID);
	void OnBannerIconLoaded(class UObject* LoadedObject);
	void ClearBannerState();
	void EnableSurround();
	void OnSurroundIconLoaded(class UObject* LoadedObject);
	void RefreshSurround(int32 Level);
	void ToggleBannerMask(bool Enable);
	void SetBannerIconAndColor(class FName IconId, class FName ColorId);
	void SetBannerIconAndColorFromProfile();
	void SetupSurround();
	void UnbindDelegates();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerBanner_C">();
	}
	static class UPlayerBanner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerBanner_C>();
	}
};
static_assert(alignof(UPlayerBanner_C) == 0x000008, "Wrong alignment on UPlayerBanner_C");
static_assert(sizeof(UPlayerBanner_C) == 0x0002E8, "Wrong size on UPlayerBanner_C");
static_assert(offsetof(UPlayerBanner_C, UberGraphFrame) == 0x000268, "Member 'UPlayerBanner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, BannerImage) == 0x000270, "Member 'UPlayerBanner_C::BannerImage' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, LoadGuard) == 0x000278, "Member 'UPlayerBanner_C::LoadGuard' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, SurroundImage) == 0x000280, "Member 'UPlayerBanner_C::SurroundImage' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, SurroundLoadGuard) == 0x000288, "Member 'UPlayerBanner_C::SurroundLoadGuard' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, bUseLargeTexture) == 0x000290, "Member 'UPlayerBanner_C::bUseLargeTexture' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, OwnerNetID) == 0x000298, "Member 'UPlayerBanner_C::OwnerNetID' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, CurrentBannerColorId) == 0x0002C0, "Member 'UPlayerBanner_C::CurrentBannerColorId' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, bShouldUseIconRepresentation) == 0x0002C8, "Member 'UPlayerBanner_C::bShouldUseIconRepresentation' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, CurrentBannerIconId) == 0x0002CC, "Member 'UPlayerBanner_C::CurrentBannerIconId' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, SurroundEnabled) == 0x0002D4, "Member 'UPlayerBanner_C::SurroundEnabled' has a wrong offset!");
static_assert(offsetof(UPlayerBanner_C, BannerSurroundMats) == 0x0002D8, "Member 'UPlayerBanner_C::BannerSurroundMats' has a wrong offset!");

}

