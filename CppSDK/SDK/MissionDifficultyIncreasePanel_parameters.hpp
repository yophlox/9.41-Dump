#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionDifficultyIncreasePanel

#include "Basic.hpp"

#include "FortniteUI_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.ExecuteUbergraph_MissionDifficultyIncreasePanel
// 0x0038 (0x0038 - 0x0000)
struct MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortVoteType                                 K2Node_Event_VoteType;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVoteActive;                        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_VoteResult;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ForceFinalState;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel) == 0x000038, "Wrong size on MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, EntryPoint) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, K2Node_Event_VoteType) == 0x000018, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::K2Node_Event_VoteType' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, K2Node_Event_bIsVoteActive) == 0x000019, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::K2Node_Event_bIsVoteActive' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, K2Node_Event_VoteResult) == 0x00001C, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::K2Node_Event_VoteResult' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_PlayAnimation_ReturnValue_2) == 0x000020, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002A, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_BooleanAND_ReturnValue_1) == 0x00002C, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, K2Node_CustomEvent_ForceFinalState) == 0x00002D, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::K2Node_CustomEvent_ForceFinalState' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel, CallFunc_GetUINavigationManager_ReturnValue) == 0x000030, "Member 'MissionDifficultyIncreasePanel_C_ExecuteUbergraph_MissionDifficultyIncreasePanel::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.OnActiveVoteChangedBP
// 0x0008 (0x0008 - 0x0000)
struct MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP final
{
public:
	EFortVoteType                                 VoteType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVoteActive;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         VoteResult;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP) == 0x000004, "Wrong alignment on MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP) == 0x000008, "Wrong size on MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP, VoteType) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP::VoteType' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP, bIsVoteActive) == 0x000001, "Member 'MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP::bIsVoteActive' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP, VoteResult) == 0x000004, "Member 'MissionDifficultyIncreasePanel_C_OnActiveVoteChangedBP::VoteResult' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.ShowPanel
// 0x0001 (0x0001 - 0x0000)
struct MissionDifficultyIncreasePanel_C_ShowPanel final
{
public:
	bool                                          ForceFinalState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_ShowPanel) == 0x000001, "Wrong alignment on MissionDifficultyIncreasePanel_C_ShowPanel");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_ShowPanel) == 0x000001, "Wrong size on MissionDifficultyIncreasePanel_C_ShowPanel");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ShowPanel, ForceFinalState) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_ShowPanel::ForceFinalState' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.UpdateRewards
// 0x0078 (0x0078 - 0x0000)
struct MissionDifficultyIncreasePanel_C_UpdateRewards final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMissionRewardDeltaWidget_C*            CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFortItemDelta>                 CallFunc_GetDeltaRewards_DeltaRewards;             // 0x0048(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFortItemDelta                         CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_UpdateRewards) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_UpdateRewards");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_UpdateRewards) == 0x000078, "Wrong size on MissionDifficultyIncreasePanel_C_UpdateRewards");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, Temp_int_Array_Index_Variable) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_Create_ReturnValue) == 0x000020, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue) == 0x000028, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue) == 0x00002C, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_Clamp_ReturnValue) == 0x000040, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_GetDeltaRewards_DeltaRewards) == 0x000048, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_GetDeltaRewards_DeltaRewards' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_Array_Get_Item) == 0x000058, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateRewards, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'MissionDifficultyIncreasePanel_C_UpdateRewards::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.UpdateDifficultyRating
// 0x0070 (0x0070 - 0x0000)
struct MissionDifficultyIncreasePanel_C_UpdateDifficultyRating final
{
public:
	int32                                         MaxRewardTier;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRewardTier;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideIncreaseArrow;                                 // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DifficultyToDisplay;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	bool                                          CallFunc_GetIsGroupMission_IsGroupMission;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_UpdateDifficultyRating");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating) == 0x000070, "Wrong size on MissionDifficultyIncreasePanel_C_UpdateDifficultyRating");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, MaxRewardTier) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::MaxRewardTier' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CurrentRewardTier) == 0x000004, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CurrentRewardTier' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, HideIncreaseArrow) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::HideIncreaseArrow' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, DifficultyToDisplay) == 0x00000C, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::DifficultyToDisplay' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, Temp_byte_Variable) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, Temp_byte_Variable_1) == 0x000011, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue) == 0x000020, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_GetNumAllowedDifficultyIncreases_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue) == 0x000024, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_GetDifficultyIncreaseRewardsTier_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000029, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_Clamp_ReturnValue) == 0x00002C, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_Array_LastIndex_ReturnValue) == 0x000030, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, Temp_bool_Variable) == 0x000034, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, K2Node_Select_Default) == 0x00003C, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_GetIsGroupMission_IsGroupMission) == 0x000058, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_GetIsGroupMission_IsGroupMission' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000060, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateDifficultyRating, CallFunc_Array_Get_Item) == 0x000068, "Member 'MissionDifficultyIncreasePanel_C_UpdateDifficultyRating::CallFunc_Array_Get_Item' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Hover-Anim
// 0x0008 (0x0008 - 0x0000)
struct MissionDifficultyIncreasePanel_C_HoverMinusAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_HoverMinusAnim) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_HoverMinusAnim");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_HoverMinusAnim) == 0x000008, "Wrong size on MissionDifficultyIncreasePanel_C_HoverMinusAnim");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_HoverMinusAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_HoverMinusAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Leave-Anim
// 0x0008 (0x0008 - 0x0000)
struct MissionDifficultyIncreasePanel_C_LeaveMinusAnim final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_LeaveMinusAnim) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_LeaveMinusAnim");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_LeaveMinusAnim) == 0x000008, "Wrong size on MissionDifficultyIncreasePanel_C_LeaveMinusAnim");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_LeaveMinusAnim, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_LeaveMinusAnim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Reward-ListAnim
// 0x0048 (0x0048 - 0x0000)
struct MissionDifficultyIncreasePanel_C_RewardMinusListAnim final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionRewardDeltaWidget_C*            K2Node_DynamicCast_AsMission_Reward_Delta_Widget;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_RewardMinusListAnim");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim) == 0x000048, "Wrong size on MissionDifficultyIncreasePanel_C_RewardMinusListAnim");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusListAnim::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusListAnim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusListAnim::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim, CallFunc_GetChildrenCount_ReturnValue) == 0x000020, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusListAnim::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim, CallFunc_GetChildAt_ReturnValue) == 0x000028, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusListAnim::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusListAnim::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim, K2Node_DynamicCast_AsMission_Reward_Delta_Widget) == 0x000038, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusListAnim::K2Node_DynamicCast_AsMission_Reward_Delta_Widget' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusListAnim, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusListAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Rewad-IntroRewind
// 0x0038 (0x0038 - 0x0000)
struct MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionRewardDeltaWidget_C*            K2Node_DynamicCast_AsMission_Reward_Delta_Widget;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind) == 0x000038, "Wrong size on MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, Temp_bool_Variable) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, Temp_int_Variable) == 0x000004, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, K2Node_DynamicCast_AsMission_Reward_Delta_Widget) == 0x000028, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::K2Node_DynamicCast_AsMission_Reward_Delta_Widget' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000031, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'MissionDifficultyIncreasePanel_C_RewadMinusIntroRewind::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.Reward-IntroReset
// 0x0038 (0x0038 - 0x0000)
struct MissionDifficultyIncreasePanel_C_RewardMinusIntroReset final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMissionRewardDeltaWidget_C*            K2Node_DynamicCast_AsMission_Reward_Delta_Widget;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_RewardMinusIntroReset");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset) == 0x000038, "Wrong size on MissionDifficultyIncreasePanel_C_RewardMinusIntroReset");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, Temp_bool_Variable) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, Temp_int_Variable) == 0x000004, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, K2Node_DynamicCast_AsMission_Reward_Delta_Widget) == 0x000028, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::K2Node_DynamicCast_AsMission_Reward_Delta_Widget' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000031, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_RewardMinusIntroReset, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'MissionDifficultyIncreasePanel_C_RewardMinusIntroReset::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.ShowLockoutState
// 0x0028 (0x0028 - 0x0000)
struct MissionDifficultyIncreasePanel_C_ShowLockoutState final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_ShowLockoutState) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_ShowLockoutState");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_ShowLockoutState) == 0x000028, "Wrong size on MissionDifficultyIncreasePanel_C_ShowLockoutState");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ShowLockoutState, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_ShowLockoutState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ShowLockoutState, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_ShowLockoutState::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ShowLockoutState, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'MissionDifficultyIncreasePanel_C_ShowLockoutState::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_ShowLockoutState, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'MissionDifficultyIncreasePanel_C_ShowLockoutState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.UpdateLockoutTimer
// 0x0028 (0x0028 - 0x0000)
struct MissionDifficultyIncreasePanel_C_UpdateLockoutTimer final
{
public:
	class AFortGameStateZone*                     FortGameState;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLockoutTimeRemaining_ReturnValue;      // 0x0010(0x0018)()
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_UpdateLockoutTimer) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_UpdateLockoutTimer");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_UpdateLockoutTimer) == 0x000028, "Wrong size on MissionDifficultyIncreasePanel_C_UpdateLockoutTimer");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateLockoutTimer, FortGameState) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_UpdateLockoutTimer::FortGameState' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateLockoutTimer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_UpdateLockoutTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UpdateLockoutTimer, CallFunc_GetLockoutTimeRemaining_ReturnValue) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_UpdateLockoutTimer::CallFunc_GetLockoutTimeRemaining_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.DifficultyVoteUpdated
// 0x0088 (0x0088 - 0x0000)
struct MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated final
{
public:
	EFortVoteStatus                               VoteStatus;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVoter>                         Voters;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         WinCount;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVoter                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0038)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated) == 0x000088, "Wrong size on MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, VoteStatus) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::VoteStatus' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, Voters) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::Voters' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, WinCount) == 0x000018, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::WinCount' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, Temp_int_Array_Index_Variable) == 0x000028, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_Divide_IntInt_ReturnValue) == 0x000030, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, Temp_int_Variable) == 0x00003C, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_Array_Get_Item) == 0x000040, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_Array_Length_ReturnValue_1) == 0x00007C, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'MissionDifficultyIncreasePanel_C_DifficultyVoteUpdated::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.HideLockoutState
// 0x0010 (0x0010 - 0x0000)
struct MissionDifficultyIncreasePanel_C_HideLockoutState final
{
public:
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_HideLockoutState) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_HideLockoutState");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_HideLockoutState) == 0x000010, "Wrong size on MissionDifficultyIncreasePanel_C_HideLockoutState");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_HideLockoutState, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_HideLockoutState::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_HideLockoutState, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_HideLockoutState::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.BindDelegates
// 0x0010 (0x0010 - 0x0000)
struct MissionDifficultyIncreasePanel_C_BindDelegates final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_BindDelegates) == 0x000004, "Wrong alignment on MissionDifficultyIncreasePanel_C_BindDelegates");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_BindDelegates) == 0x000010, "Wrong size on MissionDifficultyIncreasePanel_C_BindDelegates");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_BindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_BindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.UnbindDelegates
// 0x0010 (0x0010 - 0x0000)
struct MissionDifficultyIncreasePanel_C_UnbindDelegates final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_UnbindDelegates) == 0x000004, "Wrong alignment on MissionDifficultyIncreasePanel_C_UnbindDelegates");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_UnbindDelegates) == 0x000010, "Wrong size on MissionDifficultyIncreasePanel_C_UnbindDelegates");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_UnbindDelegates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_UnbindDelegates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function MissionDifficultyIncreasePanel.MissionDifficultyIncreasePanel_C.GetIsGroupMission
// 0x03A8 (0x03A8 - 0x0000)
struct MissionDifficultyIncreasePanel_C_GetIsGroupMission final
{
public:
	bool                                          IsGroupMission;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHUDContext*                        CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFortBasicMissionInfo                  CallFunc_GetCurrentBasicMissionInfo_BasicMissionInfo; // 0x0010(0x0390)()
	bool                                          CallFunc_GetCurrentBasicMissionInfo_ReturnValue;   // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionDifficultyIncreasePanel_C_GetIsGroupMission) == 0x000008, "Wrong alignment on MissionDifficultyIncreasePanel_C_GetIsGroupMission");
static_assert(sizeof(MissionDifficultyIncreasePanel_C_GetIsGroupMission) == 0x0003A8, "Wrong size on MissionDifficultyIncreasePanel_C_GetIsGroupMission");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_GetIsGroupMission, IsGroupMission) == 0x000000, "Member 'MissionDifficultyIncreasePanel_C_GetIsGroupMission::IsGroupMission' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_GetIsGroupMission, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'MissionDifficultyIncreasePanel_C_GetIsGroupMission::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_GetIsGroupMission, CallFunc_GetCurrentBasicMissionInfo_BasicMissionInfo) == 0x000010, "Member 'MissionDifficultyIncreasePanel_C_GetIsGroupMission::CallFunc_GetCurrentBasicMissionInfo_BasicMissionInfo' has a wrong offset!");
static_assert(offsetof(MissionDifficultyIncreasePanel_C_GetIsGroupMission, CallFunc_GetCurrentBasicMissionInfo_ReturnValue) == 0x0003A0, "Member 'MissionDifficultyIncreasePanel_C_GetIsGroupMission::CallFunc_GetCurrentBasicMissionInfo_ReturnValue' has a wrong offset!");

}

