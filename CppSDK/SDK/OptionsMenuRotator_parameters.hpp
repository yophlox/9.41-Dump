#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OptionsMenuRotator

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function OptionsMenuRotator.OptionsMenuRotator_C.AdvancedOptionsChangedHack__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuRotator_C_AdvancedOptionsChangedHack__DelegateSignature final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsMenuRotator_C_AdvancedOptionsChangedHack__DelegateSignature) == 0x000001, "Wrong alignment on OptionsMenuRotator_C_AdvancedOptionsChangedHack__DelegateSignature");
static_assert(sizeof(OptionsMenuRotator_C_AdvancedOptionsChangedHack__DelegateSignature) == 0x000001, "Wrong size on OptionsMenuRotator_C_AdvancedOptionsChangedHack__DelegateSignature");
static_assert(offsetof(OptionsMenuRotator_C_AdvancedOptionsChangedHack__DelegateSignature, Enabled) == 0x000000, "Member 'OptionsMenuRotator_C_AdvancedOptionsChangedHack__DelegateSignature::Enabled' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.ExecuteUbergraph_OptionsMenuRotator
// 0x01D0 (0x01D0 - 0x0000)
struct OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSettingsContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortSettingsContext*                   CallFunc_GetContext_ReturnValue_1;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0020(0x0070)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0090(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00C8(0x0070)(ConstParm)
	int32                                         K2Node_ComponentBoundEvent_Value;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortSettingInfo*                       K2Node_DynamicCast_AsFort_Setting_Info;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_2;               // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button_1;               // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsOpen;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_182[0x6];                                      // 0x0182(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButton*                          K2Node_ComponentBoundEvent_Button;                 // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonTextBlock*                       K2Node_Event_TooltipTextBlock;                     // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortUINavigationManager*               CallFunc_GetUINavigationManager_ReturnValue;       // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnabled;                             // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_DisabledReason;                       // 0x01B0(0x0018)(ConstParm)
	int32                                         CallFunc_GetRotatorSettingValue_ReturnValue;       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator");
static_assert(sizeof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator) == 0x0001D0, "Wrong size on OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, EntryPoint) == 0x000000, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::EntryPoint' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, Temp_byte_Variable) == 0x000004, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, Temp_byte_Variable_1) == 0x000005, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_GetContext_ReturnValue_1) == 0x000010, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_GetContext_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_bIsExpanded) == 0x000018, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_bIsSelected) == 0x000019, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_MouseEvent_1) == 0x000020, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_MyGeometry) == 0x000090, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_MouseEvent) == 0x0000C8, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_ComponentBoundEvent_Value) == 0x000138, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_ListItemObject) == 0x000140, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000148, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_DynamicCast_AsFort_Setting_Info) == 0x000150, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_DynamicCast_AsFort_Setting_Info' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_Not_PreBool_ReturnValue) == 0x000159, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_ComponentBoundEvent_Button_2) == 0x000160, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_ComponentBoundEvent_Button_2' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_ComponentBoundEvent_Button_1) == 0x000168, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_ComponentBoundEvent_Button_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_ComponentBoundEvent_bIsOpen) == 0x000170, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_ComponentBoundEvent_bIsOpen' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_K2_SetTimer_ReturnValue) == 0x000178, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_IsMobileGame_ReturnValue) == 0x000180, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_TextIsEmpty_ReturnValue) == 0x000181, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_ComponentBoundEvent_Button) == 0x000188, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_ComponentBoundEvent_Button' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000190, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_IsMobileGame_ReturnValue_1) == 0x000191, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_TooltipTextBlock) == 0x000198, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_TooltipTextBlock' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_GetUINavigationManager_ReturnValue) == 0x0001A0, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_GetUINavigationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, Temp_bool_Variable) == 0x0001A8, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Select_Default) == 0x0001A9, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, Temp_byte_Variable_2) == 0x0001AA, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, Temp_byte_Variable_3) == 0x0001AB, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_bEnabled) == 0x0001AC, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_bEnabled' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Event_DisabledReason) == 0x0001B0, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Event_DisabledReason' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, CallFunc_GetRotatorSettingValue_ReturnValue) == 0x0001C8, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::CallFunc_GetRotatorSettingValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, Temp_bool_Variable_1) == 0x0001CC, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator, K2Node_Select_Default_1) == 0x0001CD, "Member 'OptionsMenuRotator_C_ExecuteUbergraph_OptionsMenuRotator::K2Node_Select_Default_1' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.SetControlsEnabled
// 0x0020 (0x0020 - 0x0000)
struct OptionsMenuRotator_C_SetControlsEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DisabledReason;                                    // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OptionsMenuRotator_C_SetControlsEnabled) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_SetControlsEnabled");
static_assert(sizeof(OptionsMenuRotator_C_SetControlsEnabled) == 0x000020, "Wrong size on OptionsMenuRotator_C_SetControlsEnabled");
static_assert(offsetof(OptionsMenuRotator_C_SetControlsEnabled, bEnabled) == 0x000000, "Member 'OptionsMenuRotator_C_SetControlsEnabled::bEnabled' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_SetControlsEnabled, DisabledReason) == 0x000008, "Member 'OptionsMenuRotator_C_SetControlsEnabled::DisabledReason' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.UpdateSetting
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuRotator_C_UpdateSetting final
{
public:
	class UCommonTextBlock*                       TooltipTextBlock;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_UpdateSetting) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_UpdateSetting");
static_assert(sizeof(OptionsMenuRotator_C_UpdateSetting) == 0x000008, "Wrong size on OptionsMenuRotator_C_UpdateSetting");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSetting, TooltipTextBlock) == 0x000000, "Member 'OptionsMenuRotator_C_UpdateSetting::TooltipTextBlock' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuRotator_C_BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(OptionsMenuRotator_C_BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on OptionsMenuRotator_C_BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(OptionsMenuRotator_C_BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'OptionsMenuRotator_C_BndEvt__ButtonTouchTooltip_K2Node_ComponentBoundEvent_69_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuRotator_C_BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature final
{
public:
	bool                                          bIsOpen;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsMenuRotator_C_BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature) == 0x000001, "Wrong alignment on OptionsMenuRotator_C_BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature");
static_assert(sizeof(OptionsMenuRotator_C_BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature) == 0x000001, "Wrong size on OptionsMenuRotator_C_BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature");
static_assert(offsetof(OptionsMenuRotator_C_BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature, bIsOpen) == 0x000000, "Member 'OptionsMenuRotator_C_BndEvt__MenuAnchorSettingDescription_K2Node_ComponentBoundEvent_22_OnMenuOpenChangedEvent__DelegateSignature::bIsOpen' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(OptionsMenuRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on OptionsMenuRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(OptionsMenuRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'OptionsMenuRotator_C_BndEvt__ButtonRight_K2Node_ComponentBoundEvent_15_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature final
{
public:
	class UCommonButton*                          Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(sizeof(OptionsMenuRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature) == 0x000008, "Wrong size on OptionsMenuRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature");
static_assert(offsetof(OptionsMenuRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature, Button) == 0x000000, "Member 'OptionsMenuRotator_C_BndEvt__ButtonLeft_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature::Button' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct OptionsMenuRotator_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_OnListItemObjectSet");
static_assert(sizeof(OptionsMenuRotator_C_OnListItemObjectSet) == 0x000008, "Wrong size on OptionsMenuRotator_C_OnListItemObjectSet");
static_assert(offsetof(OptionsMenuRotator_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'OptionsMenuRotator_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct OptionsMenuRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature) == 0x000004, "Wrong alignment on OptionsMenuRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature");
static_assert(sizeof(OptionsMenuRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature) == 0x000004, "Wrong size on OptionsMenuRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature");
static_assert(offsetof(OptionsMenuRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature, Value) == 0x000000, "Member 'OptionsMenuRotator_C_BndEvt__TextRotator_K2Node_ComponentBoundEvent_20_OnRotated__DelegateSignature::Value' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct OptionsMenuRotator_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OptionsMenuRotator_C_OnMouseEnter) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_OnMouseEnter");
static_assert(sizeof(OptionsMenuRotator_C_OnMouseEnter) == 0x0000A8, "Wrong size on OptionsMenuRotator_C_OnMouseEnter");
static_assert(offsetof(OptionsMenuRotator_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'OptionsMenuRotator_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'OptionsMenuRotator_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct OptionsMenuRotator_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(OptionsMenuRotator_C_OnMouseLeave) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_OnMouseLeave");
static_assert(sizeof(OptionsMenuRotator_C_OnMouseLeave) == 0x000070, "Wrong size on OptionsMenuRotator_C_OnMouseLeave");
static_assert(offsetof(OptionsMenuRotator_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'OptionsMenuRotator_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuRotator_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsMenuRotator_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on OptionsMenuRotator_C_BP_OnItemSelectionChanged");
static_assert(sizeof(OptionsMenuRotator_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on OptionsMenuRotator_C_BP_OnItemSelectionChanged");
static_assert(offsetof(OptionsMenuRotator_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'OptionsMenuRotator_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct OptionsMenuRotator_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsMenuRotator_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on OptionsMenuRotator_C_BP_OnItemExpansionChanged");
static_assert(sizeof(OptionsMenuRotator_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on OptionsMenuRotator_C_BP_OnItemExpansionChanged");
static_assert(offsetof(OptionsMenuRotator_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'OptionsMenuRotator_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.UpdateSize
// 0x0080 (0x0080 - 0x0000)
struct OptionsMenuRotator_C_UpdateSize final
{
public:
	struct FVector2D                              ToolTipSizeMobile;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HeightMobile;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HeightDefault;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LargeSize;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              SmallSize;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_1;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_2;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_3;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue_4;               // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_3;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMobileGame_ReturnValue_5;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_4;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default_6;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_7;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_UpdateSize) == 0x000004, "Wrong alignment on OptionsMenuRotator_C_UpdateSize");
static_assert(sizeof(OptionsMenuRotator_C_UpdateSize) == 0x000080, "Wrong size on OptionsMenuRotator_C_UpdateSize");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, ToolTipSizeMobile) == 0x000000, "Member 'OptionsMenuRotator_C_UpdateSize::ToolTipSizeMobile' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, HeightMobile) == 0x000008, "Member 'OptionsMenuRotator_C_UpdateSize::HeightMobile' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, HeightDefault) == 0x00000C, "Member 'OptionsMenuRotator_C_UpdateSize::HeightDefault' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, LargeSize) == 0x000010, "Member 'OptionsMenuRotator_C_UpdateSize::LargeSize' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, SmallSize) == 0x000018, "Member 'OptionsMenuRotator_C_UpdateSize::SmallSize' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_bool_Variable) == 0x000020, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_struct_Variable) == 0x000024, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_struct_Variable_1) == 0x00002C, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_bool_Variable_1) == 0x000034, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_bool_Variable_2) == 0x000035, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_bool_Variable_3) == 0x000036, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue) == 0x000037, "Member 'OptionsMenuRotator_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_bool_Variable_4) == 0x000038, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_byte_Variable) == 0x000039, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_byte_Variable_1) == 0x00003A, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_bool_Variable_5) == 0x00003B, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_byte_Variable_2) == 0x00003C, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'OptionsMenuRotator_C_UpdateSize::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'OptionsMenuRotator_C_UpdateSize::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_1) == 0x000048, "Member 'OptionsMenuRotator_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_2) == 0x000049, "Member 'OptionsMenuRotator_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, K2Node_Select_Default) == 0x00004C, "Member 'OptionsMenuRotator_C_UpdateSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, K2Node_Select_Default_1) == 0x000050, "Member 'OptionsMenuRotator_C_UpdateSize::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_3) == 0x000054, "Member 'OptionsMenuRotator_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_4) == 0x000055, "Member 'OptionsMenuRotator_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, K2Node_Select_Default_2) == 0x000056, "Member 'OptionsMenuRotator_C_UpdateSize::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, K2Node_Select_Default_3) == 0x000058, "Member 'OptionsMenuRotator_C_UpdateSize::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, CallFunc_IsMobileGame_ReturnValue_5) == 0x000060, "Member 'OptionsMenuRotator_C_UpdateSize::CallFunc_IsMobileGame_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_byte_Variable_3) == 0x000061, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_bool_Variable_6) == 0x000062, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, K2Node_Select_Default_4) == 0x000064, "Member 'OptionsMenuRotator_C_UpdateSize::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, K2Node_Select_Default_5) == 0x00006C, "Member 'OptionsMenuRotator_C_UpdateSize::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, Temp_bool_Variable_7) == 0x00006D, "Member 'OptionsMenuRotator_C_UpdateSize::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, K2Node_Select_Default_6) == 0x000070, "Member 'OptionsMenuRotator_C_UpdateSize::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_UpdateSize, K2Node_Select_Default_7) == 0x000078, "Member 'OptionsMenuRotator_C_UpdateSize::K2Node_Select_Default_7' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.HandlePawnSet
// 0x0028 (0x0028 - 0x0000)
struct OptionsMenuRotator_C_HandlePawnSet final
{
public:
	bool                                          bRCPawn;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortRemoteControlledPawnAthena*        K2Node_DynamicCast_AsFort_Remote_Controlled_Pawn_Athena; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OptionsMenuRotator_C_HandlePawnSet) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_HandlePawnSet");
static_assert(sizeof(OptionsMenuRotator_C_HandlePawnSet) == 0x000028, "Wrong size on OptionsMenuRotator_C_HandlePawnSet");
static_assert(offsetof(OptionsMenuRotator_C_HandlePawnSet, bRCPawn) == 0x000000, "Member 'OptionsMenuRotator_C_HandlePawnSet::bRCPawn' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_HandlePawnSet, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'OptionsMenuRotator_C_HandlePawnSet::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_HandlePawnSet, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'OptionsMenuRotator_C_HandlePawnSet::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_HandlePawnSet, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'OptionsMenuRotator_C_HandlePawnSet::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_HandlePawnSet, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'OptionsMenuRotator_C_HandlePawnSet::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_HandlePawnSet, K2Node_DynamicCast_AsFort_Remote_Controlled_Pawn_Athena) == 0x000018, "Member 'OptionsMenuRotator_C_HandlePawnSet::K2Node_DynamicCast_AsFort_Remote_Controlled_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_HandlePawnSet, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'OptionsMenuRotator_C_HandlePawnSet::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.OnGetMenuContent
// 0x0018 (0x0018 - 0x0000)
struct OptionsMenuRotator_C_OnGetMenuContent final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTooltipMinusBasicMinusS_C*             CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_OnGetMenuContent) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_OnGetMenuContent");
static_assert(sizeof(OptionsMenuRotator_C_OnGetMenuContent) == 0x000018, "Wrong size on OptionsMenuRotator_C_OnGetMenuContent");
static_assert(offsetof(OptionsMenuRotator_C_OnGetMenuContent, ReturnValue) == 0x000000, "Member 'OptionsMenuRotator_C_OnGetMenuContent::ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_OnGetMenuContent, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'OptionsMenuRotator_C_OnGetMenuContent::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_OnGetMenuContent, CallFunc_Create_ReturnValue) == 0x000010, "Member 'OptionsMenuRotator_C_OnGetMenuContent::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.Update Display Names
// 0x0018 (0x0018 - 0x0000)
struct OptionsMenuRotator_C_Update_Display_Names final
{
public:
	class UFortSettingsContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           CallFunc_GetSettingDisplayNames_ReturnValue;       // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(OptionsMenuRotator_C_Update_Display_Names) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_Update_Display_Names");
static_assert(sizeof(OptionsMenuRotator_C_Update_Display_Names) == 0x000018, "Wrong size on OptionsMenuRotator_C_Update_Display_Names");
static_assert(offsetof(OptionsMenuRotator_C_Update_Display_Names, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'OptionsMenuRotator_C_Update_Display_Names::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_Update_Display_Names, CallFunc_GetSettingDisplayNames_ReturnValue) == 0x000008, "Member 'OptionsMenuRotator_C_Update_Display_Names::CallFunc_GetSettingDisplayNames_ReturnValue' has a wrong offset!");

// Function OptionsMenuRotator.OptionsMenuRotator_C.SetFontSize
// 0x0068 (0x0068 - 0x0000)
struct OptionsMenuRotator_C_SetFontSize final
{
public:
	class UCommonTextBlock*                       Text;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultSize;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MobileSize;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         TempFont;                                          // 0x0010(0x0050)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMobileGame_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OptionsMenuRotator_C_SetFontSize) == 0x000008, "Wrong alignment on OptionsMenuRotator_C_SetFontSize");
static_assert(sizeof(OptionsMenuRotator_C_SetFontSize) == 0x000068, "Wrong size on OptionsMenuRotator_C_SetFontSize");
static_assert(offsetof(OptionsMenuRotator_C_SetFontSize, Text) == 0x000000, "Member 'OptionsMenuRotator_C_SetFontSize::Text' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_SetFontSize, DefaultSize) == 0x000008, "Member 'OptionsMenuRotator_C_SetFontSize::DefaultSize' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_SetFontSize, MobileSize) == 0x00000C, "Member 'OptionsMenuRotator_C_SetFontSize::MobileSize' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_SetFontSize, TempFont) == 0x000010, "Member 'OptionsMenuRotator_C_SetFontSize::TempFont' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_SetFontSize, Temp_bool_Variable) == 0x000060, "Member 'OptionsMenuRotator_C_SetFontSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_SetFontSize, CallFunc_IsMobileGame_ReturnValue) == 0x000061, "Member 'OptionsMenuRotator_C_SetFontSize::CallFunc_IsMobileGame_ReturnValue' has a wrong offset!");
static_assert(offsetof(OptionsMenuRotator_C_SetFontSize, K2Node_Select_Default) == 0x000064, "Member 'OptionsMenuRotator_C_SetFontSize::K2Node_Select_Default' has a wrong offset!");

}

