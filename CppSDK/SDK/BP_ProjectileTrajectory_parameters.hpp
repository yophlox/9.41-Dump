#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileTrajectory

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ProjectileTrajectory.BP_ProjectileTrajectory_C.ExecuteUbergraph_BP_ProjectileTrajectory
// 0x0090 (0x0090 - 0x0000)
struct BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0xB];                                       // 0x0015(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_Event_SplinePoints;                         // 0x0060(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                        K2Node_Event_SplineTangents;                       // 0x0070(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory) == 0x000010, "Wrong alignment on BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory");
static_assert(sizeof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory) == 0x000090, "Wrong size on BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, EntryPoint) == 0x000000, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, Temp_int_Variable) == 0x000004, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, Temp_struct_Variable) == 0x000020, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, CallFunc_AddComponent_ReturnValue) == 0x000050, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000058, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, K2Node_Event_SplinePoints) == 0x000060, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::K2Node_Event_SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, K2Node_Event_SplineTangents) == 0x000070, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::K2Node_Event_SplineTangents' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory, K2Node_Event_DeltaSeconds) == 0x000080, "Member 'BP_ProjectileTrajectory_C_ExecuteUbergraph_BP_ProjectileTrajectory::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_ProjectileTrajectory.BP_ProjectileTrajectory_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_ProjectileTrajectory_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileTrajectory_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_ProjectileTrajectory_C_ReceiveTick");
static_assert(sizeof(BP_ProjectileTrajectory_C_ReceiveTick) == 0x000004, "Wrong size on BP_ProjectileTrajectory_C_ReceiveTick");
static_assert(offsetof(BP_ProjectileTrajectory_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_ProjectileTrajectory_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_ProjectileTrajectory.BP_ProjectileTrajectory_C.SetTrajectoryFromNative
// 0x0020 (0x0020 - 0x0000)
struct BP_ProjectileTrajectory_C_SetTrajectoryFromNative final
{
public:
	TArray<struct FVector>                        SplinePoints;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                        SplineTangents;                                    // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_ProjectileTrajectory_C_SetTrajectoryFromNative) == 0x000008, "Wrong alignment on BP_ProjectileTrajectory_C_SetTrajectoryFromNative");
static_assert(sizeof(BP_ProjectileTrajectory_C_SetTrajectoryFromNative) == 0x000020, "Wrong size on BP_ProjectileTrajectory_C_SetTrajectoryFromNative");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectoryFromNative, SplinePoints) == 0x000000, "Member 'BP_ProjectileTrajectory_C_SetTrajectoryFromNative::SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectoryFromNative, SplineTangents) == 0x000010, "Member 'BP_ProjectileTrajectory_C_SetTrajectoryFromNative::SplineTangents' has a wrong offset!");

// Function BP_ProjectileTrajectory.BP_ProjectileTrajectory_C.SetTrajectorySpline
// 0x01C0 (0x01C0 - 0x0000)
struct BP_ProjectileTrajectory_C_SetTrajectorySpline final
{
public:
	TArray<struct FVector>                        SplinePoints;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	TArray<struct FVector>                        SplineTangents;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	float                                         LastPointDist;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0064(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_3;                         // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_4;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ProjectileTrajectory_C_SetTrajectorySpline) == 0x000008, "Wrong alignment on BP_ProjectileTrajectory_C_SetTrajectorySpline");
static_assert(sizeof(BP_ProjectileTrajectory_C_SetTrajectorySpline) == 0x0001C0, "Wrong size on BP_ProjectileTrajectory_C_SetTrajectorySpline");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, SplinePoints) == 0x000000, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, SplineTangents) == 0x000010, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::SplineTangents' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, LastPointDist) == 0x000020, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::LastPointDist' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_LastIndex_ReturnValue) == 0x000028, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00002C, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000030, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000040, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000064, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, Temp_int_Array_Index_Variable_1) == 0x0000EC, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, Temp_int_Loop_Counter_Variable_1) == 0x0000F0, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_Get_Item) == 0x0000F4, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Less_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Add_IntInt_ReturnValue_2) == 0x000104, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Add_IntInt_ReturnValue_3) == 0x000108, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Multiply_IntInt_ReturnValue) == 0x00010C, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_Get_Item_2) == 0x00011C, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000128, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Normal_ReturnValue) == 0x000134, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_VSize_ReturnValue) == 0x000140, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000144, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Add_IntInt_ReturnValue_4) == 0x000150, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000154, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_Get_Item_3) == 0x000158, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Normal_ReturnValue_1) == 0x000164, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000170, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x00017C, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000188, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x000194, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x0001A0, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_Get_Item_4) == 0x0001B0, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Array_Length_ReturnValue_1) == 0x0001B8, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetTrajectorySpline, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001BC, "Member 'BP_ProjectileTrajectory_C_SetTrajectorySpline::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_ProjectileTrajectory.BP_ProjectileTrajectory_C.UpdateFromTrajectoryOwner
// 0x0018 (0x0018 - 0x0000)
struct BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner final
{
public:
	TScriptInterface<class IFortTrajectoryAbilityInterface> K2Node_DynamicCast_AsFort_Trajectory_Ability_Interface; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner) == 0x000008, "Wrong alignment on BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner");
static_assert(sizeof(BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner) == 0x000018, "Wrong size on BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner");
static_assert(offsetof(BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner, K2Node_DynamicCast_AsFort_Trajectory_Ability_Interface) == 0x000000, "Member 'BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner::K2Node_DynamicCast_AsFort_Trajectory_Ability_Interface' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ProjectileTrajectory_C_UpdateFromTrajectoryOwner::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ProjectileTrajectory.BP_ProjectileTrajectory_C.SetShouldUpdateFromOwner
// 0x0010 (0x0010 - 0x0000)
struct BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner final
{
public:
	bool                                          Param_ShouldUpdate;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Param_Owner;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner) == 0x000008, "Wrong alignment on BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner");
static_assert(sizeof(BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner) == 0x000010, "Wrong size on BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner, Param_ShouldUpdate) == 0x000000, "Member 'BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner::Param_ShouldUpdate' has a wrong offset!");
static_assert(offsetof(BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner, Param_Owner) == 0x000008, "Member 'BP_ProjectileTrajectory_C_SetShouldUpdateFromOwner::Param_Owner' has a wrong offset!");

}

