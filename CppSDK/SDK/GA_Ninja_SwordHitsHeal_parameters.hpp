#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_SwordHitsHeal

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Ninja_SwordHitsHeal.GA_Ninja_SwordHitsHeal_C.ExecuteUbergraph_GA_Ninja_SwordHitsHeal
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0008(0x00B0)(ConstParm)
};
static_assert(alignof(GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal) == 0x000008, "Wrong alignment on GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal");
static_assert(sizeof(GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal) == 0x0000B8, "Wrong size on GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal");
static_assert(offsetof(GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal, EntryPoint) == 0x000000, "Member 'GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal, K2Node_Event_EventData) == 0x000008, "Member 'GA_Ninja_SwordHitsHeal_C_ExecuteUbergraph_GA_Ninja_SwordHitsHeal::K2Node_Event_EventData' has a wrong offset!");

// Function GA_Ninja_SwordHitsHeal.GA_Ninja_SwordHitsHeal_C.SetupAbility
// 0x0008 (0x0008 - 0x0000)
struct GA_Ninja_SwordHitsHeal_C_SetupAbility final
{
public:
	class UAbilitySystemComponent*                AbilitySystem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Ninja_SwordHitsHeal_C_SetupAbility) == 0x000008, "Wrong alignment on GA_Ninja_SwordHitsHeal_C_SetupAbility");
static_assert(sizeof(GA_Ninja_SwordHitsHeal_C_SetupAbility) == 0x000008, "Wrong size on GA_Ninja_SwordHitsHeal_C_SetupAbility");
static_assert(offsetof(GA_Ninja_SwordHitsHeal_C_SetupAbility, AbilitySystem) == 0x000000, "Member 'GA_Ninja_SwordHitsHeal_C_SetupAbility::AbilitySystem' has a wrong offset!");

// Function GA_Ninja_SwordHitsHeal.GA_Ninja_SwordHitsHeal_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Ninja_SwordHitsHeal_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     Param_EventData;                                   // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Ninja_SwordHitsHeal_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_Ninja_SwordHitsHeal_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Ninja_SwordHitsHeal_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Ninja_SwordHitsHeal_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Ninja_SwordHitsHeal_C_K2_ActivateAbilityFromEvent, Param_EventData) == 0x000000, "Member 'GA_Ninja_SwordHitsHeal_C_K2_ActivateAbilityFromEvent::Param_EventData' has a wrong offset!");

// Function GA_Ninja_SwordHitsHeal.GA_Ninja_SwordHitsHeal_C.K2_ShouldAbilityRespondToEvent
// 0x00F8 (0x00F8 - 0x0000)
struct GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayEventData                     Payload;                                           // 0x0040(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldSwordHitsHealRespondToEvent_ReturnValue; // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent) == 0x000008, "Wrong alignment on GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent");
static_assert(sizeof(GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent) == 0x0000F8, "Wrong size on GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent");
static_assert(offsetof(GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent, ActorInfo) == 0x000000, "Member 'GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent, Payload) == 0x000040, "Member 'GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent::Payload' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent, ReturnValue) == 0x0000F0, "Member 'GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent, CallFunc_ShouldSwordHitsHealRespondToEvent_ReturnValue) == 0x0000F1, "Member 'GA_Ninja_SwordHitsHeal_C_K2_ShouldAbilityRespondToEvent::CallFunc_ShouldSwordHitsHealRespondToEvent_ReturnValue' has a wrong offset!");

}

