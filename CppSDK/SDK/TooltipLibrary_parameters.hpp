#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TooltipLibrary

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TooltipLibrary.TooltipLibrary_C.Create Basic Tooltip
// 0x0068 (0x0068 - 0x0000)
struct TooltipLibrary_C_Create_Basic_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Body_Text;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Header_Text;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class USlateBrushAsset*                       Icon_Brush;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Header_Style;                                      // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Body_Style;                                        // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Output;                                            // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTooltipMinusBasicMinusS_C*             CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TooltipLibrary_C_Create_Basic_Tooltip) == 0x000008, "Wrong alignment on TooltipLibrary_C_Create_Basic_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Basic_Tooltip) == 0x000068, "Wrong size on TooltipLibrary_C_Create_Basic_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Body_Text) == 0x000008, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Body_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Header_Text) == 0x000020, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Icon_Brush) == 0x000038, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Icon_Brush' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Header_Style) == 0x000040, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Header_Style' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Body_Style) == 0x000048, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Body_Style' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, __WorldContext) == 0x000050, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, Output) == 0x000058, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Tooltip, CallFunc_Create_ReturnValue) == 0x000060, "Member 'TooltipLibrary_C_Create_Basic_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Custom Tooltip
// 0x0048 (0x0048 - 0x0000)
struct TooltipLibrary_C_Create_Custom_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Header_Text;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class USlateBrushAsset*                       Icon_Brush;                                        // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Widget;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Output;                                            // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTooltipMinusCustomMinusS_C*            CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TooltipLibrary_C_Create_Custom_Tooltip) == 0x000008, "Wrong alignment on TooltipLibrary_C_Create_Custom_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Custom_Tooltip) == 0x000048, "Wrong size on TooltipLibrary_C_Create_Custom_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Header_Text) == 0x000008, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Icon_Brush) == 0x000020, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Icon_Brush' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Widget) == 0x000028, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Widget' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, __WorldContext) == 0x000030, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, Output) == 0x000038, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Custom_Tooltip, CallFunc_Create_ReturnValue) == 0x000040, "Member 'TooltipLibrary_C_Create_Custom_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Set Enabled And Tooltip Text
// 0x0040 (0x0040 - 0x0000)
struct TooltipLibrary_C_Set_Enabled_And_Tooltip_Text final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Tooltip_Text;                                      // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_Basic_Tooltip_Output;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text) == 0x000008, "Wrong alignment on TooltipLibrary_C_Set_Enabled_And_Tooltip_Text");
static_assert(sizeof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text) == 0x000040, "Wrong size on TooltipLibrary_C_Set_Enabled_And_Tooltip_Text");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, Widget) == 0x000000, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::Widget' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, Enabled) == 0x000008, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::Enabled' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, Tooltip_Text) == 0x000010, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::Tooltip_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, __WorldContext) == 0x000028, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, CallFunc_Create_Basic_Tooltip_Output) == 0x000030, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::CallFunc_Create_Basic_Tooltip_Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Set_Enabled_And_Tooltip_Text, CallFunc_TextIsEmpty_ReturnValue) == 0x000038, "Member 'TooltipLibrary_C_Set_Enabled_And_Tooltip_Text::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Item Tooltip
// 0x0118 (0x0118 - 0x0000)
struct TooltipLibrary_C_Create_Item_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Header_Text;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class USlateBrushAsset*                       Header_Icon;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              Item;                                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OverrideQuantity;                                  // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Return_Value;                                      // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
};
static_assert(alignof(TooltipLibrary_C_Create_Item_Tooltip) == 0x000008, "Wrong alignment on TooltipLibrary_C_Create_Item_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Item_Tooltip) == 0x000118, "Wrong size on TooltipLibrary_C_Create_Item_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Header_Text) == 0x000008, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Header_Icon) == 0x000020, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Header_Icon' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Item) == 0x000028, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Item' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, OverrideQuantity) == 0x000030, "Member 'TooltipLibrary_C_Create_Item_Tooltip::OverrideQuantity' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, __WorldContext) == 0x000038, "Member 'TooltipLibrary_C_Create_Item_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, Return_Value) == 0x000040, "Member 'TooltipLibrary_C_Create_Item_Tooltip::Return_Value' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, CallFunc_GetObjectName_ReturnValue) == 0x000048, "Member 'TooltipLibrary_C_Create_Item_Tooltip::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'TooltipLibrary_C_Create_Item_Tooltip::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'TooltipLibrary_C_Create_Item_Tooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'TooltipLibrary_C_Create_Item_Tooltip::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, K2Node_MakeArray_Array) == 0x0000F0, "Member 'TooltipLibrary_C_Create_Item_Tooltip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Item_Tooltip, CallFunc_Format_ReturnValue) == 0x000100, "Member 'TooltipLibrary_C_Create_Item_Tooltip::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Compare Item Tooltip
// 0x0118 (0x0118 - 0x0000)
struct TooltipLibrary_C_Create_Compare_Item_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Header_Text;                                       // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class USlateBrushAsset*                       Header_Icon;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              Item;                                              // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItem*                              ComparedItem;                                      // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                Return_Value;                                      // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0098(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0018)()
};
static_assert(alignof(TooltipLibrary_C_Create_Compare_Item_Tooltip) == 0x000008, "Wrong alignment on TooltipLibrary_C_Create_Compare_Item_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Compare_Item_Tooltip) == 0x000118, "Wrong size on TooltipLibrary_C_Create_Compare_Item_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Header_Text) == 0x000008, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Header_Icon) == 0x000020, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Header_Icon' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Item) == 0x000028, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Item' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, ComparedItem) == 0x000030, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::ComparedItem' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, __WorldContext) == 0x000038, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, Return_Value) == 0x000040, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::Return_Value' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, CallFunc_GetObjectName_ReturnValue) == 0x000048, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x000098, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, K2Node_MakeArray_Array) == 0x0000F0, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Compare_Item_Tooltip, CallFunc_Format_ReturnValue) == 0x000100, "Member 'TooltipLibrary_C_Create_Compare_Item_Tooltip::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.Create Basic Multi Line Tooltip
// 0x0050 (0x0050 - 0x0000)
struct TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip final
{
public:
	class APlayerController*                      Owning_Player;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FText>                           Body_Text;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class FText                                   Header_Text;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class USlateBrushAsset*                       Icon_Brush;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            Output;                                            // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTooltipMinusBasicMultiLineMinusS_C*    CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip) == 0x000008, "Wrong alignment on TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip");
static_assert(sizeof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip) == 0x000050, "Wrong size on TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Owning_Player) == 0x000000, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Owning_Player' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Body_Text) == 0x000008, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Body_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Header_Text) == 0x000018, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Header_Text' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Icon_Brush) == 0x000030, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Icon_Brush' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, __WorldContext) == 0x000038, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, Output) == 0x000040, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::Output' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip, CallFunc_Create_ReturnValue) == 0x000048, "Member 'TooltipLibrary_C_Create_Basic_Multi_Line_Tooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function TooltipLibrary.TooltipLibrary_C.CreateXPTooltip
// 0x0098 (0x0098 - 0x0000)
struct TooltipLibrary_C_CreateXPTooltip final
{
public:
	class APlayerController*                      Owner;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Header;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   CommanderXP;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   BoostXP;                                           // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   RestXP;                                            // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Body;                                              // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCommonUserWidget*                      Out;                                               // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UXpBarToolTip_C*                        CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TooltipLibrary_C_CreateXPTooltip) == 0x000008, "Wrong alignment on TooltipLibrary_C_CreateXPTooltip");
static_assert(sizeof(TooltipLibrary_C_CreateXPTooltip) == 0x000098, "Wrong size on TooltipLibrary_C_CreateXPTooltip");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, Owner) == 0x000000, "Member 'TooltipLibrary_C_CreateXPTooltip::Owner' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, Header) == 0x000008, "Member 'TooltipLibrary_C_CreateXPTooltip::Header' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, CommanderXP) == 0x000020, "Member 'TooltipLibrary_C_CreateXPTooltip::CommanderXP' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, BoostXP) == 0x000038, "Member 'TooltipLibrary_C_CreateXPTooltip::BoostXP' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, RestXP) == 0x000050, "Member 'TooltipLibrary_C_CreateXPTooltip::RestXP' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, Body) == 0x000068, "Member 'TooltipLibrary_C_CreateXPTooltip::Body' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, __WorldContext) == 0x000080, "Member 'TooltipLibrary_C_CreateXPTooltip::__WorldContext' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, Out) == 0x000088, "Member 'TooltipLibrary_C_CreateXPTooltip::Out' has a wrong offset!");
static_assert(offsetof(TooltipLibrary_C_CreateXPTooltip, CallFunc_Create_ReturnValue) == 0x000090, "Member 'TooltipLibrary_C_CreateXPTooltip::CallFunc_Create_ReturnValue' has a wrong offset!");

}

