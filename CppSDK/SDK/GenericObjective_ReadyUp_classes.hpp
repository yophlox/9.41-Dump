#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GenericObjective_ReadyUp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GenericObjective_ReadyUp.GenericObjective_ReadyUp_C
// 0x0100 (0x0410 - 0x0310)
class AGenericObjective_ReadyUp_C final : public AFortObjectiveBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_ReadyUp_Interact_C*                 ReadyUpActor;                                      // 0x0320(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfDifficultyIncrease;                        // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           DifficultyRowNames;                                // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UFortGameplayModifierItemDefinition*> DifficultyBoostItems;                              // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FActiveGameplayModifierHandle          DifficultyBoostItemHandle;                         // 0x0350(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         BaseDifficulty;                                    // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    PylonUsedStat_Difficutly;                          // 0x0358(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FText                                   ObjectiveText;                                     // 0x0368(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance, RepNotify)
	struct FSlateBrush                            BulletIcon;                                        // 0x0380(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         BluGloMissionActivationQty;                        // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFightTheStorm;                                   // 0x040C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GenericObjective_ReadyUp(int32 EntryPoint);
	void HandleMissionEvent_IncreaseDifficulty(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& Param_ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, const class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent);
	void HandleMissionEvent_MissionSucceeded(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& Param_ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, const class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent);
	void HandleMissionEvent_StartObjective(const struct FGuid& InMissionGuid, const struct FGameplayTagContainer& Param_ObjectiveHandle, class UFortMissionEventParams* Params_0, bool DO_NOT_USE_THIS_OR_VARIABLES_BELOW, class UObject* EventFocus, const class UDataAsset* EventContent, class AActor* EventInstigator, int32 GenericInt, float GenericFloat, const class FText& GenericText, const struct FGameplayTagContainer& GameplayTags, const struct FFortMissionEvent& MissionEvent);
	void ApplyDifficultyBoostGameplayModifierItem();
	void ApplyGameDifficultyIncrease();
	void SetDifficultyIncreaseRewardTier();
	void GetObjectiveBulletIcon(struct FSlateBrush* Param_BulletIcon);
	void OnRep_DifficultyLevel();
	void OnRep_ObjectiveText();

	class FText BlueprintGetObjectiveDisplayText() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GenericObjective_ReadyUp_C">();
	}
	static class AGenericObjective_ReadyUp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGenericObjective_ReadyUp_C>();
	}
};
static_assert(alignof(AGenericObjective_ReadyUp_C) == 0x000008, "Wrong alignment on AGenericObjective_ReadyUp_C");
static_assert(sizeof(AGenericObjective_ReadyUp_C) == 0x000410, "Wrong size on AGenericObjective_ReadyUp_C");
static_assert(offsetof(AGenericObjective_ReadyUp_C, UberGraphFrame) == 0x000310, "Member 'AGenericObjective_ReadyUp_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, DefaultSceneRoot) == 0x000318, "Member 'AGenericObjective_ReadyUp_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, ReadyUpActor) == 0x000320, "Member 'AGenericObjective_ReadyUp_C::ReadyUpActor' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, NumberOfDifficultyIncrease) == 0x000328, "Member 'AGenericObjective_ReadyUp_C::NumberOfDifficultyIncrease' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, DifficultyRowNames) == 0x000330, "Member 'AGenericObjective_ReadyUp_C::DifficultyRowNames' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, DifficultyBoostItems) == 0x000340, "Member 'AGenericObjective_ReadyUp_C::DifficultyBoostItems' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, DifficultyBoostItemHandle) == 0x000350, "Member 'AGenericObjective_ReadyUp_C::DifficultyBoostItemHandle' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, BaseDifficulty) == 0x000354, "Member 'AGenericObjective_ReadyUp_C::BaseDifficulty' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, PylonUsedStat_Difficutly) == 0x000358, "Member 'AGenericObjective_ReadyUp_C::PylonUsedStat_Difficutly' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, ObjectiveText) == 0x000368, "Member 'AGenericObjective_ReadyUp_C::ObjectiveText' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, BulletIcon) == 0x000380, "Member 'AGenericObjective_ReadyUp_C::BulletIcon' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, BluGloMissionActivationQty) == 0x000408, "Member 'AGenericObjective_ReadyUp_C::BluGloMissionActivationQty' has a wrong offset!");
static_assert(offsetof(AGenericObjective_ReadyUp_C, IsFightTheStorm) == 0x00040C, "Member 'AGenericObjective_ReadyUp_C::IsFightTheStorm' has a wrong offset!");

}

